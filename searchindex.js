Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "DevMapper", "DevMapperMultiProc", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"ivibackend_handl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1012], "exclud": [1, 121, 134, 177, 178, 179], "none": [1, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 138, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 271, 272, 273, 279, 282, 286, 289, 315, 316, 323, 324, 331, 332, 355, 356, 357, 358, 361, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 612, 618, 619, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 638, 644, 646, 647, 651, 657, 659, 662, 663, 664, 665, 667, 671, 672, 684, 685, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127, 128, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894, 1012, 1056, 1057], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1016, 1017, 1018, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 42, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 122, 124, 125, 126, 127, 130, 133, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1016, 1017, 1018, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1046, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057], "arg": [3, 20, 28, 29, 30, 74, 75, 134, 136, 138, 316, 323, 337, 341, 345, 357, 606, 663], "kwarg": [3, 28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 134, 136, 138, 316, 323, 337, 341, 345, 606, 656], "return": [3, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 311, 315, 316, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894, 1012], "current": [3, 4, 11, 15, 17, 18, 19, 20, 71, 74, 75, 76, 77, 78, 124, 128, 130, 134, 139, 150, 151, 247, 284, 285, 291, 315, 316, 323, 346, 347, 351, 353, 606, 640, 647, 651, 658, 660, 670, 688, 725, 1012], "backend": [3, 4, 5, 11, 13, 18, 19, 28, 30, 32, 74, 75, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 136, 139, 247, 284, 285, 291, 315, 316, 348, 350, 360, 606, 647, 650, 651, 657, 677, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 724, 1012, 1018], "prioriti": [3, 18, 74, 75, 131], "global_backend": 3, "argument": [3, 4, 13, 19, 28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 78, 117, 118, 120, 121, 123, 124, 125, 127, 128, 132, 134, 136, 137, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 303, 306, 316, 323, 324, 337, 341, 345, 363, 364, 367, 377, 380, 382, 385, 386, 389, 427, 430, 461, 464, 533, 544, 547, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 606, 612, 613, 617, 627, 634, 656, 663, 726, 729, 733, 736, 742, 743, 744, 747, 755, 757, 831, 865, 868], "": [3, 4, 5, 11, 14, 15, 16, 17, 18, 20, 22, 25, 26, 28, 31, 32, 33, 34, 74, 75, 117, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 176, 177, 211, 214, 229, 233, 234, 238, 247, 284, 285, 316, 332, 356, 363, 556, 559, 606, 615, 688, 694, 696, 699, 701, 708, 710, 716, 718, 743, 794, 796, 797, 799, 1012], "paramet": [3, 4, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 120, 123, 136, 137, 150, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 311, 315, 316, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 662, 663, 664, 665, 666, 668, 669, 671, 672, 673, 675, 676, 677, 678, 682, 683, 684, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "from": [3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 47, 48, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 87, 88, 93, 94, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 183, 186, 189, 194, 197, 199, 200, 203, 211, 214, 216, 219, 224, 227, 242, 246, 247, 265, 268, 303, 306, 316, 323, 324, 332, 347, 351, 356, 357, 363, 469, 472, 579, 582, 606, 627, 634, 635, 638, 676, 688, 694, 696, 708, 710, 726, 733, 736, 738, 741, 743, 755, 757, 794, 796, 806, 808, 831, 849, 852, 861, 864, 871, 874, 891, 892, 893, 894, 1012, 1018], "which": [3, 4, 13, 14, 15, 17, 18, 19, 20, 33, 34, 35, 36, 41, 42, 51, 52, 53, 54, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 162, 167, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 208, 209, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 270, 274, 277, 279, 282, 286, 289, 291, 315, 316, 323, 324, 333, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 353, 355, 356, 357, 363, 556, 559, 606, 612, 624, 625, 627, 634, 635, 638, 640, 646, 650, 658, 659, 660, 662, 663, 686, 688, 694, 696, 698, 699, 701, 708, 710, 712, 714, 716, 718, 721, 723, 724, 726, 741, 743, 749, 751, 755, 757, 771, 773, 791, 793, 794, 796, 806, 808, 809, 811, 815, 821, 824, 826, 829, 831, 837, 840, 849, 852, 857, 860, 865, 868, 870, 875, 878, 1012], "try": [3, 12, 14, 15, 17, 18, 19, 20, 74, 75, 127, 128, 132, 136, 151, 606, 684, 1012], "infer": [3, 33, 34, 117, 125, 129, 130, 134, 139, 174, 175, 177, 178, 179, 181, 183, 186, 189, 199, 200, 203, 216, 219, 224, 227, 242, 246, 363, 469, 472, 606, 643, 669, 831, 861, 864], "when": [3, 13, 14, 17, 18, 19, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 151, 247, 250, 253, 316, 363, 377, 380, 457, 460, 552, 555, 606, 617, 650, 672, 815, 816, 819, 821, 824, 826, 829, 1012], "i": [3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 162, 163, 167, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 265, 268, 274, 277, 291, 292, 295, 297, 300, 315, 316, 323, 324, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 352, 356, 357, 359, 360, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 403, 406, 411, 414, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 465, 468, 477, 480, 481, 484, 485, 488, 493, 496, 497, 500, 501, 504, 509, 512, 513, 516, 533, 534, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 617, 618, 619, 621, 624, 625, 627, 631, 633, 634, 645, 646, 650, 652, 653, 654, 655, 656, 657, 661, 662, 663, 666, 686, 687, 688, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 725, 726, 729, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 767, 770, 771, 773, 775, 777, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 800, 802, 803, 805, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 875, 878, 887, 890, 891, 892, 893, 894, 1012], "global": [3, 4, 5, 11, 55, 56, 71, 74, 75, 76, 77, 78, 101, 102, 124, 125, 129, 130, 134, 247, 271, 272, 273, 316, 323, 324, 355, 356, 357, 606, 641, 642, 661, 664, 665, 666, 671, 672, 688, 725], "set": [3, 4, 5, 11, 13, 16, 18, 28, 31, 32, 41, 42, 43, 44, 62, 74, 75, 87, 88, 89, 90, 108, 117, 118, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 316, 332, 342, 343, 354, 355, 356, 357, 363, 395, 398, 606, 607, 610, 664, 665, 666, 667, 668, 688, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 743, 749, 751, 771, 773, 775, 777, 784, 786, 791, 793], "ret": [3, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 120, 134, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 315, 316, 323, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 662, 663, 669, 671, 672, 673, 675, 676, 677, 678, 682, 683, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "exampl": [3, 4, 5, 11, 15, 17, 18, 19, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 162, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 199, 200, 203, 211, 214, 221, 222, 224, 227, 239, 241, 242, 246, 247, 250, 253, 265, 268, 274, 277, 284, 285, 297, 300, 315, 316, 332, 333, 335, 347, 348, 349, 350, 351, 354, 356, 358, 360, 361, 363, 364, 367, 377, 380, 382, 385, 386, 389, 399, 402, 403, 406, 407, 410, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 461, 464, 469, 472, 473, 476, 489, 492, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 623, 624, 631, 634, 635, 638, 642, 653, 667, 669, 670, 676, 678, 682, 683, 685, 688, 689, 692, 703, 706, 725, 726, 727, 729, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 775, 777, 781, 783, 794, 796, 800, 802, 803, 805, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 1012], "If": [3, 4, 5, 13, 16, 17, 18, 19, 20, 28, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 151, 177, 178, 179, 185, 186, 189, 191, 192, 199, 200, 203, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 303, 306, 316, 332, 356, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 521, 524, 525, 528, 535, 538, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 606, 650, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 725, 743, 744, 747, 749, 751, 771, 773, 775, 777, 784, 786, 787, 789, 791, 793, 794, 796, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 845, 848, 849, 852, 865, 868, 870, 871, 874, 875, 878, 891, 892, 893, 1012], "import": [3, 14, 19, 69, 70, 115, 116, 118, 120, 121, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 151, 316, 354, 1012, 1018], "numpi": [3, 4, 5, 13, 14, 18, 19, 41, 42, 74, 75, 87, 88, 119, 123, 125, 129, 130, 131, 134, 136, 139, 606, 678, 682, 1012], "np": [3, 119, 123, 127, 129, 130, 131, 136, 137, 139, 1012], "x": [3, 11, 20, 22, 25, 26, 28, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 120, 121, 123, 124, 125, 128, 131, 132, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 181, 183, 186, 189, 194, 197, 200, 203, 211, 214, 216, 219, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 265, 268, 274, 277, 297, 300, 316, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 347, 351, 356, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 423, 426, 427, 430, 431, 434, 436, 439, 449, 452, 453, 456, 457, 460, 461, 464, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 521, 524, 533, 534, 540, 543, 548, 551, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 616, 618, 619, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 642, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 659, 669, 673, 676, 678, 682, 683, 686, 687, 688, 698, 703, 706, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 794, 796, 797, 799, 800, 802, 803, 805, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "arrai": [3, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 151, 152, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 265, 268, 274, 277, 279, 282, 286, 289, 292, 295, 297, 300, 303, 306, 311, 316, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 353, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 616, 618, 619, 621, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 645, 646, 647, 648, 649, 650, 652, 653, 655, 658, 659, 660, 662, 663, 667, 669, 673, 676, 678, 682, 683, 685, 686, 687, 688, 689, 692, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894, 1012], "2": [3, 17, 18, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 121, 123, 125, 128, 133, 134, 136, 137, 138, 139, 151, 162, 164, 165, 166, 167, 173, 176, 177, 199, 200, 203, 211, 214, 221, 222, 224, 227, 242, 246, 247, 250, 253, 265, 268, 274, 277, 297, 300, 316, 332, 333, 335, 347, 349, 351, 358, 363, 364, 367, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 403, 406, 407, 410, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 461, 464, 469, 472, 473, 476, 489, 492, 493, 496, 509, 512, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 618, 619, 621, 624, 631, 634, 635, 638, 653, 669, 676, 688, 689, 692, 703, 706, 726, 729, 730, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 767, 770, 771, 773, 775, 777, 781, 783, 784, 786, 787, 789, 794, 796, 800, 802, 803, 805, 809, 811, 815, 816, 819, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 871, 874, 879, 882, 1012], "0": [3, 18, 22, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 123, 134, 136, 137, 138, 139, 162, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 191, 192, 205, 206, 208, 209, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 265, 268, 274, 277, 279, 282, 297, 300, 316, 317, 320, 323, 325, 329, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 354, 356, 357, 361, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 411, 414, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 473, 476, 493, 496, 497, 500, 501, 504, 509, 512, 533, 534, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 618, 619, 621, 623, 624, 625, 631, 634, 635, 638, 644, 653, 659, 662, 663, 669, 676, 678, 682, 683, 688, 689, 692, 694, 696, 703, 706, 708, 710, 712, 714, 726, 727, 729, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 794, 796, 800, 802, 803, 805, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 865, 868, 870, 871, 874, 875, 878, 879, 882, 1012], "print": [3, 4, 5, 11, 17, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 121, 123, 128, 134, 136, 137, 138, 162, 164, 165, 166, 167, 168, 171, 173, 177, 199, 200, 203, 211, 214, 221, 222, 224, 227, 239, 241, 242, 246, 247, 250, 253, 265, 268, 274, 277, 284, 285, 297, 300, 315, 316, 333, 347, 348, 349, 350, 351, 353, 356, 360, 363, 364, 367, 377, 380, 382, 385, 386, 389, 399, 402, 403, 406, 407, 410, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 461, 464, 469, 472, 473, 476, 489, 492, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 623, 624, 631, 634, 635, 638, 642, 660, 669, 676, 678, 682, 683, 688, 689, 692, 703, 706, 725, 726, 727, 729, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 781, 783, 794, 796, 800, 802, 803, 805, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 871, 874, 879, 882, 1012], "modul": [3, 4, 15, 17, 20, 69, 70, 71, 74, 75, 76, 77, 78, 115, 116, 123, 124, 125, 127, 131, 132, 134, 135, 137, 139, 150, 151, 606, 657, 1012], "function": [3, 4, 5, 13, 18, 20, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 127, 131, 132, 133, 135, 136, 137, 138, 149, 150, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894, 1012], "__init__": [3, 4, 22, 25, 26, 27, 71, 74, 75, 76, 77, 78, 118, 125, 129, 134, 136, 137, 138, 139, 247, 316, 323, 324, 325, 326, 327, 328, 688, 1012], "py": [3, 4, 18, 118, 119, 120, 123, 124, 125, 129, 130, 132, 134, 136, 138, 139], "noqa": [3, 4, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 377, 380, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 493, 496, 533, 544, 547, 560, 563, 564, 567, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "The": [3, 4, 12, 13, 15, 16, 17, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 150, 162, 163, 164, 167, 173, 174, 175, 177, 178, 179, 194, 197, 208, 209, 229, 233, 234, 238, 247, 248, 249, 250, 253, 270, 278, 284, 285, 291, 292, 295, 302, 311, 315, 316, 323, 324, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 359, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 606, 612, 614, 617, 618, 626, 627, 633, 635, 638, 648, 649, 650, 652, 653, 654, 655, 657, 662, 663, 664, 665, 666, 671, 672, 675, 677, 687, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 870, 883, 886, 891, 892, 893, 894, 1012], "set_backend": [3, 4, 11, 124, 125, 126, 129, 247, 284, 285, 316, 354, 606, 669, 1012], "ha": [3, 4, 13, 14, 15, 18, 61, 62, 74, 75, 107, 108, 120, 121, 123, 124, 125, 126, 129, 130, 132, 134, 136, 138, 139, 150, 151, 177, 211, 214, 316, 332, 363, 364, 367, 535, 538, 552, 555, 688, 725, 743, 767, 770, 790, 791, 793, 794, 796, 803, 805, 831, 845, 848, 871, 874], "over": [3, 13, 15, 17, 67, 68, 69, 70, 74, 75, 113, 114, 115, 116, 120, 121, 123, 125, 131, 136, 151, 743, 771, 773, 800, 802, 806, 808, 809, 811], "ani": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 33, 34, 41, 42, 67, 68, 69, 70, 74, 75, 87, 88, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 316, 358, 363, 364, 367, 377, 380, 382, 385, 386, 389, 427, 430, 445, 448, 461, 464, 473, 476, 493, 496, 533, 544, 547, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 606, 607, 610, 627, 628, 629, 630, 631, 634, 645, 652, 653, 654, 655, 671, 672, 688, 698, 726, 729, 733, 736, 740, 742, 743, 744, 747, 755, 757, 831, 865, 868, 891, 892, 893, 894, 1012], "pass": [3, 19, 69, 70, 71, 74, 75, 76, 77, 78, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 136, 151, 247, 270, 316, 323, 357, 363, 395, 398, 606, 617, 650, 688, 724, 891, 892, 893], "jax": [3, 4, 5, 14, 15, 18, 19, 43, 44, 89, 90, 119, 123, 125, 129, 130, 131, 134, 136, 139, 151, 688, 703, 706, 1012], "specifi": [4, 33, 34, 51, 52, 53, 54, 67, 68, 74, 75, 97, 98, 99, 100, 113, 114, 117, 119, 123, 124, 129, 130, 131, 134, 137, 138, 139, 177, 178, 179, 185, 199, 205, 206, 208, 209, 221, 222, 229, 233, 234, 238, 239, 241, 247, 250, 253, 260, 263, 316, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 351, 353, 356, 357, 358, 363, 556, 559, 606, 612, 624, 634, 635, 638, 645, 686, 743, 755, 757, 771, 773, 800, 802, 803, 805, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 849, 852, 865, 868, 871, 874, 875, 878, 887, 890], "isn": [4, 18, 137, 151], "t": [4, 14, 15, 17, 18, 19, 20, 22, 25, 26, 69, 70, 115, 116, 121, 123, 129, 134, 136, 137, 138, 139, 151, 606, 615, 726, 739, 740], "associ": [4, 18, 123, 124, 126, 151, 363, 377, 380, 535, 538, 743, 775, 777, 784, 786, 812, 814], "option": [4, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 128, 129, 130, 131, 132, 134, 139, 151, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 270, 271, 272, 273, 291, 315, 316, 332, 356, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 612, 618, 619, 621, 624, 625, 626, 628, 629, 630, 632, 634, 635, 638, 646, 657, 659, 662, 663, 671, 672, 688, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "str": [4, 28, 29, 30, 47, 48, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 129, 130, 132, 174, 175, 177, 211, 214, 247, 248, 270, 271, 272, 278, 279, 282, 286, 289, 291, 292, 295, 297, 300, 308, 309, 310, 315, 316, 329, 332, 333, 335, 338, 339, 340, 341, 357, 606, 612, 626, 628, 629, 630, 657, 662, 663, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 787, 789, 891, 892, 893, 894], "we": [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 69, 70, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 150, 151, 688, 698, 1012, 1018], "want": [4, 14, 16, 17, 18, 69, 70, 115, 116, 123, 137, 138, 139, 151], "retriev": [4, 18, 606, 612], "e": [4, 14, 15, 16, 18, 20, 117, 123, 128, 137, 151, 176, 177, 211, 214, 247, 249, 303, 306, 316, 329, 363, 364, 367, 395, 398, 411, 414, 419, 422, 427, 430, 453, 456, 461, 464, 465, 468, 477, 480, 497, 500, 505, 508, 533, 534, 540, 543, 552, 555, 556, 559, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 743, 749, 751, 767, 770, 775, 777, 784, 786, 791, 793, 794, 796, 809, 811, 831, 875, 878], "one": [4, 14, 15, 17, 18, 22, 25, 26, 61, 62, 74, 75, 85, 86, 87, 88, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 119, 121, 123, 124, 127, 128, 129, 131, 132, 133, 136, 137, 139, 151, 177, 178, 179, 211, 214, 247, 255, 258, 265, 268, 316, 342, 343, 344, 345, 357, 363, 533, 606, 607, 610, 656, 659, 662, 663, 743, 767, 770, 771, 773, 781, 783, 787, 789, 806, 808, 809, 811, 831, 845, 848, 849, 852, 865, 868, 871, 874, 1012], "default": [4, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 128, 129, 130, 138, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 271, 272, 273, 274, 277, 316, 323, 324, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 352, 354, 355, 356, 357, 358, 361, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 618, 619, 621, 624, 625, 628, 629, 630, 632, 633, 634, 635, 638, 643, 644, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 659, 661, 662, 663, 666, 669, 671, 672, 686, 687, 688, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "torch": [4, 11, 18, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 174, 175, 247, 284, 285, 297, 300, 316, 354, 606, 669, 831, 845, 848, 1012], "tensorflow": [4, 11, 14, 15, 18, 19, 119, 123, 129, 130, 131, 134, 139, 151, 1012], "mxnet": [4, 14, 19, 129, 130, 131, 134, 139, 1012], "either": [4, 11, 17, 18, 20, 74, 75, 120, 121, 123, 124, 125, 128, 129, 130, 134, 136, 137, 151, 177, 194, 197, 363, 377, 380, 395, 398, 481, 484, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 556, 559, 564, 567, 569, 572, 592, 596, 606, 627, 652, 656, 657, 743, 767, 770, 891, 892, 893, 894], "doesn": [4, 17, 20, 121, 123, 129, 134, 151], "matter": [4, 13, 121], "been": [4, 18, 119, 120, 123, 124, 125, 128, 129, 130, 132, 134, 150, 151, 316, 332, 606, 628, 629, 630], "ivy_np": [4, 123], "us": [4, 11, 15, 18, 19, 39, 40, 53, 54, 55, 56, 69, 70, 71, 74, 75, 76, 77, 78, 85, 86, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 150, 151, 162, 164, 165, 166, 167, 168, 171, 173, 176, 247, 278, 316, 323, 324, 348, 352, 355, 356, 357, 358, 360, 362, 363, 382, 385, 403, 406, 423, 426, 436, 439, 473, 476, 493, 496, 534, 540, 543, 544, 547, 560, 563, 579, 582, 606, 634, 641, 642, 656, 662, 663, 664, 665, 671, 672, 688, 689, 692, 694, 696, 708, 710, 712, 714, 726, 732, 738, 739, 741, 742, 743, 752, 754, 755, 757, 771, 773, 815, 816, 819, 831, 845, 848, 849, 852, 857, 860, 865, 868, 879, 882, 891, 892, 893, 894, 1012], "ivy_jax": 4, "subsequ": [5, 17, 119, 121, 123, 124, 127, 131, 138], "call": [5, 11, 14, 20, 71, 76, 77, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 316, 357, 606, 661, 666, 684, 688, 698], "nativ": [5, 28, 30, 31, 32, 33, 34, 74, 75, 123, 129, 131, 136, 137, 177, 216, 219, 247, 248, 249, 270, 316, 329, 330, 331, 332, 333, 352, 359, 362, 606, 650, 652, 655, 677], "native_arrai": [5, 11, 33, 34, 41, 42, 79, 80, 87, 88, 123, 162, 164, 165, 166, 167, 168, 171, 173, 177, 211, 214, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 335, 351, 363, 364, 367, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 461, 464, 473, 476, 493, 496, 534, 540, 543, 544, 547, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 597, 601, 606, 607, 610, 615, 623, 624, 631, 634, 635, 638, 676, 678, 682, 683, 688, 689, 692, 703, 706, 726, 729, 732, 733, 736, 742, 743, 749, 751, 752, 754, 755, 757, 800, 802, 815, 816, 819, 826, 829, 831, 832, 835, 845, 848, 849, 852, 857, 860, 870, 879, 882], "1": [5, 11, 14, 15, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 67, 68, 71, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 121, 123, 124, 128, 131, 132, 133, 134, 136, 137, 138, 139, 151, 162, 164, 165, 166, 167, 173, 177, 178, 179, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 242, 246, 247, 250, 253, 265, 268, 274, 277, 279, 282, 297, 300, 316, 319, 322, 323, 327, 332, 333, 335, 337, 341, 345, 347, 350, 351, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 395, 398, 403, 406, 407, 410, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 469, 472, 473, 476, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 533, 534, 540, 543, 544, 547, 552, 555, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 623, 624, 631, 634, 635, 638, 653, 659, 662, 663, 669, 672, 676, 678, 682, 683, 686, 688, 689, 692, 703, 706, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 775, 777, 781, 783, 791, 793, 794, 796, 800, 802, 803, 805, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 1012], "type": [5, 11, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 130, 131, 132, 134, 136, 137, 139, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 311, 315, 316, 329, 330, 331, 332, 333, 335, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 614, 615, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 641, 642, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 659, 662, 663, 664, 665, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 682, 683, 685, 686, 687, 688, 689, 692, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894, 1012], "class": [5, 11, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 127, 128, 129, 130, 134, 135, 137, 138, 139, 149, 150, 151, 247, 286, 289, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 606, 613, 650, 656, 688, 724, 1012], "ndarrai": [5, 33, 34, 119, 127, 129, 130, 131, 136, 177, 181, 183, 216, 219, 606, 678, 682], "Or": [5, 137], "jaxlib": [5, 17, 119, 129, 130, 136], "xla_extens": [5, 119, 129, 130, 136], "devicearrai": [5, 136], "warn": [6, 7, 8, 9, 10], "fals": [6, 7, 8, 9, 10, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 49, 50, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 128, 131, 132, 137, 138, 139, 247, 250, 253, 265, 268, 274, 277, 297, 300, 315, 316, 332, 333, 344, 348, 349, 352, 357, 360, 362, 363, 403, 406, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 521, 524, 525, 528, 544, 547, 606, 607, 610, 614, 615, 624, 627, 631, 633, 643, 650, 652, 653, 655, 656, 667, 669, 670, 685, 686, 688, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 725, 743, 744, 747, 771, 773, 794, 796, 809, 811, 831, 870, 891, 892, 893, 894], "unset": [11, 125, 134, 136], "adjust": 11, "dict": [11, 28, 29, 30, 31, 32, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 128, 132, 137, 138, 316, 323, 324, 332, 335, 338, 339, 340, 341, 606, 612, 628, 629, 630], "previous": [11, 17, 20, 123, 124, 134, 606, 617], "otherwis": [11, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 43, 44, 49, 50, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 127, 128, 129, 130, 134, 136, 177, 178, 179, 247, 250, 253, 265, 268, 271, 272, 273, 297, 300, 316, 332, 363, 477, 480, 481, 484, 485, 488, 606, 616, 684, 688, 703, 706, 721, 743, 744, 747, 752, 754, 806, 808, 809, 811, 891, 892, 893], "implement": [11, 19, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 247, 250, 253, 303, 306, 316, 358, 363, 364, 367, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 453, 456, 457, 460, 497, 500, 501, 504, 505, 508, 509, 512, 535, 538, 552, 555, 556, 559, 569, 572, 574, 577, 592, 596, 597, 601, 743, 758, 760, 1012], "wa": [11, 14, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 121, 134, 136, 606, 684], "last": [11, 15, 18, 51, 52, 67, 68, 74, 75, 97, 98, 113, 114, 121, 123, 125, 132, 151, 162, 167, 316, 332, 688, 725, 726, 740, 743, 749, 751, 755, 757, 771, 773, 803, 805, 806, 808, 815, 821, 824, 826, 829, 831, 849, 852, 865, 868, 870, 875, 878], "henc": [11, 123, 128], "here": [11, 17, 18, 19, 118, 119, 121, 123, 128, 134, 135, 136, 137, 138, 139, 150, 151], "tensor": [11, 13, 74, 75, 118, 119, 124, 125, 127, 129, 130, 131, 134, 136, 137, 138, 139, 151, 177, 205, 206, 208, 209, 247, 274, 277, 363, 403, 406, 533, 534, 606, 659, 662, 663, 726, 738, 740, 743, 800, 802, 831, 845, 848, 861, 864, 870, 1012], "howev": [11, 14, 17, 19, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 136, 137, 138, 139, 151], "befor": [11, 17, 18, 19, 74, 75, 120, 123, 127, 129, 130, 131, 134, 137, 151, 316, 357, 363, 602, 605, 726, 741, 742, 891, 892, 893], "becom": [11, 13, 15, 18, 121, 128, 134, 139, 151, 831, 832, 835], "swap": [11, 831, 879, 882], "python": [11, 12, 13, 14, 17, 18, 20, 123, 132, 134, 136, 137, 151, 177, 178, 179, 316, 352, 362, 363, 556, 559, 1012, 1018], "op": [11, 118, 134, 151], "eagertensor": 11, "ml": [12, 14, 15, 16, 133, 134, 135, 137, 138, 139, 150, 1012, 1018], "explos": [12, 14, 1012], "A": [12, 13, 14, 15, 20, 33, 34, 67, 68, 71, 74, 75, 76, 77, 78, 99, 100, 113, 114, 117, 123, 124, 128, 129, 130, 134, 137, 151, 177, 191, 192, 216, 219, 316, 323, 324, 357, 363, 548, 551, 606, 642, 676, 743, 781, 783, 790, 791, 793, 794, 796, 831, 870, 875, 878, 1012], "huge": [12, 14, 137, 1012], "number": [12, 13, 17, 22, 25, 26, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 99, 100, 107, 108, 113, 114, 121, 123, 128, 130, 131, 134, 137, 139, 174, 175, 176, 177, 178, 179, 181, 183, 191, 192, 205, 206, 208, 209, 211, 214, 216, 219, 247, 255, 258, 278, 279, 282, 286, 289, 292, 295, 297, 300, 303, 306, 316, 349, 350, 351, 363, 377, 380, 395, 398, 427, 430, 461, 464, 465, 468, 533, 534, 535, 538, 552, 555, 556, 559, 560, 563, 564, 567, 602, 605, 606, 607, 610, 633, 642, 643, 658, 683, 687, 726, 741, 743, 755, 757, 758, 760, 775, 777, 790, 794, 796, 806, 808, 831, 832, 835, 841, 844, 853, 856, 857, 860, 865, 868, 870, 875, 878, 883, 886, 887, 890, 891, 892, 893, 894, 1012], "tool": [12, 15, 18, 135, 139, 150, 151, 1012], "have": [12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 151, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 279, 282, 316, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 628, 629, 630, 632, 635, 638, 646, 659, 662, 663, 688, 703, 706, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "explod": [12, 13, 1012], "onto": [12, 13, 316, 342, 343, 1012], "scene": [12, 13, 117, 133, 135, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 1012], "b": [12, 15, 16, 22, 25, 26, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 121, 124, 125, 128, 133, 134, 135, 137, 138, 139, 149, 177, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 335, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 431, 434, 436, 439, 461, 464, 473, 476, 493, 496, 533, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 623, 624, 631, 634, 635, 638, 678, 682, 683, 688, 689, 692, 703, 706, 726, 729, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 781, 783, 791, 793, 800, 802, 812, 814, 815, 816, 819, 831, 832, 835, 845, 848, 849, 852, 857, 860, 865, 868, 875, 878, 879, 882, 1012, 1018], "why": [12, 14, 18, 119, 128, 131, 136, 1012], "unifi": [12, 14, 74, 75, 127, 134, 151, 316, 342, 343, 344, 345, 357, 1012], "should": [12, 14, 17, 18, 19, 20, 22, 25, 26, 33, 34, 39, 40, 49, 50, 71, 74, 75, 76, 77, 78, 85, 86, 95, 96, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 174, 175, 177, 211, 214, 229, 233, 234, 238, 247, 260, 263, 316, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 453, 456, 457, 460, 461, 464, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 617, 650, 659, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 767, 770, 775, 777, 781, 783, 784, 786, 787, 789, 791, 793, 794, 796, 800, 802, 803, 805, 806, 808, 809, 811, 831, 861, 864, 1012], "them": [12, 13, 14, 15, 123, 125, 127, 128, 134, 136, 137, 138, 151, 1012], "c": [12, 14, 15, 16, 17, 43, 44, 85, 86, 89, 90, 103, 104, 117, 121, 124, 128, 133, 134, 135, 137, 151, 363, 544, 547, 564, 567, 606, 614, 615, 623, 683, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 732, 831, 875, 878, 1012, 1018], "standard": [12, 55, 56, 101, 102, 117, 118, 119, 120, 122, 123, 127, 131, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 279, 282, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 493, 496, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868, 1012, 1018], "re": [12, 13, 14, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 139, 151, 316, 357, 606, 628, 743, 800, 802, 831, 865, 868, 1012], "collabor": [12, 13, 14, 1012], "consortium": [12, 14, 1012, 1018], "data": [12, 14, 22, 25, 26, 27, 33, 34, 36, 39, 40, 43, 44, 49, 50, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 82, 85, 86, 89, 90, 95, 96, 99, 100, 107, 108, 113, 114, 117, 118, 119, 120, 124, 126, 128, 130, 131, 136, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 248, 249, 250, 253, 260, 263, 265, 268, 270, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 311, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 535, 538, 544, 547, 552, 555, 556, 559, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 614, 615, 652, 653, 655, 673, 688, 703, 706, 724, 726, 739, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 791, 793, 794, 796, 800, 802, 803, 805, 806, 808, 809, 811, 831, 845, 848, 849, 852, 853, 856, 861, 864, 865, 868, 871, 874, 875, 878, 1012, 1018], "api": [12, 13, 17, 18, 117, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 133, 135, 137, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 493, 496, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868, 1012, 1018], "open": [13, 14, 15, 16, 17, 20, 103, 104, 120, 150, 177, 178, 179, 1012], "project": [13, 14, 15, 17, 18, 20, 118, 123, 125, 136, 138, 150, 151], "grown": 13, "consider": [13, 119, 121], "recent": [13, 14, 17, 18, 123], "year": [13, 15, 151, 1012], "especi": [13, 17], "deep": [13, 16, 18, 19, 74, 75, 128, 133, 137, 1012], "learn": [13, 14, 17, 19, 117, 124, 133, 139, 150, 363, 469, 472, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894, 1012], "can": [13, 14, 15, 16, 17, 18, 33, 34, 35, 36, 81, 82, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 177, 181, 183, 216, 219, 247, 265, 268, 316, 355, 356, 357, 743, 764, 766, 831, 861, 864, 1012, 1018], "seen": [13, 14, 121, 123, 136, 137], "rapidli": 13, "increas": [13, 316, 337, 341, 345, 831, 841, 844, 887, 890], "github": [13, 18, 19, 120, 123], "repo": [13, 14, 15, 17, 18, 122, 134, 136, 137, 138, 139, 150, 1012, 1018], "contain": [13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 39, 40, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 129, 131, 133, 134, 135, 138, 139, 151, 162, 165, 166, 168, 171, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 334, 335, 338, 347, 351, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 615, 618, 619, 621, 623, 624, 631, 634, 635, 638, 645, 654, 676, 678, 682, 683, 688, 689, 692, 703, 706, 726, 729, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 845, 848, 849, 852, 853, 856, 857, 860, 865, 868, 870, 879, 882, 891, 892, 893, 894, 1012], "term": [13, 18, 128, 726, 740], "time": [13, 14, 15, 17, 18, 19, 61, 62, 107, 108, 119, 123, 124, 128, 129, 134, 137, 139, 151, 688, 694, 696, 708, 710, 726, 740, 831, 883, 886, 891, 892, 893, 894], "These": [13, 14, 15, 18, 119, 120, 121, 123, 124, 128, 129, 131, 134, 135, 137, 138, 139, 151, 743, 758, 760, 1012, 1018], "ar": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 39, 40, 41, 42, 53, 54, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 99, 100, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 152, 160, 177, 178, 179, 316, 323, 324, 347, 351, 353, 357, 363, 431, 434, 521, 524, 525, 528, 560, 563, 569, 572, 592, 596, 606, 607, 610, 614, 615, 616, 640, 646, 647, 651, 658, 660, 673, 688, 725, 726, 739, 743, 749, 751, 767, 770, 771, 773, 775, 777, 784, 786, 794, 796, 797, 799, 806, 808, 831, 832, 835, 849, 852, 865, 868, 1012], "written": [13, 17, 118, 119, 120, 123, 127, 131, 134, 136, 139, 151], "mani": [13, 14, 15, 17, 18, 19, 74, 75, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 151, 831, 870], "differ": [13, 14, 15, 17, 18, 71, 74, 75, 76, 77, 78, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 151, 247, 279, 282, 316, 334, 335, 338, 339, 363, 377, 380, 535, 538, 587, 591, 726, 739, 831, 875, 878, 1012], "while": [13, 14, 17, 18, 71, 74, 75, 76, 77, 78, 121, 123, 125, 131, 132, 138, 139, 151, 363, 521, 524, 525, 528], "thi": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 316, 337, 341, 345, 352, 357, 362, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 419, 422, 423, 426, 427, 430, 436, 439, 457, 460, 461, 464, 493, 496, 521, 524, 525, 528, 533, 544, 547, 556, 559, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 633, 634, 650, 661, 666, 688, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 724, 725, 726, 729, 733, 736, 739, 742, 743, 744, 747, 752, 754, 755, 757, 771, 773, 790, 831, 845, 848, 849, 852, 861, 864, 865, 868, 875, 878, 1012, 1018], "wonder": [13, 15, 136], "thing": [13, 14, 15, 17, 18, 19, 123, 125, 136, 137], "research": [13, 150], "develop": [13, 14, 15, 16, 17, 18, 19, 150, 151, 1012], "also": [13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 650, 688, 694, 696, 726, 729, 733, 736, 739, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868, 891, 892, 893, 894], "consid": [13, 14, 74, 75, 118, 124, 135, 136, 137, 363, 521, 524, 525, 528], "speed": [13, 123], "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 17, 18, 19, 20, 71, 74, 75, 76, 77, 78, 89, 90, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 149, 151, 162, 164, 165, 166, 167, 168, 171, 173, 316, 335, 358, 363, 423, 426, 583, 586, 688, 689, 692, 725, 726, 732, 733, 736, 1012, 1018], "significantli": 13, "hinder": [13, 119], "librari": [13, 14, 15, 22, 25, 26, 134, 139, 149, 151, 316, 358, 363, 457, 460, 521, 524, 525, 528, 743, 758, 760, 1012], "outdat": 13, "month": 13, "rigor": [13, 123], "maintain": [13, 18], "against": [13, 74, 75, 123, 151, 247, 255, 258, 743, 767, 770, 771, 773, 775, 777, 784, 786], "newest": 13, "version": [13, 14, 15, 17, 120, 129, 134, 136, 743, 758, 760, 1012], "For": [13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 43, 44, 89, 90, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 211, 214, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 688, 703, 706, 724, 743, 794, 796, 803, 805, 831, 832, 835, 875, 878], "softwar": [13, 14, 17, 18], "pipelin": [13, 127, 139], "where": [13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 53, 54, 67, 68, 74, 75, 99, 100, 113, 114, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 151, 177, 199, 200, 203, 211, 214, 363, 395, 398, 453, 456, 505, 508, 535, 538, 552, 555, 606, 646, 650, 659, 688, 725, 743, 758, 760, 775, 777, 784, 786, 787, 789, 794, 796, 797, 799, 803, 805, 806, 808, 831, 832, 835, 841, 844, 845, 848, 853, 856, 875, 878, 887, 890, 1012], "rapid": [13, 14, 17], "prototyp": 13, "vital": [13, 139], "signific": [13, 14, 151], "bottleneck": 13, "As": [13, 18, 69, 70, 115, 116, 119, 123, 124, 127, 128, 129, 130, 131, 134, 136, 137, 138, 151], "new": [13, 14, 15, 16, 17, 18, 19, 20, 41, 42, 55, 56, 74, 75, 81, 82, 87, 88, 101, 102, 117, 118, 120, 121, 123, 126, 128, 129, 131, 133, 136, 139, 150, 177, 185, 194, 197, 199, 200, 203, 221, 222, 224, 227, 239, 241, 242, 246, 247, 311, 363, 399, 402, 505, 508, 548, 551, 606, 628, 629, 630, 633, 634, 635, 638, 662, 663, 664, 665, 671, 672, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 831, 845, 848, 861, 864, 875, 878, 1012], "futur": [13, 15, 17, 18, 136, 151, 743, 758, 760], "avail": [13, 17, 18, 74, 75, 120, 130, 151, 316, 332, 348, 349, 350, 360, 606, 629], "specif": [13, 19, 74, 75, 119, 123, 124, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 150, 151, 247, 303, 306, 316, 355, 358, 363, 521, 524, 525, 528, 606, 628, 629, 630, 657, 743, 758, 760, 800, 802, 831, 875, 878, 891, 892, 893, 894, 1012, 1018], "quickli": [13, 15, 17, 18, 137, 138], "obsolet": [13, 15], "user": [13, 14, 17, 18, 20, 117, 123, 125, 128, 131, 133, 151], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 69, 70, 115, 116, 121, 123, 128, 132, 133, 136, 137, 138, 139, 151, 1012], "desir": [13, 35, 36, 74, 75, 81, 82, 247, 250, 253, 265, 268, 316, 358, 606, 646], "provid": [13, 17, 18, 67, 68, 74, 75, 113, 114, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 134, 138, 150, 151, 174, 175, 177, 211, 214, 247, 271, 272, 273, 291, 303, 306, 315, 316, 332, 606, 627, 659, 663, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 743, 806, 808, 831, 849, 852, 875, 878], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 41, 42, 53, 54, 67, 68, 69, 70, 74, 75, 87, 88, 99, 100, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 152, 160, 174, 175, 177, 178, 179, 229, 233, 234, 238, 316, 323, 347, 353, 606, 607, 610, 614, 615, 640, 660, 678, 682, 726, 740, 743, 791, 793, 800, 802, 809, 811, 831, 849, 852, 865, 868, 891, 892, 893, 894, 1012], "modern": [13, 14], "simpl": [13, 17, 18, 118, 120, 121, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 139, 151, 606, 631], "scalabl": [13, 134], "manner": [13, 28, 31, 32, 74, 75, 118, 120, 123, 130, 137, 150, 151], "must": [13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 124, 127, 128, 129, 130, 134, 138, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 316, 342, 343, 344, 345, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 628, 629, 630, 632, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "determin": [13, 22, 25, 26, 39, 40, 49, 50, 67, 68, 71, 74, 75, 76, 77, 85, 86, 95, 96, 113, 114, 120, 124, 128, 129, 130, 247, 265, 268, 270, 278, 291, 292, 295, 297, 300, 315, 316, 348, 349, 350, 360, 363, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 431, 434, 436, 439, 440, 443, 453, 456, 457, 460, 477, 480, 481, 484, 485, 488, 497, 500, 501, 504, 509, 512, 513, 516, 529, 532, 535, 538, 552, 555, 556, 559, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 606, 607, 610, 614, 615, 645, 647, 651, 652, 653, 654, 655, 673, 687, 688, 703, 706, 726, 741, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 767, 770, 775, 777, 781, 783, 784, 786, 790, 791, 793, 803, 805, 806, 808, 809, 811, 891, 892, 893, 894], "exactli": [13, 15, 121, 128, 130, 1012, 1018], "common": [13, 19, 74, 75, 121, 124, 126, 128, 130, 132, 151], "ground": [13, 123], "li": 13, "between": [13, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 119, 121, 123, 124, 127, 128, 133, 135, 136, 137, 139, 150, 177, 178, 179, 247, 279, 282, 363, 395, 398, 552, 555, 815, 816, 819, 821, 824, 826, 829, 831, 845, 848, 875, 878, 1012], "find": [13, 17, 18, 74, 75, 123, 134, 137, 1012], "exist": [13, 14, 17, 19, 20, 74, 75, 120, 121, 122, 123, 124, 125, 126, 131, 134, 151, 606, 627], "essenti": [13, 14, 19, 121, 124, 130], "order": [13, 17, 18, 20, 71, 74, 75, 76, 77, 78, 119, 120, 121, 125, 127, 128, 129, 130, 136, 137, 139, 151, 363, 395, 398, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 743, 758, 760, 771, 773, 794, 796, 797, 799, 809, 811, 831, 849, 852, 891, 892, 893], "design": [13, 14, 117, 131, 134, 136, 151], "univers": 13, "abstract": [13, 128, 138, 151, 316, 328], "In": [13, 15, 17, 18, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 316, 352, 358, 359, 362, 363, 377, 380, 535, 538, 556, 559, 606, 612, 650, 831, 861, 864, 1012], "search": [13, 17, 28, 31, 32, 60, 74, 75, 106, 118, 121, 123], "languag": [13, 15, 134], "first": [13, 14, 17, 18, 20, 22, 25, 26, 39, 40, 61, 62, 71, 76, 77, 85, 86, 107, 108, 119, 121, 123, 124, 127, 128, 134, 136, 137, 139, 174, 175, 177, 205, 206, 208, 209, 247, 302, 311, 316, 332, 344, 363, 377, 380, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 445, 448, 465, 468, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 587, 591, 606, 614, 688, 698, 743, 749, 751, 755, 757, 758, 760, 767, 770, 781, 783, 787, 789, 794, 796, 800, 802, 806, 808, 831, 837, 840, 865, 868, 875, 878, 879, 882, 891, 892, 893, 894], "see": [13, 16, 17, 18, 19, 22, 25, 26, 39, 40, 67, 68, 71, 76, 77, 85, 86, 113, 114, 119, 122, 124, 128, 130, 136, 137, 150, 151, 177, 178, 179, 194, 197, 205, 206, 208, 209, 247, 260, 263, 303, 306, 363, 377, 380, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 457, 460, 489, 492, 513, 516, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591, 743, 775, 777, 784, 786, 791, 793, 806, 808, 809, 811, 1012], "clear": [13, 14, 15, 18, 19, 121, 129, 130, 134, 136, 316, 331], "front": [13, 133, 134, 137, 1012, 1018], "runner": 13, "look": [13, 17, 18, 20, 118, 119, 121, 123, 124, 125, 128, 129, 130, 134, 136, 138, 139, 1012], "littl": [13, 136], "deeper": [13, 18, 117, 133, 316, 337, 341, 345], "follow": [13, 14, 17, 18, 19, 20, 74, 75, 118, 120, 121, 123, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 151, 247, 286, 289, 316, 357, 363, 556, 559, 606, 648, 649, 650, 671, 672, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 741, 742, 743, 787, 789, 809, 811, 1012], "same": [13, 15, 17, 18, 20, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 74, 75, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 107, 108, 118, 119, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 138, 139, 177, 178, 179, 186, 189, 200, 203, 211, 214, 224, 227, 229, 233, 234, 238, 242, 246, 247, 250, 253, 255, 258, 260, 263, 316, 323, 324, 357, 363, 364, 367, 377, 380, 407, 410, 427, 430, 461, 464, 535, 538, 556, 559, 560, 563, 564, 567, 602, 605, 606, 632, 634, 635, 638, 659, 662, 663, 688, 703, 706, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 803, 805, 806, 808, 831, 837, 840, 849, 852, 853, 856, 865, 868, 871, 874, 875, 878, 891, 892, 893, 1012], "core": [13, 17, 19, 130, 134, 139, 316, 349, 1012], "principl": 13, "oper": [13, 17, 19, 22, 25, 26, 47, 48, 71, 74, 75, 76, 77, 93, 94, 120, 121, 123, 124, 127, 128, 130, 131, 137, 138, 177, 205, 206, 208, 209, 247, 303, 306, 363, 377, 380, 419, 422, 423, 426, 473, 476, 540, 543, 544, 547, 556, 559, 583, 586, 606, 616, 628, 629, 630, 673, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 727, 728, 729, 730, 731, 732, 733, 736, 739], "expos": [13, 134, 138, 606, 622], "almost": [13, 18, 128, 135, 137], "ident": [13, 15, 74, 75, 124, 126, 128, 136, 137, 151, 316, 347, 1012], "uniqu": [13, 61, 62, 107, 108, 123, 124, 128, 151, 316, 323, 324, 891, 892, 893, 894], "syntax": [13, 14, 132], "There": [13, 17, 18, 121, 124, 127, 128, 129, 132, 134, 137, 151], "onli": [13, 16, 17, 18, 22, 25, 26, 74, 75, 118, 119, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 149, 151, 316, 353, 363, 521, 524, 525, 528, 743, 767, 770, 787, 789, 831, 849, 852, 1012], "so": [13, 14, 17, 18, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 151, 152, 160, 1012], "wai": [13, 14, 17, 123, 125, 131, 136, 137, 138, 139, 151], "manipul": [13, 54, 100, 118, 139, 150, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "unsurprisingli": [13, 121], "fundament": [13, 128, 134], "consist": [13, 74, 75, 127, 129, 131, 316, 345, 743, 758, 760], "each": [13, 14, 15, 18, 19, 23, 24, 39, 40, 41, 42, 47, 48, 49, 50, 53, 54, 61, 62, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 99, 100, 107, 108, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 150, 151, 162, 165, 166, 168, 171, 177, 211, 214, 247, 255, 258, 316, 323, 324, 334, 335, 336, 337, 338, 339, 340, 344, 357, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 743, 744, 747, 749, 751, 752, 754, 758, 760, 767, 770, 775, 777, 778, 780, 784, 786, 791, 793, 794, 796, 831, 841, 844, 857, 860, 865, 868, 870, 875, 878, 883, 886, 887, 890, 1012, 1018], "veri": [13, 14, 17, 18, 118, 119, 121, 123, 124, 128, 130, 131, 135, 137, 138, 139, 151, 1012], "similar": [13, 118, 123, 128, 129, 130, 137, 151, 363, 556, 559, 726, 741], "convent": [13, 150, 743, 767, 770], "those": [13, 17, 18, 19, 53, 54, 74, 75, 99, 100, 123, 128, 134, 139, 177, 178, 179, 688, 724, 743, 787, 789, 794, 796, 831, 832, 835], "introduc": [13, 128, 137, 831, 865, 868], "2006": 13, "layer": [13, 48, 55, 56, 94, 101, 102, 118, 120, 134, 135, 138, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 1012], "therefor": [13, 18, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 427, 430, 461, 464, 533, 544, 547, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 755, 757, 831, 865, 868], "present": [13, 18, 74, 75, 119, 122, 128, 129, 130, 131, 134], "itself": [13, 17, 18, 119, 128, 131, 138, 150, 151, 606, 612], "cut": 13, "cloth": 13, "adher": [13, 14, 120, 122, 134, 139], "semant": [13, 134, 139, 363, 556, 559], "round": [13, 14, 15, 17, 18, 19, 20, 39, 40, 85, 86, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 363, 377, 380, 427, 430, 461, 464, 465, 468, 535, 538, 579, 582, 602, 605, 1012], "up": [13, 14, 15, 16, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 151], "hopefulli": [13, 14, 15, 17, 18, 19, 20, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150], "paint": [13, 134], "pictur": [13, 134], "how": [13, 15, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 150, 151, 1012, 1018], "pleas": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 1012], "check": [13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 43, 44, 74, 75, 89, 90, 123, 128, 133, 134, 136, 137, 138, 139, 150, 247, 270, 284, 285, 291, 292, 295, 315, 316, 352, 362, 606, 616, 631, 645, 652, 653, 654, 655, 673, 687, 688, 703, 706, 743, 758, 760, 1012], "out": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 150, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 316, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 623, 624, 625, 628, 629, 630, 632, 634, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "discuss": [13, 14, 15, 16, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 1012], "faq": [13, 14, 15, 134, 136, 137, 138, 139, 150], "reach": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 316, 337, 341, 345], "discord": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 1012], "you": [13, 14, 15, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 150, 151, 1012, 1018], "question": [13, 14, 15, 17, 18, 121, 123, 134, 136, 137, 138, 139, 150, 151, 1012], "With": [14, 15, 17, 22, 25, 26, 39, 40, 41, 42, 43, 44, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 134, 162, 164, 165, 166, 167, 168, 171, 173, 177, 211, 214, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 335, 351, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 431, 434, 436, 439, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 615, 623, 624, 631, 634, 635, 638, 676, 678, 682, 683, 688, 689, 692, 703, 706, 726, 729, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 771, 773, 800, 802, 815, 816, 819, 826, 829, 831, 832, 835, 845, 848, 849, 852, 857, 860, 865, 868, 870, 879, 882], "central": 14, "goal": [14, 19], "being": [14, 15, 17, 18, 74, 75, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 134, 137, 150, 151, 177, 178, 179, 606, 661, 666, 1012], "would": [14, 17, 18, 20, 117, 119, 120, 121, 123, 125, 126, 127, 128, 131, 133, 134, 136, 138, 139, 151, 162, 167, 316, 358, 1012], "entir": [14, 15, 18, 67, 68, 74, 75, 113, 114, 121, 122, 123, 127, 128, 131, 136, 137, 138, 139, 151, 316, 357], "forgiven": 14, "rais": [14, 18, 67, 68, 74, 75, 113, 114, 131, 132, 134, 136, 247, 260, 263, 363, 453, 456, 552, 555, 606, 616, 641, 650, 664, 672, 684, 688, 725, 743, 767, 770, 774, 806, 808, 831, 871, 874, 875, 878], "an": [14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 39, 40, 43, 44, 49, 50, 53, 54, 61, 62, 67, 68, 69, 70, 74, 75, 85, 86, 89, 90, 99, 100, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 162, 165, 166, 168, 171, 176, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 265, 268, 279, 282, 297, 300, 303, 306, 316, 335, 339, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 617, 618, 619, 621, 623, 632, 633, 634, 646, 650, 652, 653, 654, 655, 678, 682, 683, 684, 688, 703, 706, 721, 723, 724, 725, 726, 729, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 774, 775, 777, 778, 780, 784, 786, 787, 789, 790, 791, 793, 794, 796, 803, 805, 806, 808, 809, 811, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 19, 119, 124, 129, 130, 131, 134, 136, 139, 151, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 1012], "other": [14, 17, 18, 22, 25, 26, 41, 42, 71, 74, 75, 76, 77, 87, 88, 118, 120, 121, 123, 124, 127, 128, 131, 132, 134, 136, 138, 139, 149, 150, 151, 174, 175, 177, 178, 179, 363, 457, 460, 606, 607, 610, 612, 688, 698, 1012], "strong": [14, 151], "industri": 14, "back": [14, 127, 133, 134, 136, 151, 1012, 1018], "momentum": 14, "won": [14, 15, 18, 139], "ad": [14, 17, 18, 19, 115, 116, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 134, 138, 151, 606, 671, 672, 743, 758, 760, 831, 845, 848], "just": [14, 15, 17, 18, 120, 121, 123, 124, 131, 134, 136, 137, 151], "make": [14, 15, 17, 18, 19, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 316], "problem": [14, 18, 127, 136], "even": [14, 15, 17, 18, 119, 120, 124, 129, 130, 136, 137, 138, 139, 151, 363, 552, 555, 560, 563], "wors": 14, "rather": [14, 43, 44, 74, 75, 89, 90, 118, 120, 123, 128, 139, 151, 177, 178, 179, 316, 357, 606, 652, 653, 655, 688, 703, 706], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 17, 18, 124, 128], "feasibl": 14, "space": [14, 177, 178, 179, 205, 206, 208, 209, 606, 633, 688, 725], "case": [14, 17, 18, 19, 28, 31, 32, 71, 74, 75, 76, 77, 78, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 136, 138, 139, 151, 177, 211, 214, 316, 352, 359, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 606, 650, 662, 663, 743, 771, 773, 831, 861, 864], "unlik": [14, 121, 128, 316], "charger": 14, "charact": [14, 132], "encod": [14, 137, 606, 633], "instant": [14, 1012], "messag": [14, 18, 132, 134, 136, 1056, 1057], "much": [14, 18, 118, 127, 128, 131, 134, 136, 137], "doe": [14, 18, 20, 74, 75, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 134, 136, 137, 151, 363, 423, 426, 606, 650, 831, 870], "mandat": [14, 123, 131], "adopt": [14, 18, 127], "continu": [14, 15, 122, 123, 132, 151], "own": [14, 15, 17, 120, 123, 132, 134, 151], "signatur": [14, 118, 119, 120, 121, 123, 128, 129, 130, 131, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 743, 755, 757, 831, 845, 848, 865, 868], "replac": [14, 18, 20, 53, 54, 74, 75, 99, 100, 121, 123, 126, 128, 129, 130, 134, 136, 139, 151, 606, 662, 663, 831, 832, 835], "your": [14, 15, 16, 17, 19, 20, 118, 120, 137, 138, 151, 1012], "10": [14, 17, 20, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 128, 134, 136, 137, 177, 199, 208, 209, 316, 363, 403, 406, 407, 410, 436, 439, 473, 476, 493, 496, 501, 504, 574, 577, 579, 582, 606, 624, 634, 661, 666, 688, 708, 710, 726, 732, 743, 752, 754, 755, 757, 781, 783, 800, 802, 831, 849, 852, 857, 860, 870], "100": [14, 15, 103, 104, 123, 137, 138, 139, 151, 363, 579, 582, 1012], "despit": [14, 128, 130], "distinct": [14, 120, 128, 131, 133, 1012], "still": [14, 74, 75, 120, 123, 129, 136, 138, 151, 1012], "believ": [14, 18], "share": [14, 74, 75, 121, 123, 124, 125, 128, 134, 247, 311], "bring": [14, 123, 134, 135], "benefit": [14, 15, 17, 18, 127, 128, 131, 136, 137, 151], "unrel": [14, 18], "what": [14, 15, 18, 117, 119, 120, 121, 123, 126, 128, 132, 133, 134, 136, 137, 138, 139, 150, 151, 1012], "again": [14, 15, 18, 118, 121, 123, 128, 131, 137, 139, 151], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 137], "most": [14, 17, 18, 74, 75, 118, 119, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 151, 743, 758, 760], "technologi": 14, "sector": [14, 39, 40, 85, 86, 363, 373, 376, 386, 389, 399, 402], "full": [14, 15, 18, 119, 120, 123, 129, 134, 151, 177, 247, 279, 282, 363, 473, 476, 493, 496, 726, 732, 743, 787, 789, 791, 793, 794, 796], "success": 14, "reason": [14, 18, 118, 121, 124, 127, 128, 129, 131, 134, 136, 363, 556, 559], "build": [14, 16, 17, 124, 133, 135, 138, 139, 151, 1012], "custom": [14, 123, 138], "comput": [14, 15, 17, 22, 25, 26, 51, 52, 74, 75, 97, 98, 123, 124, 128, 134, 137, 151, 316, 357, 363, 377, 380, 403, 406, 415, 418, 423, 426, 445, 448, 449, 452, 469, 472, 473, 476, 489, 492, 493, 496, 517, 520, 521, 524, 525, 528, 529, 532, 535, 538, 540, 543, 544, 547, 606, 618, 619, 621, 624, 625, 688, 689, 692, 694, 696, 698, 699, 701, 708, 710, 712, 714, 716, 718, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 739, 741, 743, 744, 747, 749, 751, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 787, 789, 790, 791, 793, 794, 796, 806, 808, 809, 811, 815, 816, 819, 821, 824, 826, 829], "thank": [14, 137], "interoper": 14, "compon": [14, 134, 688, 725], "bio": [14, 17], "hardwar": [14, 17], "initi": [14, 18, 71, 74, 75, 76, 77, 78, 123, 125, 129, 130, 316, 726, 740], "pcie": 14, "interfac": [14, 139, 151], "motherboard": 14, "raid": 14, "storag": [14, 137], "virtual": [14, 18, 20], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 28, 29, 30, 31, 32, 33, 34, 49, 50, 74, 75, 95, 96, 123, 124, 138, 139, 177, 181, 183, 216, 219, 229, 233, 234, 238, 606, 612, 675, 677, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 775, 777, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805], "factor": [14, 43, 44, 47, 48, 49, 50, 89, 90, 93, 94, 95, 96, 316, 323, 355, 356, 357, 688, 689, 692, 694, 696, 708, 710, 712, 714, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 744, 747], "sata": 14, "connect": [14, 17, 138, 139], "host": [14, 151], "bu": 14, "adapt": [14, 688, 712, 714], "devic": [14, 18, 22, 25, 26, 33, 34, 38, 41, 42, 74, 75, 79, 80, 84, 87, 88, 103, 104, 117, 118, 124, 126, 129, 136, 137, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 208, 209, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 606, 634, 635, 638, 659, 662, 663], "html": [14, 20, 120, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 743, 755, 757, 831, 845, 848, 865, 868], "enabl": [14, 17, 18, 71, 74, 75, 76, 77, 78, 123, 124, 127, 128, 131, 133, 134, 135, 137, 139, 151, 688, 725], "anyon": [14, 16, 151], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 74, 75, 128], "commun": [14, 16, 18, 19, 151, 1012, 1018], "network": [14, 124, 128, 134, 138, 150, 726, 739, 1012], "smtp": 14, "possibl": [14, 16, 17, 18, 19, 120, 121, 123, 128, 129, 131, 134, 137, 150, 151, 606, 656], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 16, 17, 18, 49, 50, 95, 96, 123, 128, 131, 138, 151, 743, 744, 747, 794, 796, 1012], "email": 14, "ieee": [14, 176, 247, 279, 282, 363, 377, 380, 457, 460, 535, 538, 556, 559, 579, 582], "754": [14, 176, 247, 279, 282, 363, 377, 380, 457, 460, 535, 538, 556, 559, 579, 582], "allow": [14, 123, 134, 151, 177, 205, 206, 208, 209, 606, 656], "calcul": [14, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 120, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 440, 443, 453, 456, 457, 460, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 535, 538, 552, 555, 569, 572, 574, 577, 579, 582, 587, 591, 592, 596, 597, 601, 815, 816, 819, 821, 824, 826, 829], "live": [14, 15], "depend": [14, 17, 18, 22, 25, 26, 120, 123, 126, 128, 129, 134, 151, 247, 250, 253, 363, 364, 367, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 453, 456, 457, 460, 497, 500, 501, 504, 505, 508, 509, 512, 552, 555, 569, 572, 574, 577, 592, 596, 597, 601, 743, 758, 760, 787, 789, 791, 793, 794, 796], "did": [14, 19, 139], "aris": [14, 151], "until": [14, 18, 132, 151, 1012], "substanti": [14, 18, 123, 127], "innov": 14, "growth": 14, "usag": [14, 134, 316, 357], "relev": [14, 17, 19, 121, 128, 129, 137], "area": [14, 39, 40, 85, 86, 131, 149, 363, 373, 376, 386, 389, 399, 402, 1012], "necess": 14, "parti": [14, 151], "could": [14, 15, 17, 18, 121, 123, 128, 129, 131, 134, 136, 137, 138], "easili": [14, 18, 137, 138, 139, 151, 1012], "engag": [14, 16, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "regard": [14, 128, 316], "effect": [14, 119, 120, 127, 128, 151, 177, 211, 214, 688, 716, 718], "2015": 14, "sinc": [14, 17, 18, 123, 151], "alongsid": 14, "machin": [14, 17, 124, 150, 247, 279, 282, 286, 289, 363, 469, 472, 743, 775, 777, 784, 786], "given": [14, 15, 17, 18, 19, 20, 41, 42, 51, 52, 53, 54, 74, 75, 87, 88, 97, 98, 99, 100, 103, 104, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 150, 177, 178, 179, 185, 205, 206, 208, 209, 316, 346, 352, 354, 355, 356, 357, 359, 362, 606, 624, 625, 635, 638, 662, 663, 667, 686, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 845, 848, 849, 852, 857, 860, 865, 868, 870, 883, 886], "frame": [14, 150], "less": [14, 18, 22, 25, 26, 39, 40, 74, 75, 85, 86, 119, 121, 128, 133, 134, 363, 369, 372, 373, 376, 382, 385, 395, 398, 427, 430, 497, 500, 501, 504, 509, 512, 552, 555, 556, 559, 564, 567, 579, 582, 743, 775, 777, 784, 786, 809, 811], "matur": [14, 151], "state": [14, 119, 120, 123, 133, 134, 135, 137, 150, 363, 535, 538, 606, 670, 685, 726, 740, 1012], "than": [14, 18, 22, 25, 26, 43, 44, 61, 62, 74, 75, 89, 90, 107, 108, 118, 121, 123, 128, 131, 134, 137, 138, 139, 151, 177, 178, 179, 247, 279, 282, 316, 357, 363, 369, 372, 373, 376, 382, 385, 395, 398, 411, 414, 419, 422, 427, 430, 461, 464, 465, 468, 497, 500, 501, 504, 509, 512, 533, 552, 555, 556, 559, 564, 567, 579, 582, 602, 605, 606, 652, 653, 655, 688, 703, 706, 743, 749, 751, 767, 770, 775, 777, 784, 786, 809, 811, 831, 832, 835, 849, 852, 871, 874], "preced": [14, 138], "mention": [14, 17, 18, 119, 121, 124, 131], "aros": 14, "70": [14, 743, 781, 783], "80": [14, 743, 781, 783], "90": [14, 103, 104, 363, 423, 426, 560, 563, 743, 781, 783], "effort": [14, 16, 151], "stage": [14, 16, 18, 20, 117, 132, 1012], "complet": [14, 18, 19, 74, 75, 127, 128, 136, 137, 743, 787, 789], "natur": [14, 121, 127, 128, 150, 363, 453, 456, 497, 500, 505, 508, 743, 790], "like": [14, 17, 18, 20, 43, 44, 89, 90, 117, 118, 119, 120, 121, 123, 130, 131, 133, 134, 136, 137, 138, 139, 150, 151, 688, 703, 706, 1012], "certainli": 14, "mission": [14, 1012], "creat": [14, 16, 17, 18, 20, 33, 34, 41, 42, 74, 75, 87, 88, 103, 104, 123, 129, 130, 131, 134, 135, 138, 149, 150, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 208, 209, 216, 219, 221, 222, 224, 227, 239, 241, 242, 246, 316, 323, 324, 606, 634, 635, 638, 659, 662, 663, 676, 688, 723, 1012, 1018], "At": [14, 19], "process": [14, 15, 16, 17, 18, 20, 123, 124, 128, 134, 139, 316, 323, 324, 352, 362], "ourselv": 14, "lead": [14, 15, 71, 74, 75, 76, 77, 78, 151, 743, 787, 789, 794, 796], "quansight": 14, "compani": 14, "made": [14, 18, 19, 128, 131, 134, 136], "organ": [14, 118, 124, 127, 128], "panda": 14, "scipi": 14, "conda": [14, 17, 20], "dask": 14, "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 134, 139], "sympi": 14, "rai": [14, 363, 395, 398], "modin": 14, "spyder": 14, "includ": [14, 18, 19, 33, 34, 67, 68, 74, 75, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 150, 151, 177, 178, 179, 181, 183, 216, 219, 606, 645, 687, 743, 809, 811], "member": [14, 18], "googl": [14, 1012], "octoml": 14, "einop": [14, 74, 75, 606, 628, 629, 630], "further": [14, 15, 18, 20, 121, 127, 133, 137, 138, 1012], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 47, 48, 93, 94, 103, 104, 117, 128, 137, 606, 615, 623, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 755, 757, 781, 783, 1012, 1018], "shaw": 14, "co": [14, 39, 40, 85, 86, 134, 150, 363, 606, 633, 1012], "intel": 14, "togeth": [14, 74, 75, 127, 128, 132, 138, 139, 151], "major": [14, 123, 129, 130, 151], "involv": [14, 16, 20, 117, 129, 139, 247, 303, 306, 363, 377, 380, 535, 538, 1012, 1018], "anoth": [14, 17, 18, 74, 75, 123, 124, 128, 129, 136, 139, 177, 194, 197, 247, 255, 258, 265, 268], "promis": 14, "sign": [14, 17, 39, 40, 85, 86, 135, 139, 177, 178, 179, 363, 364, 367, 377, 380, 395, 398, 419, 422, 535, 538, 556, 559, 743, 790], "pursuit": 14, "unif": [14, 16, 136, 1012, 1018], "clearli": [14, 19, 121, 123], "lot": [14, 15, 126, 136, 151], "thought": [14, 17, 18, 119], "care": [14, 18, 139], "attent": [14, 18, 127, 128, 726, 741, 742], "gone": [14, 133], "simplifi": [14, 134, 135, 136, 138], "compat": [14, 22, 25, 26, 39, 40, 67, 68, 71, 76, 77, 85, 86, 113, 114, 119, 151, 247, 260, 263, 363, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591, 743, 775, 777, 784, 786, 791, 793, 800, 802, 806, 808, 809, 811, 831, 861, 864, 1012], "excit": [14, 16, 117, 1012], "complianc": 14, "hope": [14, 151], "due": [14, 17, 22, 25, 26, 128, 131, 363, 535, 538], "suit": [14, 17, 117, 122, 123, 137, 150], "some": [14, 15, 17, 18, 19, 74, 75, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 150, 151, 363, 457, 460, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 724, 726, 738, 1012], "motiv": [14, 136], "great": [14, 15, 123, 134, 136], "convinc": 14, "celebr": 14, "encourag": [14, 150, 151, 1012, 1018], "foundat": 14, "point": [15, 18, 39, 40, 49, 50, 85, 86, 95, 96, 119, 120, 121, 123, 127, 131, 134, 136, 137, 150, 176, 177, 178, 179, 185, 191, 192, 199, 221, 222, 239, 241, 247, 250, 253, 279, 282, 292, 295, 303, 306, 363, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 743, 744, 747, 752, 754, 758, 760, 761, 763, 764, 766, 775, 777, 784, 786, 787, 789, 791, 793, 794, 796, 809, 811], "mai": [15, 17, 18, 22, 25, 26, 123, 128, 136, 138, 177, 178, 179, 194, 197, 316, 358, 363, 445, 448, 473, 476, 493, 496, 521, 524, 525, 528, 606, 627], "ask": [15, 134, 136, 151, 1012], "perfectli": 15, "happi": [15, 17, 151], "abund": 15, "better": [15, 117, 132, 133, 136, 137, 138], "ll": [15, 16, 18, 121, 128, 131, 137], "give": [15, 17, 18, 117, 119, 120, 121, 125, 136, 831, 861, 864], "two": [15, 33, 34, 49, 50, 71, 76, 77, 95, 96, 120, 121, 123, 127, 128, 133, 137, 139, 177, 178, 179, 191, 192, 211, 214, 229, 233, 234, 238, 247, 302, 311, 363, 419, 422, 560, 563, 606, 614, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 803, 805, 806, 808, 831, 879, 882, 1012], "streamlin": 15, "workflow": [15, 18, 137, 149, 1012], "save": [15, 74, 75, 123, 132, 151, 606, 668], "week": [15, 18, 19, 1012], "let": [15, 120, 121, 123, 128, 129, 130, 134, 136, 137, 138, 139, 1012], "sai": [15, 17, 126, 136], "deepmind": 15, "releas": [15, 17, 19, 1012], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 131, 137], "perceiverio": 15, "happen": [15, 17, 18, 123, 137], "slew": 15, "rush": 15, "f": [15, 20, 117, 123, 128, 132, 134, 137, 139, 363, 469, 472, 606, 647, 651], "g": [15, 117, 128, 151, 247, 249, 303, 306, 316, 329], "inevit": 15, "deviat": [15, 55, 56, 101, 102, 123], "origin": [15, 53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 125, 126, 129, 134, 136, 363, 395, 398, 743, 771, 773, 831, 861, 864, 865, 868], "often": [15, 123, 124, 132, 151], "erron": 15, "train": [15, 43, 44, 89, 90, 124, 128, 130, 137, 138, 139, 149, 150, 151, 688, 689, 692, 694, 696, 708, 710, 1012], "poor": 15, "converg": 15, "perform": [15, 67, 68, 74, 75, 113, 114, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 134, 137, 151, 162, 167, 177, 205, 206, 208, 209, 316, 606, 624, 628, 629, 630, 648, 649, 650, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 738, 740, 743, 794, 796, 891, 892, 893, 894], "issu": [15, 16, 19, 123, 134, 136, 138, 151], "etc": [15, 17, 18, 19, 41, 42, 69, 70, 74, 75, 87, 88, 103, 104, 115, 116, 118, 119, 121, 123, 127, 128, 129, 134, 136, 137, 151, 177, 205, 206, 208, 209, 606, 634, 635, 638, 659, 662, 663], "publish": [15, 151], "manag": [15, 16, 131, 151, 316], "get": [15, 16, 17, 19, 74, 75, 117, 123, 124, 129, 130, 131, 134, 135, 136, 137, 138, 247, 274, 277, 278, 279, 282, 286, 289, 316, 323, 324, 332, 333, 346, 347, 352, 356, 359, 362, 606, 613, 640, 641, 642, 661, 670, 1012, 1018], "work": [15, 17, 18, 19, 117, 123, 128, 129, 130, 133, 134, 135, 136, 138, 139, 1012, 1018], "repositori": [15, 17, 18, 20, 122, 132], "pull": [15, 16, 17, 20, 118, 151], "request": [15, 16, 118, 316, 349], "confus": [15, 131], "do": [15, 17, 18, 19, 43, 44, 74, 75, 89, 90, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 363, 556, 559, 606, 650, 688, 703, 706, 724], "don": [15, 17, 18, 19, 69, 70, 115, 116, 123, 129, 138, 151], "expect": [15, 123, 151, 606, 613, 1012], "codebas": [15, 16, 117, 118, 131, 133, 316, 355, 356, 1012], "total": [15, 16, 18, 71, 74, 75, 76, 77, 78, 121, 123, 130, 137, 138, 151, 316, 359], "hour": 15, "spent": 15, "spin": 15, "off": [15, 133, 743, 755, 757, 803, 805], "test": [15, 17, 19, 67, 68, 113, 114, 117, 121, 132, 151, 247, 297, 300, 363, 477, 480, 481, 484, 485, 488], "error": [15, 17, 74, 75, 119, 121, 123, 127, 130, 132, 136, 151, 162, 163, 316, 363, 449, 452], "iter": [15, 28, 29, 30, 31, 32, 41, 42, 69, 70, 71, 74, 75, 76, 77, 78, 87, 88, 115, 116, 128, 134, 137, 174, 175, 316, 335, 336, 338, 339, 340, 341, 344, 357, 606, 607, 610, 831, 841, 844, 857, 860, 870, 883, 886, 887, 890], "address": [15, 18, 19, 127, 134], "sake": 15, "singl": [15, 18, 74, 75, 118, 119, 121, 123, 124, 126, 128, 131, 134, 137, 138, 139, 151, 316, 323, 324, 342, 343, 344, 345, 606, 683, 687], "multipl": [15, 18, 55, 56, 67, 68, 74, 75, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 113, 114, 121, 124, 128, 151, 363, 533, 535, 538, 606, 607, 610, 656, 688, 703, 706, 743, 744, 747, 764, 766, 831, 832, 835, 865, 868, 870], "line": [15, 17, 121, 123, 127, 132, 135, 136, 137, 138, 149, 1012, 1018], "convert": [15, 28, 29, 30, 31, 32, 33, 34, 74, 75, 123, 127, 134, 151, 152, 160, 177, 181, 183, 216, 219, 247, 248, 249, 316, 329, 330, 331, 332, 352, 359, 362, 606, 675, 677, 678, 682, 683, 743, 812, 814], "directli": [15, 18, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 139, 150, 151], "graph": [15, 22, 25, 26, 124, 128, 135, 151, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "guarante": [15, 127, 151], "turn": [15, 121, 123, 128], "4": [15, 20, 22, 25, 26, 39, 40, 43, 44, 49, 50, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 125, 128, 134, 136, 137, 138, 139, 162, 164, 165, 167, 177, 200, 203, 211, 214, 224, 227, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 335, 351, 363, 364, 367, 377, 380, 382, 385, 386, 389, 395, 398, 403, 406, 423, 426, 427, 430, 431, 434, 436, 439, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 615, 624, 633, 634, 635, 638, 676, 688, 689, 692, 703, 706, 726, 729, 730, 731, 733, 736, 740, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 775, 777, 781, 783, 800, 802, 803, 805, 815, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 879, 882, 1012], "step": [15, 17, 18, 20, 43, 44, 74, 75, 79, 80, 89, 90, 121, 125, 127, 128, 129, 130, 134, 137, 138, 139, 150, 177, 178, 179, 205, 206, 208, 209, 316, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894, 1012], "take": [15, 16, 17, 18, 120, 121, 123, 128, 129, 130, 134, 136, 138, 139, 151, 363, 423, 426, 1012, 1018], "few": [15, 18, 19, 123, 124, 128, 129, 130, 131, 132, 135, 136, 137, 138, 149, 1012, 1018], "second": [15, 17, 22, 25, 26, 39, 40, 43, 44, 61, 62, 71, 76, 77, 85, 86, 89, 90, 107, 108, 121, 123, 131, 136, 247, 302, 311, 316, 344, 363, 377, 380, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 445, 448, 465, 468, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 587, 591, 606, 614, 661, 666, 688, 689, 692, 694, 696, 708, 710, 743, 749, 751, 755, 757, 758, 760, 767, 770, 781, 783, 787, 789, 794, 796, 800, 802, 806, 808, 831, 875, 878, 879, 882, 891, 893], "automat": [15, 17, 18, 117, 119, 124, 128, 133, 134, 135, 138, 139, 1012], "convers": [15, 29, 30, 31, 32, 74, 75, 133, 135, 139, 150, 151, 1012, 1018], "everyon": [15, 16, 18, 151], "regardless": [15, 16, 74, 75, 136, 139, 174, 175], "wouldn": 15, "nice": [15, 123], "write": [15, 18, 19, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 74, 75, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 124, 125, 131, 134, 136, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 316, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 625, 628, 629, 630, 632, 634, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "onc": [15, 17, 18, 123, 128, 129, 130, 134, 137, 151, 316, 357, 743, 764, 766, 794, 796], "know": [15, 18, 123], "among": [15, 74, 75, 123], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 124, 134], "understand": [15, 17, 18, 19, 20, 117, 119, 120, 121, 122, 132, 133], "pattern": [15, 74, 75, 120, 129, 606, 628, 629, 630], "hasn": 15, "chang": [15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 122, 123, 128, 134, 138, 151, 316, 743, 749, 751, 831, 861, 864, 1012, 1018], "now": [15, 17, 20, 74, 75, 118, 119, 123, 126, 128, 129, 132, 136, 137, 139, 150, 151, 177, 242, 246], "spend": 15, "torchvis": 15, "probabl": [15, 123, 726, 738], "sonnet": 15, "about": [15, 17, 18, 122, 123, 133, 134, 138, 139, 151, 247, 279, 282, 286, 289], "next": [15, 17, 18, 19, 20, 120, 121, 125, 126, 132, 136, 137, 247, 279, 282, 1012], "everyth": [15, 18, 19, 123, 135, 151], "zero": [15, 33, 34, 39, 40, 43, 44, 67, 68, 74, 75, 85, 86, 89, 90, 113, 114, 119, 121, 127, 128, 129, 130, 134, 137, 138, 162, 164, 165, 177, 185, 191, 192, 211, 214, 229, 233, 234, 238, 242, 246, 247, 250, 253, 363, 377, 380, 382, 385, 386, 389, 411, 414, 431, 434, 436, 439, 457, 460, 461, 464, 521, 524, 525, 528, 533, 534, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 560, 563, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 624, 659, 662, 663, 688, 689, 692, 694, 696, 703, 706, 708, 710, 712, 714, 726, 738, 743, 744, 747, 752, 754, 767, 770, 775, 777, 784, 786, 806, 808, 809, 811, 831, 845, 848, 849, 852, 857, 860, 865, 868, 887, 890, 1012], "need": [15, 17, 18, 19, 20, 118, 120, 121, 122, 124, 127, 128, 131, 134, 136, 137, 150, 151, 606, 618, 619, 621, 831, 832, 835, 845, 848], "said": 15, "high": [15, 19, 74, 75, 103, 104, 137], "level": [15, 16, 19, 124, 133, 134, 137, 138, 139, 151], "optim": [15, 131, 135, 137, 139, 150, 316, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894, 1012], "trainer": [15, 149, 151, 1012], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 139], "flax": [15, 139, 151], "trax": [15, 139], "objax": [15, 139], "idea": [15, 132, 150], "fulli": [15, 119, 127, 128, 134, 135, 136, 137, 138, 139, 151], "offer": [15, 138], "strongli": [16, 17, 1012, 1018], "welcom": [16, 17, 18, 1012, 1018], "absolut": [16, 39, 40, 74, 75, 85, 86, 363, 364, 367, 743, 790], "skill": 16, "whether": [16, 17, 22, 25, 26, 28, 29, 30, 31, 32, 41, 42, 43, 44, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 128, 129, 131, 162, 163, 174, 175, 247, 250, 253, 274, 277, 291, 292, 295, 297, 300, 315, 316, 332, 333, 344, 348, 349, 352, 353, 357, 360, 362, 363, 485, 488, 606, 607, 610, 614, 615, 624, 627, 631, 633, 643, 645, 647, 650, 651, 652, 653, 654, 655, 656, 667, 669, 673, 686, 687, 688, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 725, 726, 738, 743, 758, 760, 891, 892, 893, 894], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 20, 74, 75, 79, 80, 117, 120, 121, 129, 133, 134, 136, 137, 138, 150, 151, 177, 178, 179, 205, 206, 208, 209, 316, 328], "aspect": [16, 137, 1012], "guid": [16, 17, 18, 132, 1012], "through": [16, 18, 19, 117, 121, 123, 124, 125, 128, 132, 133, 134, 136, 137, 138, 139, 150, 363, 395, 398], "journei": [16, 1012, 1018], "inclusvi": 16, "big": [16, 151], "team": [16, 17, 18], "board": 16, "contributor": [16, 17, 18, 133, 1012], "split": [16, 18, 74, 75, 133, 134, 151, 316, 323, 338, 339, 340, 341, 355, 356, 357, 606, 656, 831, 1012], "section": [16, 18, 19, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138], "below": [16, 17, 19, 20, 33, 34, 117, 118, 121, 123, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 150, 177, 229, 233, 234, 238, 363, 403, 406, 423, 426, 436, 439, 560, 563, 597, 601, 743, 752, 754, 755, 757, 803, 805, 831, 845, 848, 849, 852, 1012], "best": [16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 606, 656], "go": [16, 17, 18, 19, 117, 118, 121, 128, 133, 137, 151], "finish": [16, 17, 117, 1012], "dive": [16, 18, 19, 128, 133, 136, 137, 151, 1012], "right": [16, 17, 18, 74, 75, 117, 121, 137, 363, 411, 414, 419, 422, 743, 794, 796], "environ": [16, 18, 20, 150], "basic": [16, 19, 20], "fork": [16, 17, 606, 657], "doc": [16, 19, 119, 120, 134, 137, 138, 1012], "document": [16, 18, 123, 135, 137, 139], "local": [16, 17, 20, 124], "task": [16, 18, 150, 891, 892, 893, 894, 1012], "help": [16, 17, 121, 123, 125, 127, 128, 136, 137, 138, 149, 606, 612, 1012], "video": [16, 18, 119, 120, 121, 123], "realli": [17, 128, 151], "contribut": [17, 18, 19, 134, 1018], "toward": [17, 53, 54, 99, 100, 134, 831, 865, 868, 1012, 1018], "page": [17, 18, 135, 139, 149, 1012, 1018], "explain": [17, 18, 19, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 1012, 1018], "main": [17, 20, 33, 34, 126, 128, 177, 191, 192, 229, 233, 234, 238, 743, 755, 757, 803, 805], "prefer": [17, 128], "mode": [17, 49, 50, 74, 75, 121, 128, 151, 174, 175, 316, 342, 343, 344, 345, 357, 363, 377, 380, 535, 538, 606, 667, 685, 743, 787, 789], "git": [17, 18, 123], "recurs": [17, 20, 28, 29, 30, 31, 32, 74, 75, 124, 128, 138, 151], "submodul": [17, 18, 19, 20, 122, 123, 124, 130, 133, 134, 138, 1012], "com": 17, "unifyai": [17, 20], "http": [17, 120, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 688, 689, 692, 694, 696, 743, 755, 757, 831, 845, 848, 865, 868], "gh": 17, "your_fold": 17, "id": [17, 127, 128, 132, 316, 332], "cours": [17, 18, 121, 137, 151], "whatev": [17, 151], "integr": [17, 247, 250, 253], "familiar": [17, 19], "decid": [17, 74, 75], "sure": [17, 19, 122, 123], "elig": 17, "free": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 150, 1012], "student": 17, "licenc": 17, "peopl": [17, 18, 117], "seem": [17, 138, 151], "miss": [17, 121, 123, 127, 128, 132], "add": [17, 18, 19, 22, 25, 26, 39, 40, 55, 56, 69, 70, 71, 74, 75, 76, 77, 85, 86, 87, 88, 101, 102, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 134, 136, 151, 363, 364, 367, 533, 688, 725, 1012, 1018], "explicit": [17, 20, 128, 129, 131, 134, 151], "remind": 17, "channel": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 606, 633], "pace": 17, "updat": [17, 18, 19, 20, 43, 44, 74, 75, 89, 90, 117, 119, 121, 122, 126, 127, 128, 129, 134, 136, 137, 139, 151, 316, 323, 606, 650, 662, 663, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 740, 891, 892, 893], "suggest": [17, 18, 118, 123], "latest": [17, 19, 20, 120, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 743, 755, 757, 831, 845, 848, 865, 868], "packag": [17, 20, 132, 151], "ensur": [17, 18, 119, 123, 127, 129, 132, 606, 650], "align": [17, 74, 75, 134, 136, 1012, 1018], "accord": [17, 20, 35, 36, 74, 75, 81, 82, 124, 129, 247, 265, 268, 279, 282, 363, 377, 380, 419, 422, 535, 538, 606, 634, 662, 663, 743, 806, 808, 831, 841, 844, 887, 890], "stabl": [17, 63, 64, 109, 110, 134, 151, 606, 641, 642, 664, 665, 671, 672], "pypi": [17, 19, 151], "mayb": [17, 28, 31, 32, 134, 136], "person": [17, 18], "experi": [17, 135, 137, 151], "avoid": [17, 18, 123, 125, 126, 128, 132, 136, 316, 363, 457, 460], "pip": [17, 150, 1012], "instal": [17, 20, 132, 150, 1012], "abil": [17, 135, 151], "certain": [17, 74, 75, 123, 129, 151, 177, 178, 179, 205, 206, 208, 209], "perhap": [17, 136, 137, 138, 151], "keep": [17, 18, 74, 75, 122, 123, 128, 135, 137, 139, 606, 686], "track": [17, 18, 316], "termin": [17, 18, 20, 71, 74, 75, 76, 77, 78, 128, 134, 137], "run": [17, 20, 43, 44, 89, 90, 119, 121, 122, 123, 125, 132, 134, 135, 136, 137, 138, 139, 150, 151, 316, 323, 688, 689, 692, 694, 696, 708, 710, 891, 892, 893, 894], "command": [17, 20, 1012], "ivy_dev": [17, 18, 20], "name": [17, 18, 20, 61, 62, 107, 108, 120, 123, 129, 132, 134, 136, 137, 139, 174, 175, 606, 612, 743, 758, 760, 787, 789, 794, 796], "3": [17, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 125, 128, 134, 136, 137, 138, 139, 162, 164, 165, 166, 167, 176, 177, 200, 203, 211, 214, 224, 227, 239, 241, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 332, 335, 351, 358, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 461, 464, 469, 472, 473, 476, 489, 492, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 614, 615, 624, 631, 634, 635, 638, 669, 676, 683, 688, 689, 692, 703, 706, 726, 727, 728, 729, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 775, 777, 781, 783, 794, 796, 800, 802, 803, 805, 812, 814, 815, 816, 819, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 871, 874, 879, 882, 1012], "8": [17, 20, 22, 25, 26, 39, 40, 51, 52, 53, 54, 71, 76, 77, 85, 86, 89, 90, 97, 98, 103, 104, 121, 123, 128, 133, 137, 162, 166, 177, 242, 246, 316, 335, 363, 377, 380, 386, 389, 403, 406, 427, 430, 436, 439, 473, 476, 493, 496, 533, 534, 560, 563, 564, 567, 579, 582, 583, 586, 597, 601, 606, 615, 634, 688, 689, 692, 703, 706, 726, 733, 736, 743, 749, 751, 752, 754, 755, 757, 781, 783, 800, 802, 815, 816, 819, 831, 832, 835, 849, 852, 857, 860, 870, 1012], "activ": [17, 18, 20, 24, 69, 70, 73, 115, 116, 118, 138, 163, 164, 165, 166, 167, 168, 171, 173, 1012], "setup": 17, "click": [17, 18, 120, 1012], "icon": [17, 18], "side": [17, 18], "choos": [17, 18, 139, 316, 358, 363, 521, 524, 525, 528], "left": [17, 18, 74, 75, 121, 129, 363, 411, 414, 743, 758, 760, 771, 773, 794, 796, 1012], "panel": 17, "select": [17, 18, 123, 134, 136, 139, 151], "drop": [17, 151], "down": [17, 123, 136], "path": [17, 20], "manual": [17, 18, 123, 138], "builtin": [17, 20, 136, 138], "requir": [17, 20, 118, 119, 120, 121, 123, 126, 127, 129, 130, 136, 151, 174, 175, 363, 579, 582, 743, 758, 760, 831, 875, 878], "cmd": [17, 20], "directori": [17, 18, 20, 123, 606, 668], "folder": [17, 18, 20, 118, 122, 123, 124], "file": [17, 18, 20, 74, 75, 118, 120, 123, 124, 125, 127, 128, 132, 134, 137, 606, 668], "abov": [17, 18, 20, 33, 34, 103, 104, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 136, 137, 138, 139, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 535, 538, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 758, 760, 803, 805, 831, 845, 848, 849, 852, 865, 868], "m": [17, 18, 20, 33, 34, 49, 50, 95, 96, 117, 134, 177, 211, 214, 229, 233, 234, 238, 606, 615, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805], "python3": [17, 20], "script": [17, 18, 20, 121, 134, 151], "bat": [17, 18, 20], "OR": [17, 18, 20, 67, 68, 113, 114, 363, 415, 418, 525, 528], "bin": [17, 18, 20], "mac": [17, 18, 20], "linux": [17, 18, 20], "virtualenv": 17, "found": [17, 18, 71, 74, 75, 76, 77, 78, 120, 127, 128, 132, 316, 347], "o": [17, 117, 134, 606, 615], "note": [17, 18, 118, 120, 121, 123, 128, 129, 363, 556, 559, 743, 758, 760, 794, 796, 831, 875, 878], "tick": [17, 18], "abl": [17, 18, 74, 75, 124, 129, 131, 132, 136, 139], "To": [17, 121, 123, 124, 128, 132, 137, 138, 139, 1012], "ivy_test": [17, 18], "test_array_api": [17, 18, 122, 123], "cd": [17, 18, 20], "r": [17, 74, 75, 606, 615, 686, 743, 787, 789, 812, 814], "txt": 17, "visual": [17, 132, 151], "jetbrain": 17, "remot": 17, "mitig": 17, "potenti": [17, 133, 363, 457, 460], "conflict": [17, 18, 137], "addit": [17, 18, 55, 56, 74, 75, 101, 102, 118, 120, 123, 128, 129, 136, 137, 139, 316, 358, 363, 377, 380, 606, 628, 629, 630], "yet": [17, 19, 128], "particular": [17, 18, 118, 121, 123, 129, 131, 363, 364, 367], "system": [17, 151, 743, 791, 793], "instruct": [17, 19], "desktop": 17, "wsl": 17, "powershel": 17, "admin": 17, "visit": 17, "link": 17, "imag": [17, 20, 46, 47, 48, 92, 93, 94, 118, 134, 135, 137, 139, 150, 726, 727, 728, 729, 730, 732, 733, 736, 1012], "profession": 17, "execut": [17, 20, 128, 131, 134, 136, 139, 151, 606, 684], "deploy": 17, "top": [17, 18, 123, 137, 138, 1012], "press": [17, 137, 1012], "ok": 17, "correctli": [17, 74, 75, 119, 123, 128, 129, 132, 138, 151, 743, 771, 773], "caus": [17, 18, 121, 123, 128, 131, 132, 151], "earlier": [17, 18], "might": [17, 18, 118, 123, 126, 129, 134, 136, 137, 606, 627], "necessari": [17, 121, 125, 128, 131], "virtualis": 17, "detail": [17, 18, 19, 118, 119, 122, 123, 124, 125, 126, 128, 137, 138, 177, 194, 197], "sudo": 17, "apt": 17, "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 74, 75, 87, 88, 177, 211, 214, 606, 618, 619, 621, 726, 738, 743, 771, 773, 809, 811], "keyr": 17, "fssl": 17, "download": [17, 123], "gpg": 17, "dearmor": 17, "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 139, 151], "lsb_releas": 17, "tee": 17, "list": [17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 55, 56, 69, 70, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 121, 123, 128, 129, 130, 132, 134, 137, 138, 139, 151, 177, 178, 179, 181, 183, 211, 214, 216, 219, 247, 255, 258, 316, 323, 324, 332, 334, 335, 338, 339, 342, 343, 357, 606, 615, 676, 686, 688, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 800, 802, 831, 837, 840, 849, 852, 870, 875, 878, 1012], "dev": [17, 71, 74, 75, 76, 78, 124, 130, 134, 136, 138, 316, 323, 347], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 123, 128, 151], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 123, 132, 150, 316], "post": [17, 55, 56, 101, 102, 139, 1012, 1018], "It": [17, 18, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 123, 125, 127, 128, 129, 131, 134, 136, 137, 138, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 316, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 628, 629, 630, 632, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "headach": 17, "arm": [17, 18], "m1": 17, "instead": [17, 18, 19, 119, 120, 121, 123, 124, 128, 131, 134, 136, 137, 151], "featur": [17, 118, 119, 137, 1012], "vm": 17, "azur": 17, "cloud": [17, 150], "mean": [17, 18, 65, 66, 74, 75, 111, 112, 115, 116, 117, 121, 123, 124, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 316, 342, 343, 344, 345, 357, 606, 629, 891, 892, 893, 894, 1012], "configur": [17, 18, 20, 74, 75, 129, 316, 356], "defin": [17, 19, 103, 104, 118, 119, 120, 123, 129, 136, 138, 151, 363, 535, 538, 556, 559, 606, 659, 743, 749, 751, 758, 760, 791, 793], "dockerfil": [17, 20], "longer": [17, 123, 129, 131], "worri": 17, "platform": 17, "agnost": [17, 119, 127, 134, 136, 139, 151, 1012], "usual": [17, 123], "studio": 17, "favourit": 17, "extens": [17, 18, 120, 123, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 493, 496, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "theme": 17, "too": [17, 18, 132, 151, 363, 377, 380, 535, 538], "done": [17, 18, 121, 123, 132, 137], "unsupport": [17, 132, 247, 285], "old": [17, 74, 75, 131], "slow": 17, "ipad": 17, "long": [17, 18, 121, 726, 740], "browser": 17, "cool": [17, 118], "requisit": 17, "head": [17, 128, 726, 741, 1012], "pane": [17, 18], "readi": [17, 19], "begin": 17, "outlin": [17, 18, 19, 117, 120, 123, 124, 128, 131, 136], "green": [17, 18, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1056, 1057], "dropdown": 17, "tab": [17, 137, 1012], "master": [17, 18, 128], "v": [17, 18, 123, 134, 137, 138, 139, 726, 742, 1012], "view": [17, 18, 177, 194, 197, 726, 729, 733, 736], "log": [17, 18, 39, 40, 85, 86, 124, 128, 131, 134, 137, 177, 208, 209, 363, 505, 508, 513, 516, 743, 790, 1012], "built": [17, 123, 135, 177, 178, 179, 316], "bottom": 17, "box": 17, "patient": 17, "upto": 17, "15": [17, 39, 40, 103, 104, 121, 123, 363, 403, 406, 560, 563, 726, 729, 743, 755, 757, 781, 783, 800, 802, 831, 865, 868], "minut": 17, "launch": 17, "12": [17, 85, 86, 101, 102, 103, 104, 121, 123, 128, 363, 403, 406, 423, 426, 436, 439, 560, 563, 606, 624, 642, 688, 689, 692, 743, 755, 757, 781, 783, 800, 802, 831, 849, 852, 857, 860, 865, 868], "output": [17, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 74, 75, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 120, 121, 123, 124, 127, 128, 130, 131, 134, 136, 138, 139, 151, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 316, 323, 324, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 617, 618, 619, 621, 624, 625, 628, 629, 630, 632, 634, 635, 638, 646, 659, 662, 663, 688, 698, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "That": [17, 18, 123, 136, 137, 138, 363, 556, 559], "alreadi": [17, 18, 74, 75, 119, 125, 128, 129, 136, 151, 316, 363, 427, 430, 461, 464, 535, 538, 560, 563, 602, 605, 743, 781, 783, 1012], "refer": [17, 18, 67, 68, 113, 114, 119, 123, 124, 129, 151, 177, 191, 192, 363, 457, 460, 505, 508, 688, 689, 692, 694, 696, 743, 806, 808, 812, 814], "approach": [17, 18, 123, 124, 128, 136, 137, 151], "colour": 17, "applic": [17, 129, 130, 138, 726, 741, 742], "good": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 138], "chanc": 17, "vscode": 17, "show": [17, 18, 74, 75, 121, 123, 131, 150, 151, 1012], "explor": [17, 135, 139, 150], "troubleshoot": 17, "sometim": [17, 18, 123], "ever": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "64": [17, 47, 48, 93, 94, 123, 137, 138, 363, 579, 582, 583, 586, 726, 732, 733, 736, 743, 781, 783, 1012], "bit": [17, 121, 123, 124, 128, 136, 247, 278, 279, 282, 286, 289, 363, 407, 410, 411, 414, 419, 422], "usr": 17, "more": [17, 18, 19, 22, 25, 26, 61, 62, 107, 108, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 177, 178, 179, 247, 255, 258, 363, 457, 460, 743, 767, 770, 831, 849, 852, 1012], "nutshel": [17, 119], "hook": 17, "lint": 17, "accept": [17, 18, 28, 119, 120, 121, 123, 124, 127, 128, 130, 131, 136, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 521, 524, 525, 528, 533, 544, 547, 556, 559, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868, 1012], "fix": [17, 18], "fail": [17, 19, 122, 123, 132, 134, 136], "attempt": [17, 132, 151], "succe": 17, "problemat": 17, "appli": [17, 18, 19, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 134, 136, 137, 138, 139, 149, 151, 162, 163, 164, 165, 166, 167, 168, 171, 173, 247, 303, 306, 606, 628, 629, 630, 688, 708, 710, 712, 714, 726, 739, 741, 742, 743, 775, 777, 784, 786, 815, 816, 819, 821, 824, 826, 829, 831, 875, 878, 891, 892, 893, 1012], "proce": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "modifi": [17, 18, 120, 124, 129, 130, 132, 134], "properli": [17, 117], "enter": [17, 18, 119, 127, 129, 130, 316, 688, 725], "unsur": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "feel": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 1012], "server": [18, 1012], "appropri": [18, 69, 70, 115, 116, 123, 126, 363, 377, 380, 535, 538], "context": [18, 121, 123, 128, 129, 130, 316, 606, 657, 726, 741], "suitabl": [18, 118, 128], "quick": [18, 117, 138], "alwai": [18, 19, 43, 44, 74, 75, 89, 90, 118, 119, 120, 123, 124, 125, 127, 128, 131, 132, 134, 136, 151, 247, 250, 253, 363, 377, 380, 535, 538, 606, 650, 688, 703, 706, 721], "correct": [18, 19, 65, 66, 111, 112, 117, 119, 124, 128, 129, 130, 132, 247, 311, 831, 832, 835, 1012], "tendenc": 18, "gener": [18, 19, 20, 42, 43, 44, 69, 70, 74, 75, 88, 89, 90, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 150, 151, 174, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 556, 559, 569, 572, 579, 582, 583, 586, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 703, 706, 743, 755, 757, 831, 845, 848, 865, 868, 1012], "land": 18, "end": [18, 128, 131, 133, 150, 151, 177, 178, 179, 363, 395, 398, 1012, 1018], "world": 18, "come": [18, 19, 123, 138, 149, 1012, 1018], "fly": 18, "hard": [18, 136], "receiv": [18, 123, 129, 130, 316, 323, 324, 606, 613, 656], "respons": [18, 20], "internship": 18, "comment": [18, 132], "trigger": 18, "unansw": 18, "label": [18, 51, 52, 97, 98, 134, 135, 139, 815, 816, 819, 821, 824, 826, 829], "respond": 18, "remov": [18, 19, 20, 74, 75, 120, 123, 124, 129, 131, 139, 743, 755, 757, 767, 770, 803, 805, 831, 871, 874, 891, 892, 893], "someon": [18, 151], "els": [18, 19, 118, 124, 125, 131, 134, 136, 138, 139, 151, 606, 616, 627, 631], "strive": [18, 123, 151], "repli": 18, "newli": [18, 123, 131, 174, 175, 247, 250, 253, 606, 617], "place": [18, 33, 34, 53, 54, 74, 75, 99, 100, 117, 118, 119, 120, 121, 123, 124, 128, 130, 132, 139, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 316, 358, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 648, 649, 650, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "bug": [18, 123], "serv": [18, 119, 123, 124, 127, 128, 133, 1012], "suspect": 18, "behaviour": [18, 119, 120, 123, 127, 128, 131, 136], "observ": 18, "confid": 18, "noth": [18, 74, 75], "wrong": 18, "someth": [18, 118, 137, 138, 151], "bet": 18, "act": [18, 121, 151], "placehold": [18, 119, 127, 132], "sub": [18, 19, 74, 75, 117, 123, 128, 136, 137, 138, 316, 338, 339, 342, 343, 344, 345, 743, 755, 757, 831, 870, 891, 892, 893, 894, 1012], "mark": [18, 123], "ii": 18, "iii": 18, "titl": [18, 1012], "issue_numb": 18, "delet": [18, 20], "No": [18, 134], "wait": [18, 71, 74, 75, 76, 77, 78], "progress": [18, 128, 135, 139], "pr": 18, "soon": [18, 128, 149, 151, 1012, 1018], "partial": [18, 74, 75], "solut": [18, 123, 128, 743, 791, 793], "review": [18, 118], "merg": 18, "everi": [18, 19, 20, 33, 34, 41, 42, 87, 88, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 136, 138, 177, 199, 200, 203, 606, 607, 610], "shape": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 129, 130, 131, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 316, 325, 353, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 628, 629, 630, 632, 635, 638, 643, 646, 659, 662, 663, 667, 675, 677, 685, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "move": [18, 74, 75, 118, 316, 358], "within": [18, 28, 31, 32, 123, 138, 151, 177, 178, 179], "7": [18, 20, 22, 25, 26, 39, 40, 43, 44, 51, 52, 53, 54, 71, 76, 77, 85, 86, 89, 90, 97, 98, 101, 102, 103, 104, 121, 123, 124, 128, 131, 162, 164, 165, 316, 335, 363, 364, 367, 377, 380, 403, 406, 407, 410, 423, 426, 427, 430, 436, 439, 453, 456, 461, 464, 473, 476, 493, 496, 533, 534, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 606, 615, 624, 634, 688, 689, 692, 694, 696, 703, 706, 708, 710, 726, 732, 733, 736, 742, 743, 749, 751, 752, 754, 755, 757, 781, 783, 800, 802, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 845, 848, 849, 852, 857, 860, 870, 879, 882], "dai": 18, "close": [18, 120, 363, 457, 460, 560, 563, 743, 794, 796], "likewis": [18, 119, 120, 124, 128, 129, 137], "freed": 18, "flag": [18, 43, 44, 74, 75, 89, 90, 129, 131, 136, 316, 332, 688, 703, 706], "purpos": [18, 20, 119, 121, 123, 124, 126, 127, 128, 133, 136, 363, 457, 460, 1012], "remain": [18, 121, 151, 363, 377, 380, 535, 538, 556, 559, 831, 861, 864], "access": [18, 20, 74, 75, 129], "short": [18, 138, 726, 740], "basi": [18, 122, 137], "situat": [18, 139], "alloc": [18, 33, 34, 151, 177, 229, 233, 234, 238, 247, 250, 253, 316], "upon": [18, 121, 123, 131, 151], "period": 18, "prevent": [18, 43, 44, 89, 90, 131, 132, 136, 688, 689, 692, 694, 696, 708, 710], "unabl": 18, "obvious": 18, "never": [18, 123, 128], "reflect": [18, 127], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "fine": [18, 136, 139], "becaus": [18, 119, 120, 123, 124, 125, 127, 129, 130, 131, 134, 138, 139, 151], "inact": 18, "limit": [18, 71, 74, 75, 76, 77, 78, 121, 123, 132, 134, 137, 139, 151, 247, 279, 282, 286, 289, 606, 618, 619, 621, 831, 832, 835], "me": 18, "unfairli": 18, "definit": [18, 49, 50, 95, 96, 124, 129, 136, 743, 744, 747, 749, 751], "investig": 18, "Then": [18, 20, 136, 151], "practic": 18, "separ": [18, 123, 127, 128, 132, 134, 136, 137], "branch": [18, 128, 151, 174, 175, 363, 395, 398], "simpli": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 124, 127, 128, 130, 131, 134, 138, 139, 363, 457, 460], "role": [18, 135], "kept": [18, 71, 74, 75, 76, 77, 78, 131, 891, 892, 893], "date": 18, "upstream": [18, 122], "base": [18, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 128, 134, 150, 177, 208, 209, 247, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 363, 453, 456, 497, 500, 501, 504, 505, 508, 509, 512, 552, 555, 606, 641, 664, 672, 688], "complic": [18, 134], "root": [18, 20, 137, 363, 579, 582], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": 18, "clone": [18, 20, 74, 75, 316, 334, 335, 336, 337], "push": [18, 122, 132], "both": [18, 119, 120, 121, 123, 124, 128, 130, 131, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 302, 363, 364, 367, 377, 380, 382, 385, 386, 389, 427, 430, 461, 464, 533, 544, 547, 552, 555, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 606, 634, 688, 689, 692, 726, 729, 733, 736, 742, 743, 744, 747, 749, 751, 755, 757, 767, 770, 806, 808, 831, 865, 868], "abort": 18, "tediou": 18, "resolut": 18, "stash": 18, "reinstat": 18, "correspond": [18, 53, 54, 71, 74, 75, 76, 77, 99, 100, 119, 120, 121, 122, 123, 124, 127, 128, 129, 247, 255, 258, 363, 395, 398, 552, 555, 743, 749, 751, 758, 760, 791, 793, 831, 837, 840, 865, 868], "fetch": 18, "uncommit": 18, "unstag": 18, "untrack": 18, "comprehens": 18, "explan": [18, 119, 120, 128, 136], "atlassian": 18, "tutori": 18, "wrote": 18, "piec": [18, 124, 126, 127, 134], "inform": [18, 123, 128, 132, 247, 279, 282, 286, 289, 606, 612, 688, 721], "tag": 18, "usu": 18, "describ": [18, 123, 135, 139], "navig": [18, 117], "blame": 18, "revis": 18, "author": [18, 1012], "eg": [18, 123], "16": [18, 49, 50, 85, 86, 103, 104, 121, 123, 137, 363, 592, 596, 726, 732, 733, 736, 743, 744, 747, 755, 757, 781, 783], "5": [18, 20, 22, 25, 26, 39, 40, 41, 42, 49, 50, 53, 54, 55, 56, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 119, 121, 123, 125, 136, 137, 138, 162, 164, 165, 167, 177, 200, 203, 211, 214, 224, 227, 239, 241, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 335, 351, 363, 364, 367, 377, 380, 382, 385, 386, 389, 399, 402, 403, 406, 419, 422, 423, 426, 427, 430, 436, 439, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 615, 624, 634, 635, 638, 676, 688, 689, 692, 703, 706, 726, 729, 731, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 764, 766, 781, 783, 800, 802, 803, 805, 815, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 879, 882], "past": 18, "l": [18, 49, 50, 95, 96, 117, 743, 744, 747, 758, 760, 767, 770, 803, 805], "filepath": [18, 74, 75], "grep": 18, "commit_id": 18, "handi": [18, 123], "histori": 18, "toggl": 18, "vertic": 18, "highlight": [18, 121], "previou": [18, 119, 123, 139, 151, 606, 685, 688, 694, 696, 708, 710], "shown": [18, 69, 70, 74, 75, 115, 116, 119, 121, 123, 132, 134, 136, 151, 363, 403, 406, 423, 426, 436, 439, 560, 563, 597, 601, 743, 752, 754, 831, 845, 848, 849, 852], "whenev": [18, 123, 136, 137], "think": [18, 121], "interact": [18, 123, 1012], "gain": [18, 133, 138], "quit": [18, 19, 120, 123, 124, 126, 127], "repeat": [18, 53, 54, 74, 75, 99, 100, 120, 121, 123, 125, 127, 128, 129, 132, 606, 630, 831, 883, 886], "yourself": [18, 19, 123, 150], "simpler": [18, 136], "cannot": [18, 125, 129, 139], "least": [18, 121, 123, 124, 127, 743, 767, 770], "final": [18, 120, 121, 124, 127, 129, 131, 132, 134, 136, 137, 177, 205, 206, 208, 209, 606, 633], "tickbox": 18, "lower": [18, 33, 34, 49, 50, 74, 75, 95, 96, 121, 123, 134, 151, 177, 191, 192, 229, 233, 363, 533, 743, 744, 747], "corner": 18, "without": [18, 74, 75, 118, 119, 121, 124, 127, 128, 130, 132, 134, 136, 137, 138, 150, 151, 606, 661, 666, 831, 861, 864], "span": 18, "intent": [18, 131], "larg": [18, 137, 363, 377, 380, 535, 538], "discourag": 18, "philosophi": 18, "increment": [18, 606, 649], "frequent": [18, 19], "valuabl": 18, "infrequ": 18, "earli": [18, 1012], "wast": 18, "spot": [18, 124], "mistak": [18, 132], "propos": 18, "mountain": 18, "around": [18, 71, 74, 75, 76, 77, 78, 119, 124, 127, 136, 151], "advoc": [18, 151], "individu": [18, 19, 124], "per": [18, 47, 48, 93, 94, 123, 137, 316, 726, 727, 728, 729, 730, 731, 732, 733, 736], "style": 18, "ve": [18, 133, 136, 1012], "were": [18, 74, 75, 118, 123, 128, 132], "actual": [18, 117, 124, 131, 133, 136, 138, 151], "aim": [18, 133], "part": [18, 33, 34, 118, 122, 123, 124, 134, 135, 139, 150, 151, 177, 229, 233, 234, 238, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "subsect": 18, "session": [18, 1012], "block": [18, 123, 124, 132, 133, 135, 139, 151, 316, 688, 725, 1012], "smaller": [18, 53, 54, 99, 100, 134, 139, 831, 832, 835, 865, 868], "edit": 18, "exact": [18, 74, 75, 134], "beauti": 18, "particularli": [18, 137, 151], "concern": [18, 117, 121, 128, 131, 133], "effici": [18, 119, 123, 124, 128, 131, 132, 134, 137, 151], "difficult": [18, 123, 151], "undo": 18, "stress": 18, "frequenc": [18, 606, 633], "pycharm": 18, "pytest": [18, 123], "button": 18, "declar": 18, "insid": [18, 20, 118, 123, 128, 129], "exec": 18, "rm": 18, "rf": 18, "cp": 18, "ivy_contain": 18, "bash": [18, 20], "test_ivi": [18, 123], "test_funct": [18, 123], "test_cor": 18, "test_imag": 18, "test_random_crop": 18, "header": 18, "summari": [18, 74, 75, 81, 82, 123, 247, 271, 272, 273, 308, 309, 310, 316, 326, 327, 606, 622, 626, 644, 688, 720], "q": [18, 151, 726, 742, 743, 758, 760, 787, 789], "array_api_test": 18, "test_creation_funct": 18, "test_arang": 18, "window": [18, 20, 47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "variou": [18, 119, 120, 126, 150], "valu": [18, 22, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 53, 54, 55, 56, 61, 62, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 107, 108, 119, 120, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 139, 151, 177, 178, 179, 191, 192, 199, 200, 203, 205, 206, 208, 209, 247, 250, 253, 271, 272, 273, 316, 325, 356, 357, 363, 364, 367, 369, 372, 377, 380, 382, 385, 391, 394, 427, 430, 445, 448, 449, 452, 461, 464, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 533, 534, 535, 538, 544, 547, 548, 551, 552, 555, 560, 563, 597, 601, 602, 605, 606, 618, 619, 621, 622, 627, 633, 634, 635, 638, 644, 647, 651, 661, 662, 663, 664, 665, 666, 687, 688, 689, 692, 694, 696, 698, 708, 710, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 740, 741, 742, 743, 775, 777, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 809, 811, 831, 832, 835, 841, 844, 857, 860, 861, 864, 887, 890, 891, 892, 893], "cpu": [18, 41, 42, 74, 75, 87, 88, 103, 104, 130, 151, 177, 205, 206, 208, 209, 242, 246, 316, 332, 333, 335, 349, 352, 354, 358, 359, 361, 362, 606, 634, 635, 638, 659, 662, 663], "gpu": [18, 103, 104, 130, 136, 151, 316, 332, 335, 348, 350, 354, 356, 361], "combin": [18, 71, 74, 75, 76, 77, 78, 121, 123, 124, 127, 128, 139, 743, 749, 751], "wherebi": [19, 128], "broad": 19, "distribut": [19, 51, 52, 74, 75, 97, 98, 103, 104, 123, 130, 151, 316, 334, 338, 339, 340, 341, 726, 738, 815, 816, 819, 821, 824, 826, 829], "across": [19, 74, 75, 119, 121, 123, 124, 128, 129, 316, 323, 324, 334, 335, 337, 338, 339, 340, 341, 345, 355, 356, 606, 614, 615], "todo": 19, "commit": [19, 123], "NOT": [19, 363, 521, 524], "static": [19, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 151, 174, 175], "method": [19, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 132, 134, 135, 138, 139, 151, 162, 164, 165, 166, 167, 168, 171, 173, 177, 194, 197, 242, 246, 247, 274, 277, 363, 382, 385, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 473, 476, 493, 496, 534, 540, 543, 544, 547, 560, 563, 569, 572, 579, 582, 583, 586, 597, 601, 606, 622, 623, 634, 662, 663, 676, 678, 682, 683, 688, 708, 710, 712, 714, 725, 726, 732, 742, 743, 749, 751, 752, 754, 815, 816, 819, 831, 845, 848, 849, 852, 857, 860, 870, 879, 882, 1012], "instanc": [19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 127, 129, 131, 137, 138, 139, 152, 160, 162, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 274, 277, 297, 300, 316, 323, 354, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 623, 634, 650, 667, 676, 678, 682, 683, 726, 729, 732, 733, 736, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 815, 816, 819, 831, 845, 848, 849, 852, 857, 860, 865, 868, 870, 879, 882], "revers": [19, 22, 25, 26, 71, 76, 77, 120, 121, 139, 151, 606, 627, 831, 849, 852], "resourc": 19, "content": [19, 20, 74, 75, 131, 134, 137], "thei": [19, 74, 75, 117, 118, 121, 123, 124, 126, 128, 129, 130, 131, 132, 136, 137, 138, 139, 151, 247, 302, 891, 892, 893, 1012], "hypothesi": 19, "cover": [19, 120, 121, 123, 124, 126, 133], "lambda": [19, 134, 137], "direct": [19, 138, 139, 150], "bind": [19, 128], "def": [19, 118, 119, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 1012], "special": [19, 22, 25, 26, 71, 76, 77, 118, 119, 120, 121, 127, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605], "aforement": 19, "categori": [19, 118, 127, 128, 129, 133, 1012], "parent": [19, 136, 688, 725], "arraywithelementwis": [19, 22, 25, 26, 39, 127], "containerwithmanipul": [19, 71, 76, 77, 99], "hint": [19, 118, 119, 120, 124, 127, 131, 132, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "its": [19, 20, 53, 54, 99, 100, 120, 123, 132, 247, 255, 258, 316, 357, 606, 677, 743, 767, 770, 831, 845, 848, 861, 864, 865, 868, 879, 882], "docstr": [19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 124, 128, 132, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 493, 496, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "thorough": [19, 119, 120, 123], "transpil": [19, 133, 135, 1012, 1018], "builder": [20, 149, 151, 1012], "maco": 20, "ubuntu": 20, "uid": 20, "make_docs_without_dock": 20, "rel": [20, 53, 54, 99, 100, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 743, 755, 757, 775, 777, 784, 786, 803, 805, 831, 849, 852, 865, 868, 1012], "synchron": 20, "rest": [20, 135, 139], "remove_doc": 20, "_": [20, 120, 123, 128, 131, 136, 137, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 688, 689, 692, 694, 696, 743, 755, 757, 812, 814, 831, 845, 848, 865, 868], "indic": [20, 41, 42, 47, 48, 53, 54, 55, 56, 74, 75, 87, 88, 93, 94, 99, 100, 101, 102, 132, 135, 139, 162, 167, 363, 564, 567, 606, 634, 635, 638, 646, 659, 662, 663, 726, 727, 728, 729, 730, 731, 732, 733, 736, 743, 809, 811, 831, 865, 868, 1012], "privat": [20, 123], "fulfil": [20, 133, 1012], "autogenerated_sourc": 20, "format": [20, 74, 75, 117, 120, 129, 130, 134, 136, 137, 247, 274, 277, 316, 333, 1012], "png": [20, 137], "_imag": 20, "lastli": 20, "structur": [20, 71, 74, 75, 76, 77, 78, 118, 124, 127, 128, 137, 138, 606, 622], "rst": 20, "skip": [20, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 123], "read": [20, 74, 75, 1012], "partial_sourc": 20, "conf": 20, "copi": [20, 33, 34, 35, 36, 41, 42, 74, 75, 79, 80, 81, 82, 87, 88, 120, 125, 129, 134, 136, 137, 150, 151, 177, 181, 183, 194, 197, 247, 250, 253, 316, 358, 606, 623, 678, 682, 683, 831, 861, 864], "create_rst_fil": 20, "filter": [20, 47, 48, 93, 94, 123, 726, 727, 728, 729, 730, 731, 732, 733, 736], "repres": [20, 39, 40, 85, 86, 123, 136, 177, 211, 214, 247, 278, 363, 373, 376, 377, 380, 386, 389, 399, 402, 436, 439, 535, 538, 574, 577, 597, 601, 688, 725, 726, 739, 743, 790, 791, 793], "overal": [20, 120, 128, 129, 130, 139], "markup": 20, "6": [20, 22, 25, 26, 39, 40, 43, 44, 53, 54, 71, 76, 77, 85, 86, 87, 88, 97, 98, 101, 102, 103, 104, 121, 123, 125, 128, 136, 137, 138, 162, 164, 165, 167, 177, 200, 203, 242, 246, 247, 274, 277, 316, 335, 351, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 407, 410, 423, 426, 427, 430, 431, 434, 436, 439, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 615, 624, 634, 635, 638, 676, 688, 689, 692, 726, 729, 732, 733, 736, 742, 743, 749, 751, 752, 754, 755, 757, 781, 783, 794, 796, 800, 802, 815, 816, 819, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 879, 882], "extract": [20, 118], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 151], "module_nam": 20, "copy_readme_to_rst": 20, "tabl": 20, "toc": 20, "tree": 20, "append": [20, 74, 75, 123, 134, 137, 363, 411, 414, 743, 755, 757, 767, 770], "append_toctree_to_rst": 20, "9": [20, 22, 25, 26, 39, 40, 43, 44, 53, 54, 71, 76, 77, 85, 86, 89, 90, 103, 104, 121, 123, 137, 138, 363, 377, 380, 386, 389, 403, 406, 407, 410, 533, 534, 560, 563, 564, 567, 579, 582, 583, 586, 606, 634, 688, 689, 692, 694, 696, 703, 706, 708, 710, 726, 729, 732, 733, 736, 743, 749, 751, 752, 754, 755, 757, 781, 783, 794, 796, 800, 802, 831, 832, 835, 849, 852, 857, 860, 865, 868, 870], "index": [20, 33, 34, 41, 42, 61, 62, 74, 75, 79, 80, 87, 88, 107, 108, 124, 128, 136, 176, 177, 191, 192, 211, 214, 316, 354, 606, 612, 634, 635, 638, 831, 875, 878], "create_index_rst": 20, "14": [20, 85, 86, 101, 102, 103, 104, 121, 123, 128, 363, 386, 389, 423, 426, 688, 689, 692, 726, 742, 743, 755, 757, 781, 783], "\u03c0": [20, 363, 369, 372, 382, 385, 391, 394, 395, 398], "namespac": [20, 118, 129, 134, 139], "arraywithactiv": [22, 23, 25, 26], "arraywithcr": [22, 25, 26, 33], "arraywithdatatyp": [22, 25, 26, 35], "arraywithdevic": [22, 25, 26, 37, 136], "arraywithgener": [22, 25, 26, 41, 136], "arraywithgradi": [22, 25, 26, 43, 136], "arraywithimag": [22, 25, 26, 45, 136], "arraywithlay": [22, 25, 26, 47], "arraywithlinearalgebra": [22, 25, 26, 49], "arraywithloss": [22, 25, 26, 51], "arraywithmanipul": [22, 25, 26, 53], "arraywithnorm": [22, 25, 26, 55], "arraywithrandom": [22, 25, 26, 57, 136], "arraywithsearch": [22, 25, 26, 59], "arraywithset": [22, 25, 26, 61], "arraywithsort": [22, 25, 26, 63], "arraywithstatist": [22, 25, 26, 65], "arraywithutil": [22, 25, 26, 67], "properti": [22, 25, 26, 74, 75, 121, 123, 124, 128, 136, 137, 138, 316, 325], "__add__": [22, 25, 26, 71, 76, 77, 119, 120, 121, 127, 128, 136], "variant": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 121], "wrap": [22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 116, 117, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 139, 151, 152, 160, 606, 617, 688, 724], "minim": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 131, 134], "self": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 127, 128, 134, 136, 137, 138, 139, 316, 1012], "input": [22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 152, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 292, 295, 297, 300, 302, 303, 306, 311, 315, 316, 323, 324, 332, 333, 334, 335, 337, 338, 341, 345, 351, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 612, 614, 615, 616, 618, 619, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 643, 645, 646, 648, 649, 650, 652, 653, 654, 655, 659, 662, 663, 669, 673, 675, 676, 677, 678, 682, 683, 686, 687, 688, 689, 692, 698, 703, 706, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "numer": [22, 25, 26, 39, 40, 71, 76, 77, 85, 86, 118, 138, 177, 211, 214, 247, 250, 253, 363, 364, 367, 377, 380, 427, 430, 440, 443, 457, 460, 461, 464, 465, 468, 477, 480, 481, 484, 485, 488, 489, 492, 521, 524, 525, 528, 535, 538, 540, 543, 544, 547, 552, 555, 556, 559, 564, 567, 583, 586, 587, 591, 602, 605, 606, 641, 642, 664, 665, 671, 672, 743, 749, 751, 767, 770, 781, 783, 794, 796, 800, 802, 803, 805, 806, 808], "broadcast": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 120, 121, 123, 128, 129, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 255, 258, 260, 263, 316, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 628, 629, 630, 632, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "element": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 53, 54, 61, 62, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 99, 100, 107, 108, 120, 123, 134, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 199, 200, 203, 229, 233, 234, 238, 316, 336, 340, 344, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 614, 615, 618, 619, 621, 624, 625, 632, 646, 678, 682, 683, 688, 725, 726, 738, 743, 749, 751, 758, 760, 767, 770, 787, 789, 794, 796, 831, 832, 835, 849, 852, 857, 860, 865, 868, 870, 871, 874], "wise": [22, 25, 26, 39, 40, 71, 74, 75, 76, 77, 85, 86, 134, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 363, 364, 367, 369, 372, 377, 380, 382, 385, 391, 394, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 449, 452, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591, 606, 632, 831, 832, 835], "sum": [22, 25, 26, 39, 40, 65, 66, 71, 74, 75, 76, 77, 85, 86, 111, 112, 124, 128, 129, 131, 134, 316, 342, 343, 344, 345, 357, 363, 377, 380, 513, 516, 606, 625, 629, 662, 663, 726, 742, 743, 794, 796, 803, 805, 809, 811], "promot": [22, 25, 26, 35, 36, 39, 40, 49, 50, 71, 76, 77, 81, 82, 85, 86, 95, 96, 120, 124, 129, 247, 250, 253, 265, 268, 302, 303, 306, 311, 363, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 399, 402, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 431, 434, 436, 439, 440, 443, 453, 456, 457, 460, 497, 500, 501, 504, 509, 512, 513, 516, 529, 532, 535, 538, 552, 555, 556, 559, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 743, 744, 747, 749, 751, 764, 766, 767, 770, 775, 777, 781, 783, 784, 786, 791, 793, 806, 808, 809, 811, 831, 875, 878], "y": [22, 25, 26, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 71, 76, 77, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 113, 114, 118, 121, 125, 128, 134, 136, 162, 164, 165, 166, 167, 168, 171, 173, 177, 199, 200, 203, 211, 214, 221, 222, 224, 227, 242, 246, 247, 250, 253, 274, 277, 316, 333, 347, 351, 356, 363, 364, 367, 377, 380, 382, 385, 386, 389, 395, 398, 403, 406, 407, 410, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 461, 464, 473, 476, 493, 496, 533, 534, 540, 543, 544, 547, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 606, 607, 610, 614, 615, 623, 624, 631, 632, 634, 635, 638, 669, 676, 678, 682, 683, 688, 698, 726, 732, 733, 736, 739, 743, 744, 747, 749, 751, 752, 754, 764, 766, 781, 783, 800, 802, 803, 805, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 845, 848, 849, 852, 857, 860, 861, 864, 865, 868, 870, 879, 882], "z": [22, 25, 26, 39, 40, 41, 42, 51, 52, 71, 76, 77, 85, 86, 87, 88, 97, 98, 121, 125, 128, 134, 136, 316, 347, 363, 377, 380, 403, 406, 423, 426, 473, 476, 493, 496, 533, 534, 606, 614, 615, 634, 669, 743, 749, 751, 815, 816, 819, 821, 824, 831, 832, 835], "mix": [22, 25, 26, 41, 42, 71, 76, 77, 97, 98, 117, 121, 123, 134, 247, 303, 306, 316, 351, 363, 377, 380, 403, 406, 423, 426, 473, 476, 493, 496, 534, 544, 547, 606, 623, 631, 634, 635, 638, 676, 678, 682, 683, 726, 729, 732, 733, 736, 742, 743, 744, 747, 800, 802, 815, 816, 819, 826, 829, 831, 832, 835], "__le__": [22, 25, 26], "equal": [22, 25, 26, 33, 34, 39, 40, 41, 42, 74, 75, 85, 86, 87, 88, 121, 128, 129, 177, 191, 192, 199, 200, 203, 247, 250, 253, 363, 411, 414, 419, 422, 477, 480, 481, 484, 552, 555, 560, 563, 606, 607, 610, 614, 615, 743, 755, 757, 775, 777, 784, 786, 831, 832, 835, 841, 844, 870, 887, 890], "result": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 120, 121, 123, 127, 128, 129, 131, 137, 151, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 250, 253, 260, 263, 303, 306, 316, 323, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 624, 625, 628, 629, 630, 632, 634, 635, 638, 646, 659, 662, 663, 688, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 741, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 1012], "bool": [22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 49, 50, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 121, 128, 129, 131, 132, 139, 174, 175, 177, 199, 247, 250, 253, 265, 268, 271, 272, 273, 274, 277, 291, 292, 295, 297, 300, 315, 316, 332, 333, 348, 357, 360, 363, 403, 406, 407, 410, 415, 418, 423, 426, 445, 448, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 517, 520, 521, 524, 525, 528, 544, 547, 606, 607, 610, 614, 615, 624, 627, 631, 633, 643, 645, 650, 652, 653, 654, 655, 669, 670, 686, 687, 688, 703, 706, 721, 725, 743, 744, 747, 771, 773, 794, 796, 809, 811, 831, 870, 891, 892, 893, 894], "true": [22, 25, 26, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 128, 129, 131, 132, 134, 136, 137, 138, 139, 162, 163, 174, 175, 177, 205, 206, 247, 250, 253, 265, 268, 297, 300, 315, 316, 332, 349, 353, 354, 363, 403, 406, 423, 426, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 521, 524, 525, 528, 544, 547, 606, 607, 610, 614, 615, 616, 617, 624, 631, 633, 645, 646, 653, 667, 669, 670, 676, 683, 685, 687, 688, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 725, 726, 738, 743, 744, 747, 771, 773, 794, 796, 809, 811, 815, 816, 819, 821, 824, 826, 829, 831, 870, 891, 892, 893, 894], "__radd__": [22, 25, 26, 71, 76, 77, 120, 121], "dtype": [22, 25, 26, 33, 34, 35, 36, 65, 66, 74, 75, 79, 80, 81, 82, 87, 88, 111, 112, 118, 121, 123, 124, 129, 130, 132, 136, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 216, 219, 221, 222, 224, 227, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 265, 268, 270, 271, 272, 273, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 315, 316, 353, 363, 419, 422, 606, 614, 615, 659, 678, 682, 726, 738, 831, 845, 848, 1012], "is_vari": [22, 25, 26, 43, 44, 89, 90, 131, 688], "variabl": [22, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 55, 56, 74, 75, 89, 90, 101, 102, 119, 120, 123, 125, 128, 129, 131, 132, 137, 138, 139, 151, 606, 616, 648, 649, 650, 651, 652, 653, 655, 673, 688, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 724, 726, 741, 743, 791, 793, 891, 892, 893, 894, 1012], "boolean": [22, 25, 26, 41, 42, 43, 44, 74, 75, 87, 88, 89, 90, 123, 128, 177, 199, 247, 250, 253, 291, 315, 316, 348, 360, 363, 403, 406, 407, 410, 415, 418, 423, 426, 517, 520, 521, 524, 525, 528, 529, 532, 606, 607, 610, 614, 615, 645, 646, 647, 651, 652, 653, 654, 655, 667, 673, 687, 688, 703, 706, 725, 891, 892, 893], "trainabl": [22, 25, 26, 43, 44, 89, 90, 120, 135, 137, 138, 688, 703, 706], "mt": [22, 25, 26, 136], "ndim": [22, 25, 26, 123, 136, 743, 787, 789, 794, 796], "dimens": [22, 25, 26, 33, 34, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 113, 114, 121, 123, 134, 137, 162, 167, 177, 229, 233, 234, 238, 316, 344, 606, 628, 629, 630, 633, 643, 659, 686, 726, 727, 728, 729, 730, 731, 732, 733, 736, 740, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805, 806, 808, 809, 811, 815, 821, 824, 826, 829, 831, 837, 840, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 891, 892, 893, 894], "ax": [22, 25, 26, 49, 50, 53, 54, 67, 68, 74, 75, 99, 100, 113, 114, 118, 121, 123, 129, 136, 316, 357, 606, 624, 743, 771, 773, 791, 793, 800, 802, 809, 811, 831, 841, 844, 849, 852, 853, 856, 865, 868, 871, 874, 879, 882, 887, 890], "size": [22, 25, 26, 53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 123, 136, 137, 177, 205, 206, 208, 209, 316, 355, 356, 357, 606, 662, 669, 726, 742, 743, 755, 757, 771, 773, 781, 783, 787, 789, 794, 796, 806, 808, 831, 845, 848, 865, 868, 870, 871, 874], "product": [22, 25, 26, 128, 363, 535, 538, 606, 624, 726, 741, 742, 743, 749, 751, 767, 770, 781, 783, 800, 802, 806, 808], "unknown": [22, 25, 26], "model": [22, 25, 26, 137, 138, 1012], "abc": [23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 136, 316, 323, 328, 606, 631], "softplu": [23, 24, 72, 73, 162, 1012], "collect": [28, 74, 75, 123, 150, 162, 174, 316, 606, 688, 726, 815], "args_to_ivi": 28, "include_deriv": [28, 29, 30, 31, 32], "keyword": [28, 29, 30, 71, 74, 75, 76, 77, 78, 118, 119, 123, 129, 130, 131, 137, 177, 211, 214, 316, 323, 324, 337, 341, 345, 606, 613, 656], "nest": [28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 78, 118, 123, 124, 127, 128, 136, 137, 138, 151, 316, 337, 341, 345, 606, 676, 688, 725, 891, 892, 893], "unchang": [28, 29, 30, 31, 32], "posit": [28, 29, 30, 39, 40, 49, 50, 53, 54, 85, 86, 95, 96, 99, 100, 119, 123, 137, 150, 176, 177, 191, 192, 247, 279, 282, 316, 337, 341, 345, 363, 364, 367, 477, 480, 481, 484, 535, 538, 556, 559, 606, 633, 743, 744, 747, 831, 845, 848, 865, 868], "deriv": [28, 29, 30, 31, 32, 33, 34, 43, 44, 89, 90, 129, 130, 136, 138, 177, 186, 189, 200, 203, 224, 227, 242, 246, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "tupl": [28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 53, 54, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 123, 128, 129, 130, 132, 136, 137, 138, 151, 177, 181, 183, 216, 219, 247, 260, 263, 284, 285, 311, 316, 332, 606, 633, 726, 729, 732, 733, 736, 740, 743, 775, 777, 784, 786, 794, 796, 800, 802, 809, 811, 831, 837, 840, 841, 844, 849, 852, 853, 856, 865, 868, 871, 874, 875, 878, 887, 890, 891, 892, 893, 894], "kei": [28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 123, 128, 132, 137, 316, 325, 606, 612, 622, 726, 741, 742, 891, 892, 893], "word": [28, 29, 30, 128, 177, 178, 179], "args_to_n": [28, 131, 136], "to_ivi": [28, 74, 75, 136], "leaf": [28, 31, 32, 74, 75, 124, 128, 137], "union": [28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 124, 127, 128, 129, 130, 131, 132, 134, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 248, 249, 250, 253, 255, 258, 260, 263, 270, 271, 272, 273, 274, 277, 278, 279, 282, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 311, 315, 316, 329, 330, 331, 332, 333, 335, 338, 339, 340, 341, 346, 352, 354, 356, 357, 358, 359, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 618, 619, 621, 624, 625, 628, 629, 630, 632, 633, 634, 635, 638, 643, 645, 646, 648, 649, 650, 659, 662, 663, 669, 675, 676, 677, 678, 682, 683, 686, 687, 688, 689, 692, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 726, 727, 728, 729, 730, 731, 732, 733, 736, 739, 740, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "nativearrai": [28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 53, 54, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 113, 114, 118, 119, 121, 124, 127, 128, 131, 132, 134, 136, 139, 152, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 183, 186, 189, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 224, 227, 229, 233, 234, 238, 242, 246, 247, 250, 253, 255, 258, 260, 263, 265, 268, 274, 277, 279, 282, 286, 289, 292, 295, 297, 300, 303, 306, 311, 316, 332, 333, 335, 351, 357, 358, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605, 606, 607, 610, 614, 615, 618, 619, 621, 623, 624, 625, 628, 629, 630, 632, 633, 634, 635, 638, 643, 645, 646, 648, 649, 650, 659, 662, 663, 669, 676, 678, 682, 683, 686, 687, 688, 689, 692, 694, 696, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 721, 723, 726, 727, 728, 729, 730, 731, 732, 733, 736, 739, 740, 742, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 816, 819, 821, 824, 826, 829, 831, 832, 835, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 861, 864, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "travers": [28, 31, 32, 74, 75, 128, 134, 136], "lowest": [28, 31, 32, 74, 75, 103, 104, 124, 151], "leav": [28, 31, 32, 71, 74, 75, 76, 77, 119, 120, 121, 123, 124, 128, 129, 131, 137, 138, 831, 875, 878], "to_n": [28, 74, 75], "item": [28, 32, 69, 70, 74, 75, 129, 134, 136, 137, 139, 247, 271, 316, 323, 324, 325, 332, 334, 336, 338, 340, 344, 606, 622, 644, 671, 672, 1012], "asarrai": [33, 34, 123, 131, 177, 726, 727], "nativedtyp": [33, 34, 118, 119, 129, 130, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 216, 219, 221, 222, 224, 227, 239, 241, 242, 246, 247, 249, 250, 253, 272, 273, 274, 277, 302, 315], "datatyp": [33, 34, 74, 75, 81, 82, 177, 181, 183, 216, 219, 247, 270, 302], "nativedevic": [33, 34, 103, 104, 118, 119, 129, 130, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 199, 200, 203, 205, 206, 208, 209, 216, 219, 221, 222, 224, 227, 239, 241, 242, 246, 316, 330, 331, 332, 346, 352, 354, 356, 358, 359, 362, 606, 659], "interpret": [33, 34, 177, 181, 183, 216, 219], "empty_lik": [33, 34, 79, 80, 177], "uniniti": [33, 34, 177, 185, 186, 189], "from_dlpack": [33, 34, 79, 80, 177], "full_lik": [33, 34, 79, 80, 177], "fill_valu": [33, 34, 79, 80, 129, 177, 199, 200, 203, 363, 473, 476, 493, 496], "float": [33, 34, 39, 40, 43, 44, 49, 50, 51, 52, 55, 56, 85, 86, 89, 90, 95, 96, 97, 98, 101, 102, 119, 120, 123, 124, 128, 129, 131, 136, 138, 162, 164, 176, 177, 178, 179, 185, 191, 192, 199, 200, 203, 205, 206, 208, 209, 221, 222, 239, 241, 247, 250, 253, 272, 279, 282, 292, 295, 303, 306, 316, 346, 352, 356, 359, 362, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 489, 492, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 587, 591, 592, 596, 597, 601, 602, 605, 606, 618, 619, 621, 633, 641, 642, 664, 665, 671, 672, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 758, 760, 761, 763, 764, 766, 775, 777, 784, 786, 787, 789, 791, 793, 794, 796, 809, 811, 815, 816, 819, 821, 824, 826, 829, 891, 892, 893, 894], "scalar": [33, 34, 129, 134, 139, 151, 177, 200, 203, 606, 659, 683, 687, 743, 809, 811], "fill": [33, 34, 74, 75, 103, 104, 177, 185, 199, 200, 203, 221, 222, 224, 227, 239, 241, 242, 246], "meshgrid": [33, 34, 79, 80, 177], "xy": [33, 34, 79, 80, 177, 211, 214], "ones_lik": [33, 34, 79, 80, 139, 177, 1012], "ones": [33, 34, 74, 75, 123, 134, 136, 137, 177, 191, 192, 224, 227, 242, 246, 363, 427, 430, 606, 659, 1012], "tril": [33, 34, 79, 80, 177], "k": [33, 34, 79, 80, 117, 134, 177, 191, 192, 229, 233, 234, 238, 606, 614, 726, 742, 743, 767, 770, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805], "n": [33, 34, 67, 68, 113, 114, 117, 123, 177, 211, 214, 229, 233, 234, 238, 606, 615, 726, 738, 743, 755, 757, 767, 770, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 794, 796, 797, 799, 803, 805, 806, 808, 809, 811, 812, 814, 831, 841, 844, 845, 848, 853, 856, 875, 878, 887, 890], "whose": [33, 34, 39, 40, 49, 50, 53, 54, 61, 62, 85, 86, 95, 96, 99, 100, 107, 108, 120, 123, 177, 229, 233, 234, 238, 363, 373, 376, 386, 389, 399, 402, 431, 434, 436, 439, 552, 555, 569, 572, 574, 577, 592, 596, 597, 601, 606, 617, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805, 831, 849, 852, 865, 868], "innermost": [33, 34, 49, 50, 95, 96, 177, 229, 233, 234, 238, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 775, 777, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805], "mxn": [33, 34, 177, 229, 233, 234, 238, 743, 755, 757, 775, 777, 778, 780, 784, 786, 787, 789, 797, 799, 803, 805], "matric": [33, 34, 49, 50, 95, 96, 150, 177, 211, 214, 229, 233, 234, 238, 726, 739, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 774, 775, 777, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805], "int": [33, 34, 43, 44, 47, 48, 51, 52, 53, 54, 55, 56, 67, 68, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 121, 124, 128, 129, 130, 131, 132, 139, 162, 167, 174, 175, 177, 191, 192, 199, 200, 203, 205, 206, 208, 209, 229, 233, 234, 238, 247, 260, 263, 273, 278, 279, 282, 286, 289, 297, 300, 316, 335, 338, 339, 340, 341, 349, 350, 351, 357, 358, 363, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 606, 612, 624, 625, 628, 629, 630, 633, 634, 643, 659, 662, 686, 688, 689, 692, 694, 696, 708, 710, 726, 727, 729, 731, 732, 733, 736, 743, 749, 751, 755, 757, 800, 802, 803, 805, 806, 808, 809, 811, 815, 821, 824, 826, 829, 831, 837, 840, 841, 844, 845, 848, 849, 852, 853, 856, 857, 860, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 892, 893, 894], "diagon": [33, 34, 49, 50, 177, 191, 192, 229, 233, 234, 238, 743, 803, 805], "triangular": [33, 34, 49, 50, 95, 96, 177, 229, 233, 234, 238, 743, 744, 747, 787, 789], "triu": [33, 34, 79, 80, 177], "upper": [33, 34, 49, 50, 74, 75, 95, 96, 123, 177, 191, 192, 234, 238, 743, 744, 747, 787, 789], "zeros_lik": [33, 34, 79, 80, 177, 726, 733, 736, 831, 832, 835, 1012], "creation": [34, 71, 74, 75, 76, 77, 78, 80, 118, 123, 129, 130, 134, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 216, 219, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246], "data_typ": [35, 36, 81, 82, 118, 123, 129, 247, 248, 249, 250, 253, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 284, 285, 286, 289, 291, 292, 295, 297, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315], "astyp": [35, 36, 47, 48, 81, 82, 93, 94, 129, 131, 247], "broadcast_arrai": [35, 36, 81, 82, 247], "broadcast_to": [35, 36, 81, 82, 129, 247], "can_cast": [35, 36, 81, 82, 124, 129, 247], "cast": [35, 36, 81, 82, 124, 129, 247, 250, 253, 265, 268, 831, 837, 840, 1012], "occur": [35, 36, 61, 62, 81, 82, 107, 108, 247, 265, 268], "rule": [35, 36, 49, 50, 81, 82, 95, 96, 121, 123, 124, 127, 128, 129, 132, 247, 250, 253, 265, 268, 303, 306, 363, 399, 402, 419, 422, 440, 443, 535, 538, 556, 559, 743, 744, 747, 749, 751, 781, 783, 791, 793], "float32": [35, 36, 47, 48, 81, 82, 87, 88, 93, 94, 121, 123, 129, 177, 242, 246, 247, 248, 249, 274, 277, 297, 300, 315, 606, 678, 682], "float64": [35, 36, 123, 129, 247, 250, 253, 265, 268, 297, 300, 315], "as_n": [35, 36, 81, 82, 129, 247, 271, 272, 273, 274, 277, 316, 332, 333, 354], "finfo": [35, 36, 81, 82, 247], "iinfo": [35, 36, 81, 82, 132, 247], "is_float_dtyp": [35, 36, 81, 82, 247], "is_int_dtyp": [35, 36, 81, 82, 247, 606, 683], "result_typ": [35, 36, 81, 82, 129, 247], "arrays_and_dtyp": [35, 36, 81, 82, 247, 303, 306], "ab": [39, 40, 85, 86, 123, 126, 363, 552, 555, 743, 809, 811, 1012], "aco": [39, 40, 85, 86, 363, 1012], "acosh": [39, 40, 85, 86, 247, 284, 285, 363, 1012], "x2": [39, 40, 41, 42, 49, 50, 74, 75, 85, 86, 87, 88, 95, 96, 119, 121, 177, 242, 246, 247, 311, 316, 351, 363, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 533, 534, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591, 606, 607, 610, 726, 731, 743, 749, 751, 767, 770, 781, 783, 791, 793, 800, 802, 806, 808], "asin": [39, 40, 85, 86, 363, 1012], "asinh": [39, 40, 85, 86, 363, 1012], "hyperbol": [39, 40, 85, 86, 162, 173, 363, 373, 376, 386, 389, 399, 402, 436, 439, 574, 577, 597, 601], "invers": [39, 40, 85, 86, 136, 150, 363, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 743, 764, 766, 784, 786], "sine": [39, 40, 85, 86, 363, 382, 385, 386, 389, 569, 572, 574, 577], "881": [39, 40, 85, 86, 162, 166, 363, 386, 389], "82": [39, 40], "atan": [39, 40, 85, 86, 363, 1012], "atan2": [39, 40, 85, 86, 363, 1012], "atanh": [39, 40, 85, 86, 363, 1012], "bitwise_and": [39, 40, 85, 86, 363], "bitwise_invert": [39, 40, 85, 86, 363], "bitwise_left_shift": [39, 40, 85, 86, 363], "bitwise_or": [39, 40, 85, 86, 363], "bitwise_right_shift": [39, 40, 85, 86, 363], "bitwise_xor": [39, 40, 85, 86, 363], "ceil": [39, 40, 85, 86, 177, 178, 179, 363, 1012], "express": [39, 40, 85, 86, 120, 132, 134, 139, 363, 369, 372, 382, 385, 391, 394, 395, 398, 431, 434, 569, 572, 592, 596], "radian": [39, 40, 85, 86, 120, 363, 369, 372, 382, 385, 391, 394, 395, 398, 431, 434, 569, 572, 592, 596], "cosin": [39, 40, 85, 86, 363, 369, 372, 373, 376, 431, 434, 436, 439], "54": [39, 40, 85, 86, 101, 102, 121, 363, 431, 434, 436, 439, 579, 582, 726, 742, 743, 781, 783], "416": [39, 40, 363, 431, 434], "99": [39, 40, 363, 386, 389], "cosh": [39, 40, 85, 86, 363, 1012], "divid": [39, 40, 74, 75, 85, 86, 121, 127, 363, 465, 468, 606, 671, 831, 870], "erf": [39, 40, 85, 86, 363], "exp": [39, 40, 85, 86, 363, 457, 460, 513, 516, 1012], "expm1": [39, 40, 85, 86, 363], "floor": [39, 40, 85, 86, 363, 419, 422, 606, 632, 1012], "floor_divid": [39, 40, 85, 86, 363], "greater": [39, 40, 74, 75, 85, 86, 363, 369, 372, 382, 385, 395, 398, 411, 414, 419, 422, 461, 464, 465, 468, 552, 555, 556, 559, 564, 567, 602, 605, 743, 749, 751, 831, 871, 874], "greater_equ": [39, 40, 85, 86, 363], "isfinit": [39, 40, 85, 86, 123, 363], "isinf": [39, 40, 85, 86, 363], "isnan": [39, 40, 85, 86, 363], "less_equ": [39, 40, 85, 86, 363], "log10": [39, 40, 85, 86, 363], "log1p": [39, 40, 85, 86, 363], "log2": [39, 40, 85, 86, 363], "logaddexp": [39, 40, 85, 86, 363], "logical_and": [39, 40, 85, 86, 363, 1012], "logical_not": [39, 40, 85, 86, 363, 1012], "logical_or": [39, 40, 85, 86, 363, 1012], "logical_xor": [39, 40, 85, 86, 363], "multipli": [39, 40, 85, 86, 121, 125, 127, 363, 606, 624], "neg": [39, 40, 53, 54, 67, 68, 85, 86, 99, 100, 113, 114, 124, 128, 131, 162, 164, 177, 178, 179, 191, 192, 363, 477, 480, 481, 484, 535, 538, 552, 555, 556, 559, 743, 794, 796, 806, 808, 809, 811, 831, 849, 852, 865, 868], "not_equ": [39, 40, 85, 86, 363], "pow": [39, 40, 85, 86, 363], "remaind": [39, 40, 74, 75, 85, 86, 363, 606, 632, 831, 870], "evalu": [39, 40, 74, 75, 85, 86, 128, 363, 453, 456, 457, 460, 497, 500, 501, 504, 505, 508, 509, 512, 540, 543, 564, 567, 583, 586], "94": [39, 40, 85, 86], "256": [39, 40, 726, 732], "0001": [39, 40], "36": [39, 40, 743, 781, 783], "67": [39, 40, 85, 86, 128, 363, 423, 426, 436, 439], "45": [39, 40, 123, 688, 689, 692, 743, 781, 783, 831, 870], "24": [39, 40, 101, 102, 363, 423, 426, 579, 582, 606, 624, 688, 689, 692, 743, 755, 757, 781, 783], "678": [39, 40], "32": [39, 40, 43, 44, 123, 137, 162, 164, 363, 423, 426, 726, 729, 732, 733, 736, 743, 781, 783], "sin": [39, 40, 85, 86, 127, 134, 363, 606, 633, 1012], "841": [39, 40, 85, 86, 363, 569, 572], "909": [39, 40, 85, 86, 363, 569, 572], "141": [39, 40, 85, 86, 363, 569, 572], "sinh": [39, 40, 85, 86, 363, 1012], "angl": [39, 40, 85, 86, 150, 363, 395, 398, 436, 439, 574, 577, 597, 601], "18": [39, 40, 85, 86, 121, 128, 363, 423, 426, 574, 577, 743, 755, 757, 781, 783], "63": [39, 40, 43, 44, 85, 86, 95, 96, 363, 574, 577, 579, 582, 743, 744, 747, 781, 783], "23": [39, 40, 85, 86, 363, 423, 426, 564, 567, 574, 577, 726, 732, 743, 755, 757], "232": [39, 40, 85, 86, 363, 574, 577], "51": [39, 40, 363, 423, 426, 574, 577], "sqrt": [39, 40, 85, 86, 363, 743, 809, 811], "squar": [39, 40, 49, 50, 85, 86, 95, 96, 123, 363, 579, 582, 726, 729, 743, 744, 747, 752, 754, 758, 760, 761, 763, 764, 766, 774, 790, 791, 793, 794, 796], "subtract": [39, 40, 85, 86, 121, 127, 363], "tan": [39, 40, 85, 86, 119, 120, 124, 128, 131, 134, 363, 382, 385, 386, 389, 743, 755, 757, 1012], "tangent": [39, 40, 85, 86, 120, 162, 173, 363, 391, 394, 395, 398, 399, 402, 592, 596, 597, 601], "56": [39, 40, 85, 86, 121, 363, 579, 582, 592, 596, 688, 689, 692, 743, 781, 783], "19": [39, 40, 85, 86, 121, 363, 423, 426, 592, 596, 743, 755, 757], "tanh": [39, 40, 85, 86, 134, 162, 363, 1012], "real": [39, 40, 85, 86, 363, 597, 601], "762": [39, 40, 85, 86, 162, 173, 363, 597, 601], "964": [39, 40, 85, 86, 162, 173, 363, 597, 601], "trunc": [39, 40, 85, 86, 363], "elementwis": [40, 74, 75, 86, 118, 124, 134, 139, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 587, 591, 592, 596, 597, 601, 602, 605], "all_equ": [41, 42, 87, 88, 606], "equality_matrix": [41, 42, 87, 88, 606, 607, 610], "compar": [41, 42, 74, 75, 87, 88, 123, 132, 137, 606, 607, 610, 614, 615], "matrix": [41, 42, 49, 50, 74, 75, 87, 88, 95, 96, 177, 211, 214, 229, 233, 234, 238, 606, 607, 610, 618, 726, 739, 743, 744, 747, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 784, 786, 787, 789, 791, 793, 794, 796, 797, 799, 803, 805, 812, 814], "x1": [41, 42, 85, 86, 87, 88, 119, 121, 177, 242, 246, 247, 274, 277, 311, 316, 351, 363, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 533, 534, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591, 606, 607, 610, 614, 726, 731, 743, 749, 751, 767, 770, 781, 783, 791, 793, 800, 802, 806, 808], "gather_nd": [41, 42, 74, 75, 87, 88, 606, 1012], "gather": [41, 42, 74, 75, 87, 88, 606, 635, 638], "cuda": [41, 42, 74, 75, 87, 88, 103, 104, 134, 137, 151, 177, 205, 206, 208, 209, 316, 323, 329, 354, 606, 634, 635, 638, 659, 662, 663], "to_numpi": [41, 42, 74, 75, 87, 88, 137, 606, 1012], "adam_step": [43, 44, 89, 90, 688], "mw": [43, 44, 89, 90, 138, 688, 689, 692, 694, 696], "vw": [43, 44, 89, 90, 138, 688, 689, 692, 694, 696], "beta1": [43, 44, 89, 90, 138, 688, 689, 692, 694, 696, 708, 710], "beta2": [43, 44, 89, 90, 138, 688, 689, 692, 694, 696, 708, 710], "999": [43, 44, 85, 86, 89, 90, 138, 363, 597, 601, 688, 689, 692, 694, 696, 708, 710], "epsilon": [43, 44, 51, 52, 55, 56, 89, 90, 97, 98, 101, 102, 124, 128, 131, 138, 688, 689, 692, 694, 696, 708, 710, 743, 775, 777, 784, 786, 815, 816, 819, 821, 824, 826, 829], "1e": [43, 44, 51, 52, 55, 56, 89, 90, 97, 98, 101, 102, 124, 128, 131, 138, 139, 606, 642, 688, 689, 692, 694, 696, 708, 710, 743, 794, 796, 815, 816, 819, 821, 824, 826, 829, 1012], "07": [43, 44, 51, 52, 89, 90, 97, 98, 138, 363, 564, 567, 688, 689, 692, 694, 696, 708, 710, 815, 816, 819, 821, 824, 826, 829], "cost": [43, 44, 89, 90, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894], "respect": [43, 44, 89, 90, 119, 121, 123, 127, 128, 129, 132, 177, 211, 214, 363, 364, 367, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 556, 559, 587, 591, 688, 689, 692, 694, 696, 698, 699, 701, 708, 710, 712, 714, 716, 718, 743, 787, 789, 891, 892, 893, 894], "weight": [43, 44, 89, 90, 124, 128, 138, 139, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 739, 740, 742], "w": [43, 44, 47, 48, 74, 75, 89, 90, 93, 94, 134, 137, 138, 606, 615, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 726, 727, 728, 729, 730, 731, 732, 733, 736], "dc": [43, 44, 89, 90, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "dw": [43, 44, 89, 90, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "averag": [43, 44, 89, 90, 688, 689, 692, 694, 696, 708, 710, 891, 892, 893], "moment": [43, 44, 89, 90, 125, 151, 688, 689, 692, 694, 696, 708, 710], "forget": [43, 44, 89, 90, 688, 689, 692, 694, 696, 708, 710], "divisor": [43, 44, 89, 90, 363, 440, 443, 556, 559, 688, 689, 692, 694, 696, 708, 710], "dure": [43, 44, 74, 75, 89, 90, 124, 128, 129, 130, 131, 151, 174, 175, 316, 358, 606, 684, 688, 689, 692, 694, 696, 708, 710, 743, 767, 770, 891, 892, 893, 894], "adam": [43, 44, 89, 90, 137, 138, 139, 688, 689, 692, 694, 696, 708, 710, 1012], "divis": [43, 44, 89, 90, 124, 363, 419, 422, 440, 443, 465, 468, 556, 559, 606, 632, 642, 665, 671, 672, 688, 689, 692, 694, 696, 708, 710], "delta": [43, 44, 89, 90, 688, 689, 692], "dcdw": [43, 44, 89, 90, 688, 689, 692, 694, 696, 699, 701, 708, 710, 712, 714], "adam_step_delta": [43, 44, 89, 90, 688, 689, 692], "639": [43, 44, 688, 689, 692], "11": [43, 44, 71, 76, 77, 85, 86, 103, 104, 121, 123, 128, 363, 377, 380, 403, 406, 560, 563, 606, 624, 634, 743, 755, 757, 781, 783, 815, 826, 829, 831, 849, 852, 857, 860], "00121": [43, 44], "0102": [43, 44], "0397": [43, 44], "exclus": [43, 44, 74, 75, 89, 90, 123, 124, 128, 139, 177, 178, 179, 606, 624, 652, 653, 655, 688, 703, 706], "is_var": [43, 44, 89, 90, 688, 703, 706], "gradient": [44, 74, 75, 90, 118, 128, 137, 138, 150, 151, 316, 357, 689, 692, 694, 696, 698, 699, 701, 703, 706, 708, 710, 712, 714, 716, 718, 720, 721, 722, 723, 724, 725, 891, 892, 893, 894, 1012], "depthwise_conv2d": [47, 48, 93, 94, 726, 1012], "stride": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "pad": [47, 48, 93, 94, 606, 633, 726, 727, 728, 729, 730, 731, 732, 733, 736, 831, 841, 844, 887, 890], "data_format": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "nhwc": [47, 48, 93, 94, 726, 729, 730, 733, 736], "dilat": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "batch_siz": [47, 48, 93, 94, 137, 726, 727, 728, 729, 730, 731, 732, 733, 736], "h": [47, 48, 93, 94, 117, 128, 726, 729, 730, 731, 732, 733, 736], "convolut": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "fh": [47, 48, 93, 94, 726, 729, 730, 731, 732, 733, 736], "fw": [47, 48, 93, 94, 123, 726, 727, 728, 729, 730, 731, 732, 733, 736], "d_in": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "slide": [47, 48, 93, 94, 726, 727, 728, 729, 730, 731, 732, 733, 736], "valid": [47, 48, 67, 68, 93, 94, 113, 114, 123, 129, 134, 247, 270, 726, 727, 728, 729, 730, 731, 732, 733, 736, 831, 875, 878], "algorithm": [47, 48, 93, 94, 151, 726, 727, 728, 729, 730, 731, 732, 733, 736], "nchw": [47, 48, 93, 94, 726, 729, 730, 733, 736], "randint": [47, 48, 93, 94, 103, 104, 1012], "255": [47, 48, 93, 94], "128": [47, 48, 93, 94, 726, 732, 743, 781, 783], "random_norm": [47, 48, 93, 94, 123, 726, 729, 732, 733, 736, 743, 794, 796], "linear_algebra": [49, 50, 95, 96, 118, 136, 743, 744, 747, 749, 751, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 771, 773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 809, 811, 812, 814], "choleski": [49, 50, 95, 96, 743], "symmetr": [49, 50, 95, 96, 128, 743, 744, 747, 758, 760, 761, 763, 812, 814], "625": [49, 50, 743, 744, 747], "25": [49, 50, 51, 52, 101, 102, 128, 363, 574, 577, 579, 582, 583, 586, 743, 744, 747, 755, 757, 764, 766, 815, 821, 824], "cross": [49, 50, 51, 52, 97, 98, 743, 815, 816, 819, 821, 824, 826, 829, 1012], "axi": [49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 74, 75, 79, 80, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 119, 121, 123, 124, 128, 129, 131, 132, 134, 136, 139, 150, 162, 167, 177, 205, 206, 208, 209, 316, 317, 320, 325, 338, 339, 340, 341, 342, 343, 344, 345, 357, 606, 624, 625, 634, 686, 743, 749, 751, 755, 757, 806, 808, 809, 811, 815, 821, 824, 826, 829, 831, 837, 840, 841, 844, 845, 848, 849, 852, 857, 860, 865, 868, 870, 871, 874, 875, 878, 879, 882, 883, 886, 887, 890], "det": [49, 50, 743], "offset": [49, 50, 55, 56, 101, 102, 743, 755, 757, 803, 805], "axis1": [49, 50, 53, 54, 99, 100, 743, 755, 757, 831, 879, 882], "axis2": [49, 50, 743, 755, 757], "eigh": [49, 50, 743], "namedtupl": [49, 50, 61, 62, 107, 108, 743, 758, 760, 787, 789, 794, 796], "eigvalsh": [49, 50, 743], "inv": [49, 50, 136, 743, 1012], "matmul": [49, 50, 95, 96, 118, 123, 125, 134, 743, 794, 796, 1012], "matrix_norm": [49, 50, 74, 75, 743], "ord": [49, 50, 74, 75, 743, 771, 773, 809, 811], "fro": [49, 50, 743, 771, 773], "keepdim": [49, 50, 65, 66, 67, 68, 74, 75, 111, 112, 113, 114, 132, 606, 686, 743, 771, 773, 809, 811], "matrix_rank": [49, 50, 743], "rtol": [49, 50, 743, 775, 777, 784, 786], "matrix_transpos": [49, 50, 136, 743], "outer": [49, 50, 743, 891, 892, 893, 894], "pinv": [49, 50, 743, 1012], "qr": [49, 50, 743], "reduc": [49, 50, 67, 68, 74, 75, 113, 114, 136, 316, 357, 606, 629, 743, 787, 789], "solv": [49, 50, 135, 150, 743], "svd": [49, 50, 743, 1012], "full_matric": [49, 50, 743, 794, 796], "svdval": [49, 50, 743], "tensordot": [49, 50, 743], "trace": [49, 50, 74, 75, 134, 151, 606, 652, 653, 655, 743], "vecdot": [49, 50, 743], "vector_norm": [49, 50, 74, 75, 743], "vector_to_skew_symmetric_matrix": [49, 50, 743, 1012], "binary_cross_entropi": [51, 52, 97, 98, 815], "pred": [51, 52, 97, 98, 124, 128, 131, 815, 816, 819, 821, 824, 826, 829], "predict": [51, 52, 97, 98, 815, 816, 819, 821, 824, 826, 829], "amount": [51, 52, 97, 98, 130, 316, 359, 815, 816, 819, 821, 824, 826, 829], "smooth": [51, 52, 97, 98, 815, 816, 819, 821, 824, 826, 829], "binari": [51, 52, 97, 98, 363, 403, 406, 415, 418, 423, 426, 529, 532, 815, 816, 819], "entropi": [51, 52, 97, 98, 815, 816, 819, 821, 824, 826, 829], "357": [51, 52, 97, 98, 815, 816, 819, 826, 829], "223": [51, 52, 97, 98, 815, 816, 819], "cross_entropi": [51, 52, 97, 98, 124, 128, 131, 815, 826, 829], "along": [51, 52, 53, 54, 67, 68, 74, 75, 97, 98, 99, 100, 113, 114, 118, 131, 177, 205, 206, 208, 209, 316, 338, 339, 340, 341, 342, 343, 344, 345, 357, 606, 624, 625, 634, 686, 743, 771, 773, 803, 805, 806, 808, 809, 811, 815, 821, 824, 826, 829, 831, 837, 840, 849, 852, 857, 860, 865, 868, 870, 875, 878, 883, 886, 891, 892, 893, 894], "3862944": [51, 52, 815, 821, 824], "sparse_cross_entropi": [51, 52, 97, 98, 815], "logit": [51, 52, 97, 98, 815, 826, 829], "spars": [51, 52, 97, 98, 815, 826, 829], "loss": [52, 98, 118, 124, 137, 138, 139, 816, 819, 821, 824, 826, 829, 1012], "clip": [53, 54, 74, 75, 99, 100, 124, 128, 131, 134, 137, 139, 363, 533, 534, 606, 618, 619, 621, 831, 1012], "x_min": [53, 54, 74, 75, 99, 100, 134, 139, 831, 832, 835], "x_max": [53, 54, 74, 75, 99, 100, 134, 139, 831, 832, 835], "roll": [53, 54, 99, 100, 119, 128, 831], "minimum": [53, 54, 74, 75, 99, 100, 134, 139, 316, 363, 364, 367, 606, 641, 642, 664, 665, 671, 672, 831, 832, 835, 1012], "maximum": [53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 121, 134, 137, 139, 316, 337, 341, 345, 357, 363, 606, 618, 619, 621, 633, 688, 708, 710, 831, 832, 835, 1012], "concat": [53, 54, 74, 75, 99, 100, 316, 342, 343, 344, 345, 357, 606, 633, 831, 1012], "constant_pad": [53, 54, 99, 100, 831], "pad_width": [53, 54, 99, 100, 831, 841, 844, 887, 890], "expand_dim": [53, 54, 99, 100, 134, 137, 831, 1012], "flip": [53, 54, 99, 100, 136, 137, 139, 363, 407, 410, 831, 857, 860, 1012], "permute_dim": [53, 54, 99, 100, 831], "reshap": [53, 54, 74, 75, 99, 100, 123, 131, 134, 136, 139, 831, 1012], "shift": [53, 54, 99, 100, 119, 121, 363, 411, 414, 419, 422, 831, 865, 868], "larger": [53, 54, 99, 100, 123, 134, 139, 247, 279, 282, 831, 832, 835, 865, 868], "flatten": [53, 54, 61, 62, 74, 75, 99, 100, 107, 108, 606, 633, 743, 781, 783, 809, 811, 831, 857, 860, 865, 868], "restor": [53, 54, 99, 100, 831, 865, 868], "squeez": [53, 54, 99, 100, 831, 1012], "stack": [53, 54, 74, 75, 99, 100, 134, 177, 229, 233, 234, 238, 743, 752, 754, 755, 757, 758, 760, 761, 763, 764, 766, 767, 770, 774, 775, 777, 778, 780, 784, 786, 787, 789, 794, 796, 797, 799, 803, 805, 831, 1012], "swapax": [53, 54, 99, 100, 831], "axis0": [53, 54, 99, 100, 831, 879, 882], "tile": [53, 54, 99, 100, 831, 1012], "rep": [53, 54, 99, 100, 831, 883, 886], "zero_pad": [53, 54, 99, 100, 831, 1012], "layer_norm": [55, 56, 101, 102], "normalized_idx": [55, 56, 101, 102], "05": [55, 56, 101, 102, 123, 316, 688, 689, 692], "scale": [55, 56, 101, 102, 128, 316, 355, 356, 688, 712, 714, 726, 738, 741, 742], "new_std": [55, 56, 101, 102], "normal": [55, 56, 101, 102, 137, 831, 875, 878], "small": [55, 56, 101, 102, 121, 124, 134, 138, 151, 363, 535, 538, 743, 775, 777, 784, 786], "constant": [55, 56, 101, 102, 118, 124, 138, 139, 151, 316, 323, 324, 831, 841, 844], "denomin": [55, 56, 101, 102, 124, 151, 606, 632, 642, 665, 671, 672], "_min_bas": [55, 56, 101, 102, 606, 672], "learnabl": [55, 56, 101, 102, 139], "gamma": [55, 56, 101, 102], "beta": [55, 56, 101, 102], "after": [55, 56, 74, 75, 101, 102, 121, 123, 128, 129, 133, 247, 311, 316, 363, 579, 582, 688, 694, 696, 698, 699, 701, 708, 710, 712, 714, 716, 718], "0976": [55, 56], "3452": [55, 56], "2740": [55, 56], "1047": [55, 56], "5886": [55, 56], "2732": [55, 56], "7696": [55, 56], "7024": [55, 56], "2518": [55, 56], "001": [55, 56, 137, 138, 363, 564, 567, 688, 689, 692], "576": [55, 56], "292": [55, 56], "33": [55, 56, 85, 86, 743, 781, 783], "581": [55, 56, 688, 689, 692], "891": [55, 56, 162, 166], "01": [55, 56, 139, 363, 560, 563, 564, 567], "579": [55, 56], "931": [55, 56], "norm": [56, 74, 75, 102, 118, 606, 618, 619, 621, 743, 771, 773, 809, 811, 1012], "random": [58, 74, 75, 104, 118, 130, 139, 150, 1012], "unique_al": [61, 62, 107, 108], "unique_count": [61, 62, 107, 108], "count": [61, 62, 67, 68, 107, 108, 113, 114, 121, 137, 316, 351, 743, 806, 808, 831, 849, 852], "field": [61, 62, 107, 108, 150, 743, 758, 760, 787, 789, 794, 796], "uc": [61, 62], "unique_invers": [61, 62, 107, 108], "unique_valu": [61, 62, 107, 108], "argsort": [63, 64, 109, 110], "descend": [63, 64, 109, 110, 743, 794, 796, 797, 799], "sort": [64, 71, 74, 75, 76, 77, 78, 110, 118, 743, 758, 760, 794, 796, 797, 799], "einsum": [65, 66, 111, 112], "equat": [65, 66, 111, 112, 743, 791, 793], "max": [65, 66, 74, 75, 111, 112, 247, 279, 282, 286, 289, 363, 533, 606, 618, 619, 621, 629, 662, 663, 743, 775, 777, 784, 786], "min": [65, 66, 74, 75, 111, 112, 247, 279, 282, 286, 289, 363, 534, 606, 629, 662, 663, 671, 743, 787, 789, 794, 796, 797, 799, 809, 811], "prod": [65, 66, 74, 75, 111, 112, 121, 129, 606, 629], "std": [65, 66, 111, 112, 121], "var": [65, 66, 111, 112, 115, 116, 121, 134, 891, 892, 893], "statist": [66, 112, 115, 116, 118, 123, 129], "sequenc": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 121, 123, 129, 132, 150, 174, 175, 316, 323, 324, 606, 615, 656, 831, 870, 875, 878], "logic": [67, 68, 113, 114, 123, 126, 127, 129, 130, 136, 316, 349, 363, 517, 520, 521, 524, 525, 528, 1012], "AND": [67, 68, 113, 114, 363, 403, 406, 517, 520], "reduct": [67, 68, 74, 75, 113, 114, 123, 129, 136, 606, 629, 662, 663, 1012], "By": [67, 68, 113, 114, 121, 124, 128, 131, 138, 139, 606, 624, 625, 743, 806, 808, 831, 857, 860], "integ": [67, 68, 74, 75, 103, 104, 113, 114, 123, 128, 129, 136, 177, 178, 179, 199, 247, 286, 289, 297, 300, 303, 306, 363, 364, 367, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 461, 464, 465, 468, 529, 532, 552, 555, 556, 559, 560, 563, 602, 605, 743, 774, 806, 808, 809, 811, 831, 870], "interv": [67, 68, 74, 75, 103, 104, 113, 114, 134, 139, 177, 178, 179, 205, 206, 208, 209, 743, 806, 808, 831, 832, 835, 875, 878], "rank": [67, 68, 113, 114, 177, 211, 214, 606, 686, 743, 749, 751, 775, 777, 787, 789, 791, 793, 803, 805, 806, 808, 809, 811, 831, 841, 844, 845, 848, 875, 878, 887, 890], "backward": [67, 68, 113, 114, 151, 363, 556, 559, 743, 806, 808], "invalid": [67, 68, 113, 114, 129, 132, 743, 806, 808], "except": [67, 68, 74, 75, 113, 114, 120, 127, 131, 132, 136, 151, 247, 260, 263, 606, 616, 627, 650, 684, 743, 784, 786, 831, 837, 840, 875, 878], "singleton": [67, 68, 113, 114, 743, 809, 811, 831, 871, 874], "accordingli": [67, 68, 113, 114, 132, 177, 211, 214, 363, 457, 460, 743, 809, 811], "dimension": [67, 68, 74, 75, 113, 114, 177, 178, 179, 191, 192, 211, 214, 743, 749, 751, 752, 754, 767, 770, 775, 777, 781, 783, 784, 786, 806, 808, 809, 811, 831, 870], "non": [67, 68, 113, 114, 121, 128, 129, 134, 174, 175, 247, 250, 253, 291, 363, 521, 524, 525, 528, 726, 729, 743, 752, 754, 775, 777, 794, 796, 800, 802, 806, 808, 809, 811], "util": [68, 114, 118, 130, 316, 346], "add_ivy_array_instance_method": 69, "cl": [69, 70, 115, 116], "to_ignor": [69, 70, 115, 116], "loop": [69, 70, 115, 116, 125, 132, 151, 891, 892, 893, 894], "_wrap_funct": [69, 70, 115, 116, 124, 126], "toi": [69, 70, 115, 116], "arrayexampl": [69, 70], "hasattr": [69, 70, 115, 116, 136], "relu": [69, 70, 137, 138, 162, 163, 164, 1012], "softmax": [69, 70, 162, 726, 741, 742, 1012], "dict_in": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "queue": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 316, 323, 324, 606, 661, 666], "queue_load_s": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "container_combine_method": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "list_join": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "queue_timeout": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 606], "print_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "key_length_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_ind": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_line_spac": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "ivyh": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "default_key_color": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "keyword_color_dict": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "rebuild_child_contain": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "types_to_iteratively_nest": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "alphabetical_kei": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "containerwithactiv": [71, 72, 76, 77], "containerwithcr": [71, 76, 77, 79], "containerwithdatatyp": [71, 76, 77, 81], "containerwithdevic": [71, 76, 77, 83], "containerwithelementwis": [71, 76, 77, 85, 128], "containerwithgener": [71, 76, 77, 87], "containerwithgradi": [71, 76, 77, 89], "containerwithimag": [71, 76, 77, 91], "containerwithlay": [71, 76, 77, 93], "containerwithlinearalgebra": [71, 76, 77, 95], "containerwithloss": [71, 76, 77, 97], "containerwithnorm": [71, 76, 77, 101], "containerwithrandom": [71, 76, 77, 103], "containerwithsearch": [71, 76, 77, 105], "containerwithset": [71, 76, 77, 107], "containerwithsort": [71, 76, 77, 109], "containerwithstatist": [71, 76, 77, 111], "containerwithutil": [71, 76, 77, 113], "object": [71, 74, 75, 76, 77, 78, 123, 136, 139, 177, 194, 197, 247, 279, 282, 316, 358, 688], "represent": [71, 74, 75, 76, 77, 78, 150, 176, 247, 248, 249, 279, 282, 286, 289, 316, 329, 330, 363, 364, 367, 377, 380, 403, 406, 415, 418, 423, 426, 529, 532, 535, 538, 606, 612, 676], "dictionari": [71, 74, 75, 76, 77, 78, 137, 151, 316, 356], "multiprocess": [71, 74, 75, 76, 77, 78, 137, 151, 316, 323, 606], "asynchron": [71, 74, 75, 76, 77, 78], "arriv": [71, 74, 75, 76, 77, 78], "timeout": [71, 74, 75, 76, 77, 78, 316, 323, 324, 606, 661, 666], "length": [71, 74, 75, 76, 77, 78, 123, 132, 137, 177, 178, 179, 211, 214, 743, 794, 796, 797, 799, 831, 861, 864], "whitespac": [71, 74, 75, 76, 77, 78], "indent": [71, 74, 75, 76, 77, 78, 137], "extra": [71, 74, 75, 76, 77, 78, 121, 126, 127, 134, 688, 698], "newlin": [71, 74, 75, 76, 77, 78, 120], "handl": [71, 74, 75, 76, 77, 78, 117, 119, 123, 124, 126, 128, 129, 130, 131, 138, 151, 174, 175, 316, 329, 330, 331, 332, 333, 347, 351, 352, 359, 362, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "color": [71, 74, 75, 76, 77, 78, 1056, 1057], "map": [71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 124, 128, 137, 150, 151, 316, 323], "termcolor": [71, 74, 75, 76, 77, 78], "rebuild": [71, 74, 75, 76, 77, 78], "constructor": [71, 74, 75, 76, 77, 78, 129, 130, 136, 606, 613], "param": [71, 74, 75, 76, 77, 78, 87, 88, 134, 139, 606, 612, 634, 635, 638], "alphabet": [71, 74, 75, 76, 77, 78], "preserv": [71, 74, 75, 76, 77, 78, 123, 139, 151, 688, 721, 831, 849, 852], "multidevcontain": [71, 74, 75, 76, 78], "at_dev": [71, 76, 78, 316, 326, 327], "containerbas": [72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128], "key_chain": [72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114], "to_appli": [72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114], "prune_unappli": [72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114], "map_sequ": [72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114], "chain": [72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 127, 128, 138, 139, 151, 891, 892, 893], "prune": [72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114], "static_softplu": [72, 73], "__getitem__": [74, 75, 128], "queri": [74, 75, 128, 129, 136, 316, 346, 356, 726, 741, 742], "slice": [74, 75, 606, 634, 635, 638], "__setitem__": [74, 75, 127, 128, 136], "val": [74, 75, 131, 136, 606, 648, 649, 650, 664, 665], "all_fals": [74, 75], "assert_is_bool": [74, 75], "entri": [74, 75, 177, 205, 206, 208, 209, 831, 870], "assert": [74, 75, 123, 132, 136, 137, 606, 616], "all_key_chain": [74, 75], "include_empti": [74, 75], "all_tru": [74, 75, 128, 137], "arrays_as_list": [74, 75], "intermedi": [74, 75], "as_arrai": [74, 75, 606, 643, 669], "as_bool": [74, 75], "as_on": [74, 75], "as_random_uniform": [74, 75], "low": [74, 75, 103, 104, 134], "uniform": [74, 75, 103, 104, 138], "boundari": [74, 75], "as_vari": [74, 75, 123], "as_zero": [74, 75], "assert_contains_sub_contain": [74, 75], "sub_cont": [74, 75], "diff": [74, 75, 128, 137], "screen": [74, 75, 137], "assert_contains_sub_structur": [74, 75], "check_shap": [74, 75], "assert_ident": [74, 75], "check_typ": [74, 75], "same_arrai": [74, 75, 137], "arrays_equ": [74, 75, 606], "assert_identical_structur": [74, 75], "at_key_chain": [74, 75], "ignore_key_error": [74, 75], "ignore_non": [74, 75], "at_kei": [74, 75], "ignor": [74, 75, 121, 123, 151, 177, 211, 214], "substr": [74, 75], "clip_min": [74, 75], "clip_max": [74, 75], "config": [74, 75, 137], "duplic": [74, 75, 120, 125, 126, 132, 136, 138], "container_rightmost": [74, 75], "common_key_chain": [74, 75, 128], "contains_sub_contain": [74, 75], "match": [74, 75, 128, 247, 250, 253, 363, 556, 559, 606, 656], "contains_sub_structur": [74, 75], "create_if_abs": [74, 75], "inplac": [74, 75, 89, 90, 117, 119, 121, 126, 127, 136, 138, 606, 616, 647, 650, 651, 673, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "cutoff_at_depth": [74, 75], "depth_cutoff": [74, 75], "cutoff_at_height": [74, 75], "height_cutoff": [74, 75], "deep_copi": [74, 75, 137], "intern": [74, 75, 120, 123, 127, 128, 130, 131, 316, 688, 724], "belong": [74, 75, 138], "dev_clon": [74, 75, 316], "dev_dist": [74, 75, 316], "dev_str": [74, 75], "diff_kei": [74, 75], "detect_key_diff": [74, 75], "detect_value_diff": [74, 75], "detect_shape_diff": [74, 75], "treat": [74, 75, 123, 135, 139, 174, 175], "detect": [74, 75, 119, 123, 128, 132, 137, 138], "container0": [74, 75], "einops_rearrang": [74, 75, 606], "axes_length": [74, 75, 606, 628, 629, 630], "rearrang": [74, 75, 606, 628, 630], "einops_reduc": [74, 75, 606], "One": [74, 75, 103, 104, 123, 129, 134, 136, 137, 606, 629, 831, 861, 864], "callabl": [74, 75, 123, 128, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 174, 175, 247, 284, 285, 316, 357, 606, 612, 617, 627, 629, 891, 892, 893, 894], "einops_repeat": [74, 75, 606], "find_sub_contain": [74, 75], "sub_cont_to_find": [74, 75], "exsit": [74, 75], "find_sub_structur": [74, 75], "sub_struc_to_find": [74, 75], "flatten_key_chain": [74, 75, 137], "__": [74, 75, 121, 137], "above_height": [74, 75, 137], "below_depth": [74, 75, 137], "format_key_chain": [74, 75], "format_fn": [74, 75], "string": [74, 75, 125, 129, 130, 132, 134, 137, 247, 248, 249, 274, 277, 291, 315, 316, 329, 330, 331, 332, 346, 352, 358, 359, 362, 606, 626], "from_disk_as_hdf5": [74, 75, 137], "h5_obj_or_filepath": [74, 75], "slice_obj": [74, 75], "load": [74, 75, 151], "disk": [74, 75, 137], "h5py": [74, 75], "hdf5": [74, 75, 137], "h5": [74, 75], "from_disk_as_json": [74, 75, 137], "json_filepath": [74, 75], "json": [74, 75, 137], "from_disk_as_pickl": [74, 75, 137], "pickle_filepath": [74, 75], "pickl": [74, 75, 128, 137], "from_flat_list": [74, 75], "flat_list": [74, 75], "hierarchi": [74, 75, 137], "flat": [74, 75, 606, 662, 831, 857, 860], "popul": [74, 75, 123, 129, 130, 134], "from_numpi": [74, 75, 137], "h5_file_s": [74, 75], "batch": [74, 75, 124, 128, 137, 316, 355, 356, 606, 633, 726, 739, 743, 809, 811, 891, 892, 893, 894], "handle_inplac": [74, 75], "prime": [74, 75], "overwritten": [74, 75, 125, 127], "has_kei": [74, 75], "query_kei": [74, 75], "somewher": [74, 75], "has_key_chain": [74, 75], "has_nan": [74, 75, 606], "include_inf": [74, 75, 606, 645, 687], "leafwis": [74, 75], "nan": [74, 75, 118, 120, 123, 176, 247, 250, 253, 363, 364, 367, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 477, 480, 485, 488, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 606, 645, 687, 726, 742], "well": [74, 75, 123, 131, 138, 139, 150, 606, 645, 743, 791, 793], "inf": [74, 75, 123, 176, 606, 645, 687, 743, 809, 811], "identical_array_shap": [74, 75], "identical_config": [74, 75], "identical_structur": [74, 75], "if_exist": [74, 75], "inplace_upd": [74, 75, 131, 606], "key_chains_contain": [74, 75], "sub_str": [74, 75], "join": [74, 75, 831, 837, 840, 875, 878, 1012], "list_stack": [74, 75, 137], "dim": [74, 75, 129, 606, 659], "func": [74, 75, 128, 174, 175, 316, 357, 606, 617, 688, 698], "map_cont": [74, 75], "include_self": [74, 75], "possibi": [74, 75], "max_depth": [74, 75, 316, 319, 322, 327, 337, 341, 345, 606, 644], "multi_map": [74, 75, 128], "map_nest": [74, 75, 85, 86, 95, 96, 99, 100], "leftmost": [74, 75], "multi_map_in_static_method": [74, 75, 128], "fn_name": [74, 75], "num_arrai": [74, 75, 123], "overwrite_at_key_chain": [74, 75], "overwrit": [74, 75, 131, 134, 316, 357], "target_dict": [74, 75], "return_dict": [74, 75], "prune_empti": [74, 75], "keep_non": [74, 75], "empti": [74, 75, 127, 129, 130, 177, 178, 179, 688, 725], "prune_key_chain": [74, 75], "key1": [74, 75, 138], "key2": [74, 75], "key3": [74, 75], "prune_key_from_key_chain": [74, 75], "prune_kei": [74, 75], "prune_keys_from_key_chain": [74, 75], "remove_key_length_limit": [74, 75], "remove_print_limit": [74, 75], "reshape_lik": [74, 75], "leading_shap": [74, 75], "return_cont": [74, 75], "restructur": [74, 75], "keep_orig": [74, 75], "transpos": [74, 75, 136, 139, 316, 344, 726, 728, 730, 732, 743, 778, 780, 784, 786, 1012], "restructure_key_chain": [74, 75], "keychain_map": [74, 75], "set_at_key_chain": [74, 75], "set_at_kei": [74, 75], "set_framework": [74, 75, 134, 136, 137, 139], "set_ivy_backend": [74, 75], "ivy_backend": [74, 75], "attribut": [74, 75, 120, 128, 129, 135, 136, 137, 138, 247, 279, 282, 284, 285, 286, 289, 316, 353], "show_sub_contain": [74, 75], "sub_cont_or_keychain": [74, 75], "shuffl": [74, 75, 1012], "seed_valu": [74, 75], "seed": [74, 75, 1012], "shuffle_h5_fil": [74, 75], "dataset": [74, 75, 137, 149, 1012], "size_ordered_arrai": [74, 75], "keychain": [74, 75], "smallest": [74, 75, 247, 279, 282, 286, 289, 363, 427, 430], "largest": [74, 75, 150, 247, 279, 282, 286, 289, 743, 794, 796], "slice_kei": [74, 75], "key_slic": [74, 75], "all_depth": [74, 75], "slice_via_kei": [74, 75], "sort_by_kei": [74, 75], "num_or_size_split": [74, 75, 134, 831, 870], "with_remaind": [74, 75, 831, 870], "constitu": [74, 75, 139], "evenli": [74, 75, 177, 178, 179, 205, 206, 208, 209, 831, 870], "store": [74, 75, 120, 125, 127, 128, 134, 136, 137, 138, 177, 242, 246, 606, 633, 688, 724, 743, 803, 805, 831, 870], "stop_gradi": [74, 75, 89, 90, 138, 316, 357, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894, 1012], "preserve_typ": [74, 75, 688, 721], "stop": [74, 75, 79, 80, 134, 151, 177, 178, 179, 205, 206, 208, 209, 316, 328, 357, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 721, 891, 892, 893, 894], "structural_diff": [74, 75], "to_devic": [74, 75, 316, 332], "target": [74, 75, 117, 133, 137, 138, 139, 316, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 1012], "to_dict": [74, 75], "to_disk_as_hdf5": [74, 75, 137], "starting_index": [74, 75], "max_batch_s": [74, 75], "later": [74, 75, 123, 606, 617], "to_disk_as_json": [74, 75, 137], "to_disk_as_pickl": [74, 75, 137], "to_flat_list": [74, 75], "to_iter": [74, 75, 128], "leaf_keys_onli": [74, 75], "to_iterator_kei": [74, 75], "to_iterator_valu": [74, 75], "to_json": [74, 75], "to_list": [74, 75, 606, 1012], "to_multi_dev": [74, 75], "distributedarrai": [74, 75], "update_backend": [74, 75], "to_raw": [74, 75], "raw": [74, 75, 120], "trim_kei": [74, 75], "max_length": [74, 75], "try_kc": [74, 75], "tri": [74, 75], "arbitrari": [74, 75, 119, 123, 124, 128, 131, 138, 151, 177, 211, 214, 247, 255, 258, 303, 306, 316, 342, 343, 345], "concatten": [74, 75, 316, 342, 343, 344, 345, 357], "unstack": [74, 75, 128, 134, 137, 606, 1012], "dim_siz": [74, 75, 316], "update_config": [74, 75], "global_norm": [74, 75, 87, 88], "vector": [74, 75, 150, 177, 211, 214, 606, 619, 621, 726, 739, 743, 749, 751, 758, 760, 767, 770, 781, 783, 794, 796, 797, 799, 806, 808, 809, 811, 812, 814], "with_default_key_color": [74, 75], "with_entries_as_list": [74, 75], "with_ivy_backend": [74, 75], "with_key_length_limit": [74, 75, 137], "with_print_ind": [74, 75, 137], "with_print_limit": [74, 75, 137], "with_print_line_spac": [74, 75], "static_arang": [79, 80], "static_asarrai": [79, 80], "static_empty_lik": [79, 80], "static_ey": [79, 80], "n_row": [79, 80, 177, 191, 192], "n_col": [79, 80, 177, 191, 192], "static_from_dlpack": [79, 80], "static_full_lik": [79, 80], "static_linspac": [79, 80], "num": [79, 80, 134, 177, 205, 206, 208, 209], "endpoint": [79, 80, 177, 205, 206], "static_logspac": [79, 80], "static_meshgrid": [79, 80], "static_native_arrai": [79, 80], "static_on": [79, 80], "static_ones_lik": [79, 80], "static_tril": [79, 80], "static_triu": [79, 80], "static_zero": [79, 80], "static_zeros_lik": [79, 80], "int32": [81, 82, 87, 88, 123, 129, 177, 242, 246, 247, 265, 268, 274, 277, 297, 300, 606, 678, 682, 831, 845, 848], "int64": [81, 82, 123, 129, 247, 265, 268, 315, 363, 419, 422], "static_astyp": [81, 82], "static_broadcast_arrai": [81, 82], "static_broadcast_to": [81, 82], "static_can_cast": [81, 82], "from_": [81, 82, 247, 265, 268], "static_finfo": [81, 82], "static_iinfo": [81, 82], "static_is_float_dtyp": [81, 82], "dtype_in": [81, 82, 247, 248, 249, 278, 291, 292, 295, 297, 300, 315], "static_is_int_dtyp": [81, 82], "static_result_typ": [81, 82], "02": [85, 86, 688, 689, 692], "21": [85, 86, 363, 423, 426, 606, 624, 743, 755, 757, 781, 783, 815, 826, 829], "61": [85, 86, 97, 98, 363, 583, 586, 726, 733, 736, 815, 816, 819], "96": [85, 86, 363, 431, 434, 592, 596, 688, 689, 692, 743, 781, 783], "757": [85, 86, 363, 569, 572], "959": [85, 86, 363, 569, 572], "279": [85, 86, 363, 569, 572], "76": [85, 86, 363, 436, 439, 688, 689, 692, 743, 800, 802], "37": [85, 86, 103, 104, 363, 386, 389, 592, 596], "835": [85, 86], "34": [85, 86, 363, 423, 426, 579, 582], "98": [85, 86, 363, 423, 426, 743, 781, 783], "347": [85, 86], "721": [85, 86], "static_ab": [85, 86], "static_add": [85, 86, 120, 121, 128], "static_asinh": [85, 86], "97": [85, 86, 363, 386, 389], "75": [85, 86, 363, 386, 389, 743, 764, 766, 781, 783], "static_co": [85, 86], "static_divid": [85, 86, 128], "static_multipli": [85, 86, 128], "static_sign": [85, 86], "static_sin": [85, 86], "static_sinh": [85, 86], "static_subtract": [85, 86, 128], "static_tan": [85, 86, 121, 128], "143": [85, 86, 121, 363, 592, 596], "38": [85, 86, 121, 363, 592, 596], "static_tanh": [85, 86], "995": [85, 86, 363, 597, 601], "9999": [85, 86], "static_all_equ": [87, 88], "clip_vector_norm": [87, 88, 606], "max_norm": [87, 88, 606, 618, 619, 621], "static_gather_nd": [87, 88], "static_to_numpi": [87, 88], "adam_upd": [89, 90, 138, 688], "lr": [89, 90, 137, 138, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "mw_tm1": [89, 90, 688, 694, 696, 708, 710], "vw_tm1": [89, 90, 688, 694, 696, 708, 710], "gradient_descent_upd": [89, 90, 688, 891, 892, 893, 894, 1012], "lamb_upd": [89, 90, 688], "max_trust_ratio": [89, 90, 688, 708, 710], "decay_lambda": [89, 90, 688, 708, 710, 712, 714], "lars_upd": [89, 90, 688], "optimizer_upd": [89, 90, 688], "effective_grad": [89, 90, 688, 716, 718], "static_adam_step": [89, 90], "87": [89, 90, 103, 104, 688, 689, 692], "976": [89, 90, 363, 597, 601, 688, 689, 692], "static_adam_upd": [89, 90], "static_gradient_descent_upd": [89, 90], "static_is_vari": [89, 90], "static_lamb_upd": [89, 90], "static_lars_upd": [89, 90], "static_optimizer_upd": [89, 90], "inp": [93, 94, 726, 733, 736], "static_depthwise_conv2d": [93, 94], "73": [95, 96, 123, 363, 579, 582, 743, 744, 747], "577": [95, 96, 743, 744, 747], "41": [95, 96, 136, 363, 423, 426, 579, 582, 743, 744, 747], "707": [95, 96, 743, 744, 747], "static_choleski": [95, 96], "static_rol": [95, 96, 99, 100, 121, 128], "511": [97, 98, 815, 816, 819], "5108256": [97, 98], "609438": [97, 98], "static_binary_cross_entropi": [97, 98], "static_cross_entropi": [97, 98], "20397282": [97, 98], "83258148": [97, 98], "60943794": [97, 98], "static_sparse_cross_entropi": [97, 98], "static_clip": [99, 100], "658": [101, 102], "04": [101, 102, 726, 742], "759": [101, 102], "42": [101, 102, 103, 104, 139, 162, 168, 171, 688, 689, 692, 743, 781, 783], "403": [101, 102], "62": [101, 102, 103, 104, 363, 574, 577], "static_layer_norm": [101, 102], "random_uniform": [103, 104, 123, 130, 138, 1012], "static_randint": [103, 104], "drawn": [103, 104, 123], "highest": [103, 104], "nativeshap": [103, 104, 177, 185, 199, 221, 222, 239, 241, 606, 663, 669, 675, 677, 726, 728, 730, 732, 831, 861, 864], "half": [103, 104, 177, 178, 179], "20": [103, 104, 136, 363, 423, 426, 453, 456, 560, 563, 579, 582, 743, 755, 757, 781, 783, 800, 802], "40": [103, 104, 363, 436, 439, 579, 582, 743, 781, 783], "52": [103, 104, 688, 689, 692, 743, 781, 783], "95": [103, 104, 363, 564, 567, 688, 689, 692], "13": [103, 104, 121, 123, 128, 363, 403, 406, 423, 426, 436, 439, 579, 582, 606, 624, 688, 689, 692, 726, 742, 743, 755, 757, 781, 783], "static_random_uniform": [103, 104], "static_unique_al": [107, 108], "static_unique_count": [107, 108], "classivi": [107, 108, 831, 870], "static_unique_invers": [107, 108], "static_unique_valu": [107, 108], "static_argsort": [109, 110], "static_sort": [109, 110], "static_al": [113, 114], "static_ani": [113, 114], "add_ivy_container_instance_method": 115, "containerexampl": [115, 116], "who": [117, 133, 151], "mainli": [117, 135, 137], "under": [117, 120, 121, 122, 123, 124, 128, 133, 134, 137, 139], "hood": [117, 121, 123, 124, 128, 133, 134, 137, 139], "weed": [117, 133], "behind": [117, 123, 133, 135, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "tour": 117, "primari": [117, 123, 125, 131, 151], "composit": [117, 123, 125, 127, 128, 131, 134, 138, 139, 151], "nestabl": [117, 120, 121, 123, 131, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 427, 430, 461, 464, 533, 544, 547, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 755, 757, 831, 865, 868], "dynam": [117, 129, 130, 131, 134, 174, 175], "runtim": [117, 123, 316], "j": [117, 606, 614, 615, 743, 803, 805], "borrow": 117, "taken": [118, 132, 139, 743, 755, 757], "compil": [118, 128, 133, 135, 151, 1012], "meta": [118, 127, 892, 893, 894], "overlap": 118, "sever": [118, 151, 743, 764, 766], "judgement": 118, "locat": [118, 123, 125, 130], "some_namespac": 118, "some_backend": 118, "another_backend": 118, "break": [118, 119, 132, 136, 151, 1012], "anyth": [118, 123, 1012], "refactor": 118, "ongo": 118, "subfold": [118, 123], "via": [118, 128, 129, 130, 131, 134, 136, 137, 150], "file_nam": [118, 123], "my_func": [118, 121], "my": 118, "cooler": 118, "current_backend": [118, 124], "produc": [118, 123, 316, 323, 324, 726, 742], "something_cool": 118, "category_nam": [119, 120, 124, 129, 130], "backend_nam": [119, 120, 124, 125, 126, 129, 130], "adress": 119, "conveni": [119, 129, 130, 135, 137, 138], "revisit": [119, 139], "dedic": [119, 136, 138, 688, 724], "four": [119, 121, 124, 129, 137], "to_native_arrays_and_back": [119, 126, 152], "handle_out_argu": [119, 126, 129, 130, 131, 152], "tf": [119, 127, 129, 130, 131, 134, 139, 151, 1012], "outputs_to_ivy_arrai": [119, 127, 129, 130, 152], "infer_dtyp": [119, 129, 130, 152], "infer_devic": [119, 129, 130, 152], "jnp": [119, 129, 130, 131, 139, 1012], "jaxarrai": [119, 129, 130, 131], "wherea": [119, 121, 123, 124, 127, 129, 130, 139], "__sub__": [119, 121, 127, 128, 136], "__mul__": [119, 121, 127, 128, 136], "__div__": 119, "permit": [119, 123, 127], "dicat": 119, "addition": [119, 128, 131], "omit": [119, 131], "wrapper": [119, 126, 127, 128, 129, 131, 136], "contrast": [119, 120], "futher": 119, "absenc": [119, 128], "pep": 119, "484": 119, "annot": [119, 132], "dictat": [119, 121, 127, 131], "brittl": 119, "intend": 119, "subset": [119, 120, 123, 134], "freeli": 119, "extend": [119, 120, 125], "consum": [119, 123, 128, 316], "inde": [119, 151], "flexibl": 119, "technic": [119, 128, 131, 151], "original_typ": 119, "cumbersom": 119, "readabl": [119, 127, 128, 136, 137], "account": 120, "instanti": 120, "firstli": [120, 121, 124, 127, 129, 131, 137], "templat": [120, 123, 1012], "spec": [120, 121], "api_specif": [120, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 743, 755, 757, 831, 845, 848, 865, 868], "array_api": 120, "preview": 120, "render": 120, "incorrectli": [120, 132], "onlin": [120, 1012], "approxim": [120, 162, 163, 363, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 453, 456, 457, 460, 497, 500, 501, 504, 505, 508, 509, 512, 552, 555, 569, 572, 574, 577, 592, 596, 597, 601, 743, 775, 777, 784, 786], "domain": [120, 363, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 453, 456, 457, 460, 497, 500, 501, 504, 509, 512, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601], "infin": [120, 176, 247, 250, 253, 363, 364, 367, 373, 376, 377, 380, 386, 389, 391, 394, 395, 398, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 465, 468, 477, 480, 481, 484, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605, 743, 809, 811], "codomain": [120, 363, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 395, 398, 431, 434, 436, 439, 453, 456, 457, 460, 497, 500, 501, 504, 509, 512, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601], "x_i": [120, 363, 364, 367, 369, 372, 373, 376, 382, 385, 386, 389, 391, 394, 407, 410, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 477, 480, 481, 484, 485, 488, 497, 500, 501, 504, 509, 512, 521, 524, 540, 543, 560, 563, 564, 567, 569, 572, 574, 577, 579, 582, 583, 586, 592, 596, 597, 601, 602, 605], "assum": [120, 123, 125, 129, 136, 137, 151, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 431, 434, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "operand": [120, 363, 369, 372, 373, 376, 377, 380, 382, 385, 386, 389, 391, 394, 395, 398, 423, 426, 427, 430, 431, 434, 436, 439, 453, 456, 457, 460, 461, 464, 497, 500, 501, 504, 509, 512, 513, 516, 535, 538, 552, 555, 556, 559, 560, 563, 569, 572, 574, 577, 579, 582, 592, 596, 597, 601, 602, 605], "ref": [120, 363, 419, 422, 489, 492, 535, 538, 544, 547, 556, 559, 587, 591, 831, 875, 878], "But": [120, 128, 139], "needless": 120, "info": [120, 1012], "renam": 120, "conform": [120, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 457, 460, 461, 464, 493, 496, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 743, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "org": [120, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 688, 689, 692, 694, 696, 743, 755, 757, 831, 845, 848, 865, 868], "elementwise_funct": [120, 363, 364, 367, 382, 385, 386, 389, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 569, 572, 579, 582, 583, 586, 743, 755, 757, 831, 865, 868], "descript": [120, 123, 128, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 809, 811, 831, 845, 848, 849, 852, 865, 868], "simplic": [120, 138, 150, 177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 208, 209, 211, 214, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246, 247, 265, 268, 297, 300, 363, 364, 367, 377, 380, 382, 385, 386, 389, 403, 406, 423, 426, 427, 430, 436, 439, 461, 464, 533, 544, 547, 560, 563, 564, 567, 569, 572, 579, 582, 583, 586, 592, 596, 597, 601, 606, 634, 726, 729, 733, 736, 742, 743, 744, 747, 752, 754, 755, 757, 831, 845, 848, 849, 852, 865, 868], "judgment": 120, "beyond": [120, 831, 865, 868], "text": 120, "func_nam": [120, 121, 124], "pure": [120, 136, 139, 151], "themselv": [120, 124, 128, 129, 130, 138], "operator_nam": 120, "succinct": 120, "contstructor": 120, "linear": [120, 134, 137, 138, 139, 162, 163, 164, 165, 606, 633, 726, 738, 791, 793, 1012], "though": [120, 124, 129, 137, 151], "forward": [120, 123, 139, 150, 151], "_forward": [120, 134, 137, 138, 1012], "former": 120, "explicitli": [120, 124, 125, 127, 128, 131, 134, 151, 743, 758, 760], "latter": [120, 125], "implicit": [120, 123, 128, 134], "docst": 120, "eight": 121, "static_": 121, "op_nam": 121, "__r": 121, "__truediv__": [121, 127, 128], "recap": [121, 128, 138], "independ": [121, 122, 126, 128, 134, 139, 743, 749, 751, 791, 793], "combinatorili": 121, "variat": [121, 123], "grid": [121, 123, 150, 177, 211, 214], "vari": [121, 123, 128, 136], "simplest": [121, 123], "unus": [121, 131, 132, 174, 175], "excess": [121, 125, 136], "okai": [121, 134], "showcas": [121, 150], "demonstr": [121, 136], "replic": [121, 129], "meant": 121, "imaginari": 121, "some_flag": 121, "another_flag": 121, "jointli": 121, "three": [121, 123, 128, 133, 177, 211, 214, 1012], "x0": [121, 606, 614], "procedur": 121, "sens": [121, 128, 136], "5574077": 121, "1850398": 121, "5463025": 121, "8422884": 121, "91601413": 121, "9647598": 121, "3738229": 121, "1597457": 121, "0963247": 121, "9955841": 121, "3278579": 121, "multi": [121, 128, 133, 151, 726, 741, 743, 749, 751, 1012, 1018], "seper": [121, 606, 633], "pars": [121, 151], "satisfi": [121, 743, 812, 814], "far": [121, 130, 135, 136], "asid": [121, 150], "irrelev": [121, 129], "increasingli": 121, "complex": [121, 137, 138, 139, 151, 743, 758, 760, 794, 796], "14254655": 121, "1578213": 121, "380515": 121, "17": [121, 128, 162, 164, 743, 755, 757], "trivial": 121, "exlud": 121, "unit": [122, 123, 151, 162, 163, 164, 165, 316], "thoroughli": 122, "ci": [122, 123, 151], "failur": 122, "On": [123, 132, 135, 139], "fixtur": 123, "300": [123, 363, 560, 563], "hit": [123, 134], "action": 123, "eleg": 123, "intellig": 123, "sampl": [123, 726, 738], "rang": [123, 137, 138, 139, 177, 178, 179, 205, 206, 208, 209, 1012], "cach": [123, 124, 316, 331, 606, 617], "unexplor": 123, "known": 123, "repeatedli": [123, 128], "upload": 123, "artifact": 123, "parametr": 123, "statement": [123, 132, 151], "plai": [123, 139], "varieti": [123, 129, 130], "wide": 123, "valid_int_dtyp": 123, "int8": [123, 129, 247, 297, 300, 315], "int16": [123, 129, 247, 265, 268, 297, 300], "uint8": [123, 129, 247, 265, 268, 315], "uint16": [123, 129, 247, 285], "uint32": [123, 129, 247, 285], "uint64": [123, 129, 247, 285], "custom_strategi": 123, "st": 123, "sampled_from": 123, "min_siz": 123, "max_siz": 123, "wherein": 123, "referenc": 123, "print_hypothesis_exampl": 123, "searchstrategi": 123, "randomis": 123, "simplist": 123, "intricaci": 123, "briefli": [123, 124, 137], "bound": [123, 134], "mechan": [123, 149, 151, 1012], "power": [123, 136, 137, 138, 363, 419, 422, 453, 456, 552, 555, 606, 641, 664, 672, 743, 774], "math": [123, 131, 139, 1012], "inclus": [123, 131, 177, 178, 179], "width": 123, "losslessli": 123, "mostli": 123, "one_of": 123, "datum": 123, "pipe": 123, "overload": 123, "shorthand": 123, "draw": 123, "input_dtyp": 123, "reject": 123, "flatmap": 123, "suppos": 123, "dataobject": 123, "test_argsort": 123, "decor": [123, 124, 126, 128, 129, 130, 131], "initialis": [123, 316], "snippet": 123, "dtype_and_x": 123, "dtype_and_valu": 123, "valid_float_dtyp": 123, "list_of_length": 123, "num_positional_arg": 123, "instance_method": 123, "alpha": [123, 162, 164], "test_leaky_relu": 123, "float16": [123, 129, 247, 285, 315], "leaky_relu": [123, 162, 1012], "exhaust": 123, "num_posit": 123, "indirectli": 123, "advis": 123, "seri": 123, "9433925": 123, "401298464324817e": 123, "574352379": 123, "99999": 123, "2250738585072014e": 123, "308": 123, "103515625e": 123, "unpack": [123, 132, 606, 686], "seamlessli": 123, "edg": [123, 134, 139, 831, 832, 835, 841, 844, 887, 890, 1012], "encount": 123, "criterion": 123, "straight": [123, 136, 1012], "array_valu": 123, "valid_ax": 123, "hand": [123, 124, 132, 151], "craft": 123, "polici": [123, 150], "hoc": 123, "overview": [123, 133, 150], "array_dtyp": 123, "array_bool": 123, "na": 123, "test_concat": 123, "test_devic": 123, "array_shap": 123, "test_manipul": 123, "common_shap": 123, "test_lay": 123, "size_bound": 123, "precis": [123, 247, 279, 282, 363, 535, 538, 579, 582], "283405296074752": 123, "564049465049088": 123, "0417876997507982e": 123, "min_valu": 123, "max_valu": 123, "allow_inf": 123, "min_num_dim": 123, "wherev": 123, "reshape_shap": 123, "stand": 123, "alon": [123, 316, 352, 362], "fashion": 123, "some_sequ": 123, "06": [123, 688, 689, 692], "allow_subnorm": 123, "exclude_min": 123, "960464477539063e": 123, "08": [123, 363, 386, 389, 726, 742], "coverag": 123, "allow_nan": 123, "Such": 123, "kind": [123, 151, 247, 279, 282, 286, 289, 363, 552, 555], "get_shap": 123, "allow_non": 123, "max_num_dim": 123, "min_dim_s": 123, "none_or_list_of_float": 123, "200": 123, "199": [123, 363, 386, 389], "99999999999997": 123, "000000000000002": 123, "125": 123, "43759670925832": 123, "get_mean_std": 123, "probabilist": 123, "811428143185347e": 123, "89": [123, 363, 423, 426, 743, 800, 802], "none_or_list_float": 123, "get_bound": 123, "arrays_valu": 123, "put": [123, 151], "36418": 123, "213": 123, "21716926": 123, "get_prob": 123, "unnorm": 123, "099609375": 123, "get_axi": 123, "number_positional_argu": 123, "mind": [123, 127, 128], "bodi": 123, "possibli": [123, 151, 606, 676], "test_valu": 123, "enough": [123, 136, 137, 138], "autom": [123, 1012], "report": 123, "test_demo": 123, "falsifi": 123, "failing_test": 123, "traceback": 123, "123": [123, 606, 631], "assertionerror": [123, 688, 725], "shrink": 123, "prescrib": 123, "behavior": [123, 128, 134, 151, 363, 552, 555, 556, 559], "identifi": 123, "closest": [123, 247, 270, 363, 427, 430, 461, 464, 465, 468, 560, 563, 602, 605], "checkout": 123, "scratch": 123, "databas": 123, "therebi": 123, "debug": [123, 128, 137], "event": [123, 1012], "test_gelu": 123, "test_fil": 123, "brief": 123, "phase": [123, 151], "reus": 123, "notabl": 123, "displai": [123, 128, 137], "verbos": [123, 134, 1012, 1057], "newer": 123, "max_exampl": 123, "impact": [123, 138], "deadlin": 123, "weird": 123, "verifi": [123, 129, 130, 136, 1012, 1018], "truth": [123, 363, 445, 448, 469, 472, 473, 476, 489, 492, 493, 496, 544, 547], "opt": [123, 125, 131, 136], "defer": [123, 124, 127, 128, 129, 130, 131], "suffic": [123, 126], "catch": [123, 606, 627], "systemat": 123, "safeguard": 123, "inabl": 123, "fact": [123, 137], "num_gpu": [123, 130, 316], "categor": [124, 130], "mutual": [124, 128], "constitut": [124, 134], "venn": 124, "diagram": 124, "light": [124, 151], "log_pr": [124, 128, 131], "array_arg": 124, "typic": 124, "whatsoev": [124, 128], "commonli": 124, "outsid": [124, 130, 132, 134, 136, 139, 831, 832, 835, 875, 878], "cache_fn": [124, 606], "stable_divid": [124, 606], "deal": [124, 151], "concurr": [124, 128], "modif": 124, "handle_nest": [124, 128, 152], "group": [124, 128], "set_default_dtyp": [124, 129, 247], "default_dtyp": [124, 129, 247], "get_all_arrays_on_dev": 124, "get_backend": [124, 125], "nested_map": 124, "index_nest": 124, "implicit_backend": 125, "unless": [125, 130, 131, 151, 363, 535, 538, 606, 659], "__dict__": [125, 134, 136], "ivy_original_dict": [125, 134], "unmodifi": [125, 129], "unset_backend": 125, "fallback": 125, "freedom": 125, "recommend": [125, 363, 521, 524, 525, 528, 556, 559], "achiev": [126, 132, 137, 139], "topic": [126, 136], "_data": [127, 136], "organiz": [127, 128], "inherit": [127, 128, 136], "bear": [127, 128, 129], "necessarili": [127, 128], "although": [127, 128], "underpin": [127, 128, 134], "programmat": [127, 128], "backup": [127, 128], "accident": [127, 128], "absent": [127, 128], "perk": [127, 128], "auto": [127, 128, 137], "throw": [127, 136], "imposs": 127, "inputs_to_native_arrai": [127, 152], "coupl": [127, 128, 136, 138], "anywai": 127, "secondli": [127, 129], "easier": 127, "five": [128, 137], "decis": [128, 134, 136], "arbitrarili": [128, 137], "__repr__": 128, "control": [128, 129, 131, 136, 137, 150], "__getattr__": 128, "underli": [128, 363, 403, 406, 415, 418, 423, 426, 529, 532], "__setattr__": 128, "__contains__": 128, "__getstate__": 128, "__setstate__": 128, "unpickl": 128, "expand": [128, 606, 633, 831, 845, 848], "counterpart": 128, "irrespect": [128, 131, 136, 247, 250, 253], "presenc": [128, 131], "implicitli": 128, "intuit": [128, 137, 138], "chronolog": 128, "had": [128, 131], "sequenti": [128, 138], "flow": [128, 150], "implic": 128, "slightli": [128, 134, 138], "eager": [128, 151], "children": 128, "shallowest": 128, "deepest": 128, "22": [128, 363, 423, 426, 743, 755, 757, 781, 783], "execute_with_gradi": [128, 137, 138, 139, 151, 688, 1012], "multi_head_attent": [128, 131, 726], "retain_grad": [128, 688, 698], "dy": [128, 688, 698], "dx": [128, 688, 698], "autograd": [128, 151], "grad": [128, 137, 138, 139, 1012], "redund": 128, "num_head": [128, 726, 741], "mask": [128, 726, 741, 742], "to_q_fn": [128, 726, 741], "to_kv_fn": [128, 726, 741], "to_out_fn": [128, 131, 726, 741], "to_q_v": [128, 726, 741], "to_kv_v": [128, 726, 741], "to_out_v": [128, 726, 741], "measur": [128, 726, 741], "dot": [128, 726, 741, 742, 743, 800, 802, 806, 808], "bfloat16": 129, "all_dtyp": 129, "all_numeric_dtyp": 129, "all_int_dtyp": 129, "all_float_dtyp": 129, "fall": [129, 133, 1012], "thirdli": 129, "native_float32": [129, 247, 315], "importantli": [129, 136, 139, 150], "arguabl": [129, 130], "compound": 129, "overflow": [129, 363, 377, 380], "arr": [129, 130], "default_int_dtyp": [129, 247], "default_float_dtyp": [129, 247], "settabl": [129, 130], "set_default_int_dtyp": [129, 247], "set_default_float_dtyp": [129, 247], "arang": [129, 177, 205, 206, 208, 209, 1012], "mx": [129, 130, 131, 1012], "nd": [129, 130, 131, 134, 139, 1012], "deleg": 129, "shape_to_tupl": 129, "unsupported_dtyp": 129, "invalid_dtyp": [129, 247], "idx": [130, 136, 606, 612], "tpu": [130, 316, 335, 360], "get_all_ivy_arrays_on_dev": [130, 316], "aliv": [130, 316, 347, 351, 353, 606, 640, 658, 660], "total_mem_on_dev": [130, 316], "memori": [130, 131, 149, 151, 316, 331, 352, 357, 359, 362, 726, 740, 1012], "dev_util": [130, 316], "num_cpu_cor": [130, 316], "default_devic": [130, 134, 316, 351, 354, 361], "dual": 130, "thrown": [130, 151, 606, 650], "rare": [130, 151], "set_default_devic": [130, 316, 361], "program": 131, "strictli": 131, "ration": 131, "speak": 131, "subtli": 131, "ensure_in_backend": [131, 606, 650], "x_nativ": 131, "val_n": 131, "is_ivy_arrai": [131, 136, 606], "assign": [131, 132, 136], "elif": 131, "unspecifi": [131, 363, 552, 555, 556, 559, 743, 758, 760, 831, 875, 878], "predominantli": [131, 150], "altern": [131, 137], "_wrap_fn": 131, "maxim": [131, 134], "inner": [131, 136, 743, 758, 760, 767, 770, 891, 892, 893, 894], "third": [131, 151, 743, 794, 796], "leverag": 131, "equival": [131, 137, 139, 177, 178, 179, 363, 419, 422, 521, 524, 525, 528, 556, 559, 743, 775, 777, 784, 786, 791, 793, 809, 811], "input_arrai": 131, "clean": [132, 134, 135, 137], "flake8": 132, "undefin": 132, "yield": 132, "handler": [132, 133, 135, 139, 1012], "liter": [132, 743, 809, 811], "carri": 132, "star": 132, "byte": 132, "notimpl": 132, "notimplementederror": 132, "unsuccess": 132, "exce": [132, 363, 534], "indices_wher": [132, 606, 1012], "black": 132, "disobei": 132, "successfulli": 132, "comparison": 132, "sound": 133, "higher": [133, 134, 139, 151, 688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "fledg": [134, 135], "syntact": [134, 139], "clip_by_valu": [134, 139], "clamp": [134, 139], "fit": [134, 831, 857, 860], "logspac": [134, 177], "construct": [134, 135, 138, 139, 831, 883, 886], "power_seq": 134, "linspac": [134, 177, 178, 179, 1012], "resid": [134, 138], "ml_framework": [134, 139, 177, 178, 179], "current_framework": [134, 139], "furthermor": 134, "concaten": [134, 137, 316, 342, 606, 633, 831, 837, 840, 1012], "framework_handl": 134, "face": 134, "cprint": [134, 1056], "framework_stack": 134, "_determine_framework_from_arg": 134, "valueerror": [134, 831, 871, 874], "get_framework": 134, "neither": [134, 363, 377, 380, 535, 538, 688, 725], "illustr": [134, 150], "un": [134, 247, 291], "lstm_updat": [134, 726], "nn": [134, 139, 177, 211, 214, 1012], "init_h": [134, 726, 740], "init_c": [134, 726, 740], "kernel": [134, 151, 726, 740], "recurrent_kernel": [134, 726, 740], "bia": [134, 138, 726, 739, 740], "recurrent_bia": [134, 726, 740], "x_shape": 134, "batch_shap": [134, 136, 139, 606, 659, 726, 740, 741, 742, 743, 812, 814], "timestep": [134, 726, 740], "input_channel": [134, 138], "x_flat": 134, "wi": 134, "wi_x": 134, "wii_x": 134, "wif_x": 134, "wig_x": 134, "wio_x": 134, "recurr": [134, 726, 740], "wh": 134, "lstm": [134, 726, 740], "ht": 134, "ct": 134, "hts_list": 134, "unrol": [134, 137, 726, 740], "wii_xt": 134, "wif_xt": 134, "wig_xt": 134, "wio_xt": 134, "zip": 134, "htm1": 134, "ctm1": 134, "wh_htm1": 134, "whi_htm1": 134, "whf_htm1": 134, "whg_htm1": 134, "who_htm1": 134, "sigmoid": [134, 137, 138, 162, 1012], "ft": 134, "gt": 134, "ot": 134, "offici": 134, "reliabl": 134, "sacrific": 134, "hear": 134, "virtu": 134, "pure_ivi": 134, "reduce_mean": [134, 137, 138, 139, 1012], "reduce_sum": [134, 1012], "reduce_var": 134, "compile_graph": [134, 139], "pure_torch": 134, "cat": [134, 139], "backbon": [134, 137], "_layer": 134, "super": [134, 137, 138, 139], "random_unifrom": 134, "unclean": 134, "wx": 134, "temp": 134, "torchscript": 134, "fn": [134, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 247, 284, 285, 316, 323, 324, 606, 612, 684], "example_input": [134, 174, 175], "static_argnum": [134, 174, 175], "static_argnam": [134, 174, 175], "jit": [134, 151], "frontend": 135, "primit": [135, 151], "hierarch": [135, 137, 138], "arraywithlinalg": 136, "arraywithlog": 136, "arraywithmath": 136, "arraywithmeta": 136, "arraywithreduct": 136, "is_native_arrai": [136, 606], "_shape": 136, "_size": 136, "functool": 136, "mul": 136, "len": [136, 139, 177, 211, 214], "_dtype": 136, "_devic": 136, "_dev_str": 136, "as_ivy_dev": [136, 316], "_pre_repr": 136, "_post_repr": 136, "answer": [136, 151], "consol": 136, "typeerror": 136, "immut": 136, "behav": 136, "claim": 136, "truli": 136, "_native_wrapp": 136, "attributeerror": 136, "scatter_nd": [136, 606, 1012], "genuin": 136, "some_method": 136, "similarli": [136, 177, 211, 214], "rewritten": 136, "__pow__": 136, "strang": 136, "enforc": 136, "notic": 136, "appear": [136, 831, 845, 848], "_wrap_method": 136, "func_wrapp": [136, 152, 153, 154, 155, 156, 157, 158, 159, 160], "__name__": 136, "non_wrapped_method": 136, "_method_wrap": 136, "native_arg": 136, "native_kwarg": 136, "inner_fn": 136, "whist": 136, "unwrap": 136, "transit": 136, "needlessli": 136, "randn": 136, "_unwrap_method": 136, "method_wrap": 136, "compartment": 136, "public": [136, 606, 622], "newshap": 136, "new_shap": 136, "tidi": 136, "shorter": 136, "crystal": 136, "ton": 137, "ado": [137, 138], "incredibli": [137, 151], "hash": 137, "soup": 137, "walk": [137, 138], "dct": 137, "cnt": 137, "combo": [137, 1012, 1018], "hold": [137, 606, 662, 663], "1000": [137, 363, 579, 582], "uda": 137, "3333": 137, "6667": 137, "178": 137, "new_weight": 137, "0600": 137, "3100": 137, "2400": 137, "6900": 137, "delimit": 137, "autocomplet": 137, "midwai": 137, "agent": 137, "total_spe": 137, "total_height": 137, "total_width": 137, "ag": 137, "tot": 137, "total_": 137, "total_h": 137, "dir": 137, "dropout": [137, 726], "cnt0": 137, "cnt1": 137, "diff_0": 137, "diff_1": 137, "config0": 137, "config1": 137, "Not": [137, 138, 151, 176], "helper": 137, "decod": 137, "l0": 137, "l1": [137, 743, 809, 811], "depth": [137, 138, 139, 150, 316, 337, 341, 345, 606, 644, 659], "clearer": 137, "truncat": 137, "decoder__l0": 137, "decoder__l1": 137, "encoder__l0": 137, "encoder__l1": 137, "height": 137, "l0__b": 137, "l0__w": 137, "l1__b": 137, "l1__w": 137, "printabl": 137, "obviou": 137, "foresight": 137, "untidili": 137, "update_ag": 137, "normalize_img": 137, "img": 137, "img_max": 137, "reduce_max": [137, 1012], "img_min": 137, "reduce_min": [137, 1012], "img_rang": 137, "agent_posit": 137, "agent_veloc": 137, "agent_cam_front_rgb": 137, "agent_cam_front_depth": 137, "agent_cam_rear_rgb": 137, "agent_cam_rear_depth": 137, "agent_cam_lidar": 137, "cleaner": 137, "camera": 137, "front_rgb": 137, "front_depth": 137, "rear_rgb": 137, "rear_depth": 137, "lidar": 137, "rgb": 137, "rear": 137, "veloc": 137, "cam": 137, "cam_max": 137, "cam_min": 137, "cam_rang": 137, "Of": 137, "ideal": 137, "perman": 137, "afterward": 137, "thread": 137, "incorpor": 137, "pretti": 137, "straightforward": 137, "dataload": [137, 149, 1012], "_cnt": 137, "img_": 137, "_dataset_s": 137, "_batch_siz": 137, "_count": [137, 138], "__next__": 137, "filenam": 137, "img_fnam": 137, "fname": 137, "loaded_img": 137, "cv2": 137, "imread": 137, "loader": [137, 151], "batch_slic": 137, "mymodel": [137, 1012], "linear0": [137, 138, 1012], "linear1": [137, 138, 1012], "x_in": [137, 138, 139, 1012], "loss_fn": [137, 138, 139, 1012], "0145": 137, "grad_fn": 137, "addbackward0": 137, "_create_vari": 138, "output_channel": 138, "with_bia": 138, "_input_channel": 138, "_output_channel": 138, "_w_shape": 138, "_b_shape": 138, "_with_bia": 138, "8979": 138, "3198": 138, "0196": 138, "3126": 138, "3717": 138, "9687": 138, "6958": 138, "5122": 138, "3902": 138, "8800": 138, "5613": 138, "1982": 138, "nightmar": 138, "overcom": 138, "fc": 138, "9563": 138, "v0": 138, "v1": 138, "6440": 138, "key0": 138, "1823": 138, "8075": 138, "linear3": 138, "v2": 138, "2346": 138, "counter": 138, "hidden": [138, 726, 740], "fed": [138, 316, 357], "1300": 138, "decoupl": 138, "scheme": 138, "weight_initi": 138, "glorotuniform": 138, "bias_initi": 138, "_w_init": 138, "_b_init": 138, "create_vari": 138, "var_shap": 138, "fan_out": 138, "fan_in": 138, "fan_mod": 138, "fan_sum": 138, "slight": 138, "misnom": 138, "saw": 138, "vanilla": [138, 891, 893], "descent": [138, 688, 699, 701], "lar": [138, 688, 708, 710, 712, 714], "lamb": [138, 688, 708, 710], "compile_on_next_step": 138, "_beta1": 138, "_beta2": 138, "_epsilon": 138, "_mw": 138, "_vw": 138, "_first_pass": 138, "_should_compil": 138, "_step": 138, "new_v": 138, "_lr": 138, "isinst": [138, 139, 606, 676], "_inplac": 138, "_stop_gradi": 138, "set_stat": 138, "pre": [139, 151, 316], "captur": 139, "one_hot": [139, 606, 1012], "sparse_funct": 139, "num_class": 139, "ey": [139, 177, 726, 729, 733, 736], "cumprod": [139, 606], "num_dim": 139, "new_axi": 139, "_linear": 139, "to_backend": 139, "jax_graph": 139, "to_ivy_modul": 139, "thinli": 139, "whilst": 139, "to_haiku_modul": 139, "hk": 139, "loss_fn_t": 139, "transform": [139, 150, 726, 738, 739], "without_apply_rng": 139, "rng": 139, "prngkei": 139, "init": 139, "update_rul": 139, "tree_multimap": 139, "vision": [149, 1012], "robot": [149, 1012], "focus": 150, "perfect": 150, "3d": 150, "differenti": 150, "demo": [150, 1012], "orient": 150, "pose": 150, "euler": [150, 176], "quaternion": 150, "rotat": 150, "ivy_mech": 150, "target_facing_rotation_matrix": 150, "polar_to_cartesian_coord": 150, "ordin": [150, 743, 791, 793], "warp": 150, "optic": 150, "voxel": 150, "ivy_vis": 150, "coords_to_voxel_grid": 150, "render_pixel_coord": 150, "neural": [150, 726, 1012], "radianc": 150, "nerf": 150, "trajectori": 150, "motion": 150, "plan": [150, 1012], "mobil": 150, "ivy_robot": 150, "sample_spline_path": 150, "rigidmobil": 150, "sample_bodi": 150, "drone": 150, "sample_link": 150, "openai": 150, "swimmer": 150, "cumul": [150, 606, 624, 625], "reward": 150, "supervis": 150, "reinforc": 150, "door": [150, 151], "intersect": 150, "cartpol": 150, "mountain_car": 150, "pendulum": 150, "reacher": 150, "condit": [150, 174, 175], "learnt": 150, "ture": 150, "ntm": 150, "egospher": 150, "spatial": 150, "esm": 150, "ivy_memori": 150, "egocentr": 150, "room": 150, "inspir": 150, "doubt": 151, "grate": 151, "probe": 151, "undergo": 151, "remark": 151, "surpris": 151, "lock": 151, "contunu": 151, "minor": 151, "xla": 151, "buffer": 151, "gold": 151, "dex": 151, "lax": 151, "scan": 151, "tricki": 151, "predictor": 151, "tight": 151, "driver": 151, "schedul": 151, "dispatch": 151, "Will": 151, "ast": 151, "dynamic": 151, "cond": 151, "jacobian": 151, "checkpoint": 151, "autodiff": 151, "shine": 151, "merci": 151, "superset": 151, "cluster": 151, "compet": 151, "paradigm": 151, "parallelis": [151, 316, 323, 324], "spmd": 151, "mixtur": [151, 688, 689, 692], "expert": 151, "sophist": 151, "depart": 151, "routin": 151, "hundr": 151, "thousand": 151, "deepli": 151, "broadli": 151, "heavili": 151, "supplementari": 151, "reusabl": 151, "fanci": 151, "fusion": 151, "lose": 151, "vmap": 151, "pmap": 151, "overhead": 151, "ineffici": 151, "eventu": 151, "supplement": 151, "backdoor": 151, "callback": 151, "record": 151, "metric": 151, "somewhat": 151, "outsourc": 151, "inputs_to_ivy_arrai": 152, "gelu": 162, "gaussian": [162, 163], "leaki": [162, 163, 164], "rectifi": [162, 164, 165], "slope": [162, 164], "39": [162, 164, 363, 386, 389, 453, 456, 688, 689, 692, 743, 781, 783], "85": [162, 164, 363, 423, 426], "48": [162, 164, 363, 579, 582, 688, 689, 692, 743, 781, 783], "88": [162, 164, 363, 423, 426, 743, 781, 783], "269": [162, 166], "731": [162, 166], "214": [162, 166], "978": [162, 166], "422": [162, 167], "155": [162, 167], "0768": [162, 167], "231": [162, 167], "693": [162, 167, 363, 386, 389, 815, 826, 829], "49": [162, 167, 363, 579, 582], "147": [162, 167], "363": [162, 167], "3461": [162, 168, 171], "6491": [162, 168, 171], "535": [162, 168, 171], "55": [162, 173, 726, 732, 743, 781, 783], "501": [162, 173], "faster": [174, 175], "invoc": [174, 175], "718281828459045": 176, "newaxi": 176, "alia": 176, "pi": 176, "141592653589793": 176, "mathemat": [176, 363, 377, 380, 395, 398, 457, 460, 535, 538, 743, 809, 811], "chosen": [177, 178, 179, 363, 395, 398], "distanc": [177, 178, 179], "adjac": [177, 178, 179], "creation_funct": [177, 178, 179, 181, 183, 185, 186, 189, 191, 192, 194, 197, 199, 200, 203, 205, 206, 221, 222, 224, 227, 229, 233, 234, 238, 239, 241, 242, 246], "elsewher": [177, 191, 192], "row": [177, 191, 192, 743, 791, 793, 794, 796], "column": [177, 191, 192, 743, 758, 760, 787, 789, 791, 793, 794, 796], "__dlpack__": [177, 194, 197, 316, 358], "interchang": [177, 194, 197, 831, 879, 882], "coordin": [177, 211, 214, 363, 395, 398], "cartesian": [177, 211, 214], "ij": [177, 211, 214], "ni": [177, 211, 214], "xi": [177, 211, 214], "n1": [177, 211, 214], "n2": [177, 211, 214], "n3": [177, 211, 214], "xv": [177, 211, 214], "yv": [177, 211, 214], "y1": [177, 242, 246], "y2": [177, 242, 246], "x3": [177, 242, 246, 316, 351], "y3": [177, 242, 246], "intdtyp": [177, 242, 246, 247, 273], "defaultdtyp": 247, "defaultfloatdtyp": 247, "float_dtyp": [247, 272, 309], "defaultintdtyp": 247, "as_ivy_dtyp": 247, "as_native_dtyp": 247, "incompat": [247, 260, 263], "data_type_funct": [247, 265, 268], "closest_valid_dtyp": 247, "floatdtyp": [247, 272], "int_dtyp": [247, 273, 310], "dtype_bit": 247, "followng": [247, 279, 282], "occupi": [247, 279, 282, 286, 289, 606, 662, 663], "ep": [247, 279, 282, 743, 775, 777, 784, 786], "smallest_norm": [247, 279, 282], "function_supported_dtyp": 247, "function_unsupported_dtyp": 247, "encapsul": [247, 286, 289], "promote_typ": 247, "type1": [247, 302], "type2": [247, 302], "type_promote_arrai": 247, "ret1": [247, 311], "ret2": [247, 311], "unset_default_dtyp": 247, "unset_default_float_dtyp": 247, "unset_default_int_dtyp": 247, "valid_dtyp": 247, "native_bool": [247, 315], "native_float16": [247, 315], "native_float64": [247, 315], "native_int8": [247, 315], "native_int16": [247, 315], "native_int32": [247, 315], "native_int64": [247, 315], "native_uint8": [247, 315], "native_uint64": [247, 315], "defaultdevic": 316, "__enter__": 316, "_dev": 316, "__exit__": 316, "exc_typ": 316, "exc_val": 316, "exc_tb": 316, "exit": 316, "devcloneditem": [316, 335], "multidevitem": [316, 317, 320], "devclonedit": 316, "multidevit": [316, 318, 321, 323, 324, 327], "devclonednest": 316, "multidevnest": [316, 319, 322], "devdistitem": 316, "devdistit": 316, "devdistnest": 316, "devmanag": 316, "dev_mapp": 316, "da_dim_s": 316, "safety_factor": 316, "min_dev_dim_s": 316, "max_dev_dim_step_ratio": 316, "min_unit_dev_tune_step": 316, "min_sf_tune_step": 316, "starting_split_factor": 316, "max_split_factor_step_s": 316, "tune_dev_alloc": 316, "tune_dev_split": 316, "mapper": [316, 323, 324], "receivess": 316, "ratio": [316, 688, 708, 710], "safe": [316, 323], "oom": 316, "tune": 316, "da_tune_step": 316, "ds_tune_step": 316, "to_clon": 316, "to_distribut": 316, "multidevic": [316, 323], "parallel": [316, 323, 324], "mutlidevic": [316, 323], "repeated_config_check": 316, "tune_step": 316, "devmapp": [316, 324], "ret_fn": [316, 323, 324], "queue_class": [316, 323, 324], "worker_class": [316, 323, 324], "worker": [316, 323, 324], "used_dev": [316, 323], "split_factor": [316, 323], "sf": [316, 323], "devmappermultiproc": 316, "multidev": [316, 325, 326, 345], "profil": 316, "save_dir": [316, 328], "as_native_dev": 316, "clear_mem_on_dev": 316, "deviceic": [316, 334], "dev_clone_arrai": 316, "dev_clone_it": 316, "dev_clone_nest": 316, "dev_dist_arrai": 316, "dev_dist_it": 316, "dev_dist_nest": 316, "dev_unifi": 316, "dev_unify_arrai": 316, "dev_unify_it": 316, "dev_unify_nest": 316, "spread": [316, 345], "139740789224448": [316, 347], "gpu_is_avail": 316, "physic": [316, 349], "num_ivy_arrays_on_dev": 316, "x4": [316, 351], "percent_used_mem_on_dev": 316, "process_specif": [316, 352, 362], "percentag": [316, 352], "ram": [316, 352, 359, 362], "print_all_ivy_arrays_on_dev": 316, "attr_onli": [316, 353], "set_split_factor": 316, "chunk": [316, 355, 356, 357], "split_func_cal": 316, "max_chunk_s": [316, 357], "chunk_siz": [316, 357], "input_ax": [316, 357], "output_ax": [316, 357], "feed": [316, 357], "fist": [316, 357], "stream": [316, 358], "caveat": [316, 358], "portabl": [316, 358, 1012], "gb": [316, 359, 362], "tpu_is_avail": 316, "unset_default_devic": 316, "reset": [316, 361, 606, 685], "used_mem_on_dev": 316, "magnitud": [363, 364, 367, 377, 380, 535, 538, 743, 794, 796, 797, 799], "princip": [363, 369, 372, 382, 385, 391, 394], "x1_i": [363, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591], "x2_i": [363, 377, 380, 395, 398, 403, 406, 411, 414, 415, 418, 419, 422, 423, 426, 440, 443, 445, 448, 465, 468, 469, 472, 473, 476, 489, 492, 493, 496, 513, 516, 517, 520, 525, 528, 529, 532, 535, 538, 544, 547, 552, 555, 556, 559, 587, 591], "finit": [363, 377, 380, 395, 398, 477, 480, 535, 538, 552, 555, 556, 559], "nonzero": [363, 377, 380, 535, 538], "nor": [363, 377, 380, 535, 538, 688, 725], "nearest": [363, 377, 380, 535, 538, 560, 563], "2019": [363, 377, 380, 457, 460, 535, 538], "commut": [363, 377, 380], "57": [363, 382, 385, 386, 389, 423, 426, 436, 439], "524": [363, 382, 385], "644": [363, 382, 385], "201": [363, 382, 385, 560, 563], "305": [363, 382, 385], "412": [363, 382, 385], "44": [363, 386, 389, 560, 563, 579, 582, 583, 586, 743, 781, 783], "809": [363, 386, 389], "569": [363, 386, 389], "733": [363, 386, 389], "68": [363, 386, 389], "quotient": [363, 395, 398], "notat": [363, 395, 398], "denot": [363, 395, 398, 688, 725], "pair": [363, 395, 398, 726, 742, 743, 749, 751], "quadrant": [363, 395, 398], "3\u03c0": [363, 395, 398], "549": [363, 399, 402], "bitwis": [363, 403, 406, 415, 418, 423, 426, 529, 532], "invert": [363, 407, 410], "arithmet": [363, 419, 422], "propag": [363, 419, 422], "thu": [363, 419, 422, 552, 555, 556, 559, 743, 758, 760], "lh": [363, 419, 422], "rh": [363, 419, 422], "xor": [363, 423, 426, 529, 532], "78": [363, 423, 426, 564, 567, 743, 781, 783], "91": [363, 423, 426, 743, 781, 783], "66": [363, 423, 426, 743, 781, 783], "77": [363, 423, 426, 743, 781, 783], "79": [363, 423, 426], "26": [363, 423, 426, 574, 577, 688, 689, 692, 726, 733, 736, 743, 755, 757, 781, 783, 800, 802], "27": [363, 423, 426, 436, 439, 574, 577, 579, 582, 726, 742, 743, 781, 783], "74": [363, 423, 426], "59": [363, 423, 426], "654": [363, 431, 434], "122": [363, 436, 439], "368": [363, 436, 439], "670": [363, 436, 439], "202": [363, 436, 439, 560, 563], "548": [363, 436, 439, 574, 577], "1490": [363, 436, 439], "dividend": [363, 440, 443, 556, 559], "gauss": [363, 449, 452], "exponenti": [363, 449, 452, 453, 456, 513, 516, 552, 555], "logarithm": [363, 453, 456, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 743, 790], "72": [363, 453, 456, 688, 689, 692, 743, 781, 783], "accur": [363, 457, 460], "fdlibm": [363, 457, 460], "compliant": [363, 457, 460, 521, 524, 525, 528], "greatest": [363, 461, 464, 465, 468], "out_i": [363, 477, 480, 481, 484, 485, 488], "threshold": [363, 533, 534], "y_i": [363, 540, 543], "expon": [363, 552, 555, 606, 672], "versu": [363, 552, 555], "odd": [363, 552, 555], "modulu": [363, 556, 559], "primarili": [363, 556, 559], "5654": [363, 560, 563], "034": [363, 560, 563], "433": [363, 560, 563], "343": [363, 560, 563], "30": [363, 560, 563, 743, 781, 783], "81": [363, 560, 563, 583, 586], "527": [363, 560, 563], "301": [363, 560, 563], "124": [363, 564, 567], "46": [363, 564, 567], "932": [363, 569, 572], "746": [363, 569, 572], "443": [363, 569, 572], "657": [363, 569, 572], "253": [363, 574, 577], "indistinguish": [363, 579, 582], "infinit": [363, 579, 582], "83": [363, 579, 582], "32455532": [363, 579, 582], "89897949": [363, 579, 582], "50": [363, 579, 582, 743, 781, 783], "31": [363, 579, 582], "169": [363, 579, 582], "47": [363, 579, 582], "93": [363, 579, 582], "35": [363, 579, 582, 726, 742, 743, 749, 751], "09": [363, 583, 586, 726, 742], "546": [363, 592, 596], "842": [363, 592, 596], "916": [363, 592, 596, 815, 816, 819], "996": [363, 592, 596], "328": [363, 592, 596], "462": [363, 597, 601], "604": [363, 597, 601], "984": [363, 597, 601], "997": [363, 597, 601], "decim": [363, 602, 605], "arg_info": 606, "inspect": [606, 612], "arg_nam": 606, "array_equ": 606, "assert_supports_inplac": 606, "clip_matrix_norm": 606, "downscal": [606, 618, 619, 621], "container_typ": 606, "copy_arrai": 606, "60": [606, 624, 743, 781, 783], "cumsum": [606, 1012], "current_backend_str": 606, "default_v": [606, 627], "catch_except": [606, 627], "rev": [606, 627], "with_cal": [606, 627], "arrang": [606, 628], "floormod": [606, 1012], "mod": [606, 632], "fourier_encod": 606, "max_freq": [606, 633], "num_band": [606, 633], "fourier": [606, 633], "band": [606, 633], "linearli": [606, 633, 743, 791, 793], "oppos": [606, 633], "geometr": [606, 633], "get_all_arrays_in_memori": 606, "get_min_bas": 606, "get_min_denomin": 606, "get_num_dim": [606, 1012], "get_referrers_recurs": 606, "seen_set": [606, 644], "local_set": [606, 644], "inplace_arrays_support": 606, "inplace_decr": 606, "decrement": [606, 648], "inplace_incr": 606, "inplace_variables_support": 606, "is_arrai": 606, "is_ivy_contain": 606, "match_kwarg": 606, "allow_dupl": [606, 656], "forkserv": [606, 657], "spawn": [606, 657], "num_arrays_in_memori": 606, "hot": [606, 659], "scatter": [606, 659, 662, 663], "overrid": [606, 659], "print_all_arrays_in_memori": 606, "scatter_flat": 606, "set_min_bas": 606, "set_min_denomin": 606, "set_queue_timeout": 606, "set_shape_array_mod": [606, 670, 685], "shape_array_mod": [606, 667, 685], "set_tmp_dir": 606, "tmp_dr": [606, 668], "temporari": [606, 668], "min_denomin": [606, 671], "stabil": [606, 671, 672], "_min_denomin": [606, 671], "stable_pow": 606, "min_bas": [606, 672], "supports_inplac": 606, "tmp_dir": 606, "to_ivy_shap": 606, "100000023841858": [606, 676], "200000047683716": [606, 676], "299999952316284": [606, 676], "400000095367432": [606, 676], "599999904632568": [606, 676], "to_native_shap": 606, "to_scalar": 606, "try_else_non": 606, "unset_shape_array_mod": 606, "value_is_nan": 606, "gradienttrack": 688, "with_grad": [688, 720], "en": [688, 689, 692, 694, 696], "wikipedia": [688, 689, 692, 694, 696], "wiki": [688, 689, 692, 694, 696], "stochastic_gradient_desc": [688, 689, 692, 694, 696], "004": [688, 689, 692], "009": [688, 689, 692], "86": [688, 689, 692], "28": [688, 689, 692, 726, 729, 732, 733, 736, 743, 781, 783], "0125": [688, 689, 692], "601": [688, 689, 692], "025": [688, 689, 692], "992": [688, 689, 692], "209": [688, 689, 692], "271": [688, 689, 692], "0717": [688, 689, 692], "142": [688, 689, 692], "182": [688, 689, 692], "624": [688, 689, 692], "744": [688, 689, 692], "626": [688, 689, 692], "65": [688, 689, 692, 743, 781, 783], "024": [688, 689, 692], "096": [688, 689, 692], "216": [688, 689, 692], "384": [688, 689, 692], "rate": [688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718, 891, 892, 893, 894], "ws_new": [688, 694, 696, 699, 701, 708, 710, 712, 714, 716, 718], "retain": [688, 698], "trust": [688, 708, 710], "decai": [688, 708, 710, 712, 714], "layerwis": [688, 712, 714], "set_with_grad": [688, 725], "unset_with_grad": 688, "variable_data": 688, "with_grads_stack": [688, 725], "conv1d": 726, "nwc": [726, 727, 728], "d_out": [726, 727, 728, 729, 730, 731, 732], "ncw": [726, 727, 728], "wio": [726, 727], "conv1d_transpos": 726, "output_shap": [726, 728, 730, 732], "conv2d": [726, 1012], "hwio": [726, 729], "unequ": [726, 729], "unsqueez": [726, 729, 733, 736], "conv2d_transpos": 726, "conv3d": 726, "ndhwc": [726, 731, 732], "volum": [726, 731], "fd": [726, 731, 732], "ncdhw": [726, 731, 732], "dhwio": [726, 731], "conv3d_transpos": 726, "258": [726, 732], "depthwis": [726, 733, 736], "hwi": [726, 733, 736], "333": [726, 733, 736], "prob": [726, 738], "randomli": [726, 738], "bernoulli": [726, 738], "out_featur": [726, 738, 739], "incom": [726, 739], "outer_batch_shap": [726, 739], "inner_batch_shap": [726, 739], "in_featur": [726, 739], "cell": [726, 740], "num_queri": [726, 741, 742], "x_feat_dim": [726, 741], "num_kei": [726, 741, 742], "cont_feat_dim": [726, 741], "numhead": [726, 741], "feat_dim": [726, 741, 742], "out_feat_dim": [726, 741], "scaled_dot_product_attent": 726, "score": [726, 742], "03": [726, 742], "decomposit": [743, 744, 747, 787, 789, 794, 796], "vif": [743, 749, 751], "92": [743, 752, 754], "293": [743, 752, 754], "46997": [743, 752, 754], "eigendecomposit": [743, 758, 760], "qlq\u1d40": [743, 758, 760], "orthogon": [743, 758, 760], "eig": [743, 758, 760], "eigenvalu": [743, 758, 760, 761, 763], "eigenvector": [743, 758, 760], "prepend": [743, 767, 770], "matrix_pow": 743, "singular": [743, 775, 777, 784, 786, 794, 796, 797, 799], "toler": [743, 775, 777, 784, 786], "largest_singular_valu": [743, 775, 777, 784, 786], "array_lik": [743, 781, 783], "84": [743, 781, 783], "105": [743, 781, 783, 815, 816, 819], "112": [743, 781, 783], "104": [743, 781, 783], "120": [743, 781, 783], "moor": [743, 784, 786], "penros": [743, 784, 786], "pseudo": [743, 784, 786], "orthonorm": [743, 787, 789, 794, 796], "slogdet": 743, "2d": [743, 790], "logdet": [743, 790], "coeffici": [743, 791, 793], "usvh": [743, 794, 796], "vh": [743, 794, 796], "hermitian": [743, 794, 796], "et": [743, 794, 796], "cetera": [743, 794, 796], "adjoint": [743, 794, 796], "reconstruct": [743, 794, 796], "reconstructed_x": [743, 794, 796], "contract": [743, 800, 802], "doubl": [743, 800, 802], "manhattan": [743, 809, 811], "l2": [743, 809, 811], "euclidean": [743, 809, 811], "mathbf": [743, 812, 814], "mathbb": [743, 812, 814], "skew": [743, 812, 814], "discret": [815, 821, 824], "35667497": [815, 821, 824], "793291": [815, 826, 829], "512926": [815, 826, 829], "before_1": [831, 841, 844, 887, 890], "after_1": [831, 841, 844, 887, 890], "before_n": [831, 841, 844, 887, 890], "after_n": [831, 841, 844, 887, 890], "insert": [831, 845, 848], "manipulation_funct": [831, 845, 848], "reorder": [831, 849, 852], "permut": [831, 853, 856, 879, 882], "repetit": [831, 857, 860, 883, 886], "famili": [831, 875, 878], "intxx": [831, 875, 878], "floatxx": [831, 875, 878], "fomaml_step": 891, "inner_cost_fn": [891, 892, 893], "outer_cost_fn": [891, 892, 893], "inner_grad_step": [891, 892, 893, 894], "inner_learning_r": [891, 892, 893, 894], "inner_optimization_step": [891, 892, 893, 894], "inner_batch_fn": [891, 892, 893], "outer_batch_fn": [891, 892, 893], "average_across_step": [891, 892, 893], "inner_v": [891, 892, 893], "keep_inner_v": [891, 892, 893], "outer_v": [891, 892, 893], "keep_outer_v": [891, 892, 893], "return_inner_v": [891, 892, 893, 894], "num_task": [891, 892, 893, 894], "maml": [891, 892, 893], "recev": [891, 892, 893], "0x7fa01cdf5dc0": [891, 892, 893, 894], "maml_step": 891, "rece": [891, 893], "reptile_step": 891, "cost_fn": [891, 894], "reptil": [891, 894], "receivng": [891, 894], "grow": 1012, "ai": 1012, "got": 1012, "colab": 1012, "sharp": 1012, "weekli": 1012, "immedi": 1012, "favorit": 1012, "jax_concat": 1012, "tf_concat": 1012, "np_concat": 1012, "mx_concat": 1012, "torch_concat": 1012, "prompt": 1012, "get_devic": 1012, "reduce_prod": 1012, "gradient_imag": 1012, "argmax": 1012, "argmin": 1012, "linalg": 1012, "bilinear_resampl": 1012, "stack_imag": 1012, "neural_net": 1012, "ecosystem": [1012, 1018], "popular": [1012, 1018], "acceler": 1012, "articl": 1012, "lenton2021ivi": 1012, "inter": 1012, "lenton": 1012, "daniel": 1012, "pardo": 1012, "fabio": 1012, "falck": 1012, "fabian": 1012, "jame": 1012, "stephen": 1012, "clark": 1012, "ronald": 1012, "journal": 1012, "arxiv": 1012, "preprint": 1012, "2102": 1012, "02886": 1012, "2021": 1012}, "objects": {"ivy.array": [[23, 0, 0, "-", "activations"], [25, 0, 0, "-", "array"], [28, 0, 0, "-", "conversions"], [33, 0, 0, "-", "creation"], [35, 0, 0, "-", "data_type"], [37, 0, 0, "-", "device"], [39, 0, 0, "-", "elementwise"], [41, 0, 0, "-", "general"], [43, 0, 0, "-", "gradients"], [45, 0, 0, "-", "image"], [47, 0, 0, "-", "layers"], [49, 0, 0, "-", "linear_algebra"], [51, 0, 0, "-", "losses"], [53, 0, 0, "-", "manipulation"], [55, 0, 0, "-", "norms"], [57, 0, 0, "-", "random"], [59, 0, 0, "-", "searching"], [61, 0, 0, "-", "set"], [63, 0, 0, "-", "sorting"], [65, 0, 0, "-", "statistical"], [67, 0, 0, "-", "utility"], [69, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[24, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[24, 2, 1, "", "softplus"]], "ivy.array.array": [[26, 1, 1, "", "Array"], [27, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[26, 3, 1, "", "T"], [26, 2, 1, "", "__add__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__le__"], [26, 2, 1, "", "__radd__"], [26, 3, 1, "", "data"], [26, 3, 1, "", "device"], [26, 3, 1, "", "dtype"], [26, 3, 1, "", "is_variable"], [26, 3, 1, "", "mT"], [26, 3, 1, "", "ndim"], [26, 3, 1, "", "shape"], [26, 3, 1, "", "size"]], "ivy.array.array.Variable": [[27, 2, 1, "", "__init__"]], "ivy.array.conversions": [[29, 4, 1, "", "args_to_ivy"], [30, 4, 1, "", "args_to_native"], [31, 4, 1, "", "to_ivy"], [32, 4, 1, "", "to_native"]], "ivy.array.creation": [[34, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[34, 2, 1, "", "asarray"], [34, 2, 1, "", "empty_like"], [34, 2, 1, "", "from_dlpack"], [34, 2, 1, "", "full_like"], [34, 2, 1, "", "meshgrid"], [34, 2, 1, "", "native_array"], [34, 2, 1, "", "ones_like"], [34, 2, 1, "", "tril"], [34, 2, 1, "", "triu"], [34, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[36, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[36, 2, 1, "", "astype"], [36, 2, 1, "", "broadcast_arrays"], [36, 2, 1, "", "broadcast_to"], [36, 2, 1, "", "can_cast"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "finfo"], [36, 2, 1, "", "iinfo"], [36, 2, 1, "", "is_float_dtype"], [36, 2, 1, "", "is_int_dtype"], [36, 2, 1, "", "result_type"]], "ivy.array.device": [[38, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[40, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[40, 2, 1, "", "abs"], [40, 2, 1, "", "acos"], [40, 2, 1, "", "acosh"], [40, 2, 1, "", "add"], [40, 2, 1, "", "asin"], [40, 2, 1, "", "asinh"], [40, 2, 1, "", "atan"], [40, 2, 1, "", "atan2"], [40, 2, 1, "", "atanh"], [40, 2, 1, "", "bitwise_and"], [40, 2, 1, "", "bitwise_invert"], [40, 2, 1, "", "bitwise_left_shift"], [40, 2, 1, "", "bitwise_or"], [40, 2, 1, "", "bitwise_right_shift"], [40, 2, 1, "", "bitwise_xor"], [40, 2, 1, "", "ceil"], [40, 2, 1, "", "cos"], [40, 2, 1, "", "cosh"], [40, 2, 1, "", "divide"], [40, 2, 1, "", "equal"], [40, 2, 1, "", "erf"], [40, 2, 1, "", "exp"], [40, 2, 1, "", "expm1"], [40, 2, 1, "", "floor"], [40, 2, 1, "", "floor_divide"], [40, 2, 1, "", "greater"], [40, 2, 1, "", "greater_equal"], [40, 2, 1, "", "isfinite"], [40, 2, 1, "", "isinf"], [40, 2, 1, "", "isnan"], [40, 2, 1, "", "less"], [40, 2, 1, "", "less_equal"], [40, 2, 1, "", "log"], [40, 2, 1, "", "log10"], [40, 2, 1, "", "log1p"], [40, 2, 1, "", "log2"], [40, 2, 1, "", "logaddexp"], [40, 2, 1, "", "logical_and"], [40, 2, 1, "", "logical_not"], [40, 2, 1, "", "logical_or"], [40, 2, 1, "", "logical_xor"], [40, 2, 1, "", "multiply"], [40, 2, 1, "", "negative"], [40, 2, 1, "", "not_equal"], [40, 2, 1, "", "positive"], [40, 2, 1, "", "pow"], [40, 2, 1, "", "remainder"], [40, 2, 1, "", "round"], [40, 2, 1, "", "sign"], [40, 2, 1, "", "sin"], [40, 2, 1, "", "sinh"], [40, 2, 1, "", "sqrt"], [40, 2, 1, "", "square"], [40, 2, 1, "", "subtract"], [40, 2, 1, "", "tan"], [40, 2, 1, "", "tanh"], [40, 2, 1, "", "trunc"]], "ivy.array.general": [[42, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[42, 2, 1, "", "all_equal"], [42, 2, 1, "", "gather_nd"], [42, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[44, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[44, 2, 1, "", "adam_step"], [44, 2, 1, "", "is_variable"]], "ivy.array.image": [[46, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[48, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[48, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[50, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[50, 2, 1, "", "cholesky"], [50, 2, 1, "", "cross"], [50, 2, 1, "", "det"], [50, 2, 1, "", "diagonal"], [50, 2, 1, "", "eigh"], [50, 2, 1, "", "eigvalsh"], [50, 2, 1, "", "inv"], [50, 2, 1, "", "matmul"], [50, 2, 1, "", "matrix_norm"], [50, 2, 1, "", "matrix_rank"], [50, 2, 1, "", "matrix_transpose"], [50, 2, 1, "", "outer"], [50, 2, 1, "", "pinv"], [50, 2, 1, "", "qr"], [50, 2, 1, "", "solve"], [50, 2, 1, "", "svd"], [50, 2, 1, "", "svdvals"], [50, 2, 1, "", "tensordot"], [50, 2, 1, "", "trace"], [50, 2, 1, "", "vecdot"], [50, 2, 1, "", "vector_norm"], [50, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[52, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[52, 2, 1, "", "binary_cross_entropy"], [52, 2, 1, "", "cross_entropy"], [52, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[54, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[54, 2, 1, "", "clip"], [54, 2, 1, "", "concat"], [54, 2, 1, "", "constant_pad"], [54, 2, 1, "", "expand_dims"], [54, 2, 1, "", "flip"], [54, 2, 1, "", "permute_dims"], [54, 2, 1, "", "repeat"], [54, 2, 1, "", "reshape"], [54, 2, 1, "", "roll"], [54, 2, 1, "", "squeeze"], [54, 2, 1, "", "stack"], [54, 2, 1, "", "swapaxes"], [54, 2, 1, "", "tile"], [54, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[56, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[56, 2, 1, "", "layer_norm"]], "ivy.array.random": [[58, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[60, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[62, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[62, 2, 1, "", "unique_all"], [62, 2, 1, "", "unique_counts"], [62, 2, 1, "", "unique_inverse"], [62, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[64, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[64, 2, 1, "", "argsort"], [64, 2, 1, "", "sort"]], "ivy.array.statistical": [[66, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[66, 2, 1, "", "einsum"], [66, 2, 1, "", "max"], [66, 2, 1, "", "mean"], [66, 2, 1, "", "min"], [66, 2, 1, "", "prod"], [66, 2, 1, "", "std"], [66, 2, 1, "", "sum"], [66, 2, 1, "", "var"]], "ivy.array.utility": [[68, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[68, 2, 1, "", "all"], [68, 2, 1, "", "any"]], "ivy.array.wrapping": [[70, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.backend_handler": [[1, 4, 1, "", "choose_random_backend"], [2, 4, 1, "", "clear_backend_stack"], [3, 4, 1, "", "current_backend"], [4, 4, 1, "", "get_backend"], [5, 4, 1, "", "set_backend"], [6, 4, 1, "", "try_import_ivy_jax"], [7, 4, 1, "", "try_import_ivy_mxnet"], [8, 4, 1, "", "try_import_ivy_numpy"], [9, 4, 1, "", "try_import_ivy_tf"], [10, 4, 1, "", "try_import_ivy_torch"], [11, 4, 1, "", "unset_backend"]], "ivy.container": [[72, 0, 0, "-", "activations"], [74, 0, 0, "-", "base"], [76, 0, 0, "-", "container"], [79, 0, 0, "-", "creation"], [81, 0, 0, "-", "data_type"], [83, 0, 0, "-", "device"], [85, 0, 0, "-", "elementwise"], [87, 0, 0, "-", "general"], [89, 0, 0, "-", "gradients"], [91, 0, 0, "-", "image"], [93, 0, 0, "-", "layers"], [95, 0, 0, "-", "linear_algebra"], [97, 0, 0, "-", "losses"], [99, 0, 0, "-", "manipulation"], [101, 0, 0, "-", "norms"], [103, 0, 0, "-", "random"], [105, 0, 0, "-", "searching"], [107, 0, 0, "-", "set"], [109, 0, 0, "-", "sorting"], [111, 0, 0, "-", "statistical"], [113, 0, 0, "-", "utility"], [115, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[73, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[73, 2, 1, "", "softplus"], [73, 2, 1, "", "static_softplus"]], "ivy.container.base": [[75, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[75, 2, 1, "", "__getitem__"], [75, 2, 1, "", "__init__"], [75, 2, 1, "", "__setitem__"], [75, 2, 1, "", "all_false"], [75, 2, 1, "", "all_key_chains"], [75, 2, 1, "", "all_true"], [75, 2, 1, "", "arrays_as_lists"], [75, 2, 1, "", "as_arrays"], [75, 2, 1, "", "as_bools"], [75, 2, 1, "", "as_ones"], [75, 2, 1, "", "as_random_uniform"], [75, 2, 1, "", "as_variables"], [75, 2, 1, "", "as_zeros"], [75, 2, 1, "", "assert_contains_sub_container"], [75, 2, 1, "", "assert_contains_sub_structure"], [75, 2, 1, "", "assert_identical"], [75, 2, 1, "", "assert_identical_structure"], [75, 2, 1, "", "at_key_chain"], [75, 2, 1, "", "at_key_chains"], [75, 2, 1, "", "at_keys"], [75, 2, 1, "", "clip"], [75, 2, 1, "", "combine"], [75, 2, 1, "", "common_key_chains"], [75, 3, 1, "", "config"], [75, 2, 1, "", "contains_sub_container"], [75, 2, 1, "", "contains_sub_structure"], [75, 2, 1, "", "copy"], [75, 2, 1, "", "create_if_absent"], [75, 2, 1, "", "cutoff_at_depth"], [75, 2, 1, "", "cutoff_at_height"], [75, 2, 1, "", "deep_copy"], [75, 3, 1, "", "dev"], [75, 2, 1, "", "dev_clone"], [75, 2, 1, "", "dev_dist"], [75, 3, 1, "", "dev_str"], [75, 2, 1, "", "diff"], [75, 2, 1, "", "dtype"], [75, 2, 1, "", "einops_rearrange"], [75, 2, 1, "", "einops_reduce"], [75, 2, 1, "", "einops_repeat"], [75, 2, 1, "", "find_sub_container"], [75, 2, 1, "", "find_sub_structure"], [75, 2, 1, "", "flatten_key_chain"], [75, 2, 1, "", "flatten_key_chains"], [75, 2, 1, "", "format_key_chains"], [75, 2, 1, "", "from_disk_as_hdf5"], [75, 2, 1, "", "from_disk_as_json"], [75, 2, 1, "", "from_disk_as_pickled"], [75, 2, 1, "", "from_flat_list"], [75, 2, 1, "", "from_numpy"], [75, 2, 1, "", "gather"], [75, 2, 1, "", "gather_nd"], [75, 2, 1, "", "h5_file_size"], [75, 2, 1, "", "handle_inplace"], [75, 2, 1, "", "has_key"], [75, 2, 1, "", "has_key_chain"], [75, 2, 1, "", "has_nans"], [75, 2, 1, "", "identical"], [75, 2, 1, "", "identical_array_shapes"], [75, 2, 1, "", "identical_configs"], [75, 2, 1, "", "identical_structure"], [75, 2, 1, "", "if_exists"], [75, 2, 1, "", "inplace_update"], [75, 3, 1, "", "ivy"], [75, 2, 1, "", "key_chains_containing"], [75, 2, 1, "", "list_join"], [75, 2, 1, "", "list_stack"], [75, 2, 1, "", "map"], [75, 2, 1, "", "map_conts"], [75, 2, 1, "", "matrix_norm"], [75, 3, 1, "", "max_depth"], [75, 2, 1, "", "maximum"], [75, 2, 1, "", "minimum"], [75, 2, 1, "", "multi_map"], [75, 2, 1, "", "multi_map_in_static_method"], [75, 2, 1, "", "num_arrays"], [75, 2, 1, "", "overwrite_at_key_chain"], [75, 2, 1, "", "overwrite_at_key_chains"], [75, 2, 1, "", "prune_empty"], [75, 2, 1, "", "prune_key_chain"], [75, 2, 1, "", "prune_key_chains"], [75, 2, 1, "", "prune_key_from_key_chains"], [75, 2, 1, "", "prune_keys"], [75, 2, 1, "", "prune_keys_from_key_chains"], [75, 2, 1, "", "reduce"], [75, 2, 1, "", "remove_key_length_limit"], [75, 2, 1, "", "remove_print_limit"], [75, 2, 1, "", "reshape_like"], [75, 2, 1, "", "restructure"], [75, 2, 1, "", "restructure_key_chains"], [75, 2, 1, "", "set_at_key_chain"], [75, 2, 1, "", "set_at_key_chains"], [75, 2, 1, "", "set_at_keys"], [75, 2, 1, "", "set_framework"], [75, 2, 1, "", "set_ivy_backend"], [75, 3, 1, "", "shape"], [75, 3, 1, "", "shapes"], [75, 2, 1, "", "show"], [75, 2, 1, "", "show_sub_container"], [75, 2, 1, "", "shuffle"], [75, 2, 1, "", "shuffle_h5_file"], [75, 2, 1, "", "size_ordered_arrays"], [75, 2, 1, "", "slice_keys"], [75, 2, 1, "", "slice_via_key"], [75, 2, 1, "", "sort_by_key"], [75, 2, 1, "", "split"], [75, 2, 1, "", "stop_gradients"], [75, 2, 1, "", "structural_diff"], [75, 2, 1, "", "to_device"], [75, 2, 1, "", "to_dict"], [75, 2, 1, "", "to_disk_as_hdf5"], [75, 2, 1, "", "to_disk_as_json"], [75, 2, 1, "", "to_disk_as_pickled"], [75, 2, 1, "", "to_flat_list"], [75, 2, 1, "", "to_iterator"], [75, 2, 1, "", "to_iterator_keys"], [75, 2, 1, "", "to_iterator_values"], [75, 2, 1, "", "to_ivy"], [75, 2, 1, "", "to_jsonable"], [75, 2, 1, "", "to_list"], [75, 2, 1, "", "to_multi_dev"], [75, 2, 1, "", "to_native"], [75, 2, 1, "", "to_numpy"], [75, 2, 1, "", "to_raw"], [75, 2, 1, "", "trim_key"], [75, 2, 1, "", "try_kc"], [75, 2, 1, "", "unify"], [75, 2, 1, "", "unstack"], [75, 2, 1, "", "update_config"], [75, 2, 1, "", "vector_norm"], [75, 2, 1, "", "with_default_key_color"], [75, 2, 1, "", "with_entries_as_lists"], [75, 2, 1, "", "with_ivy_backend"], [75, 2, 1, "", "with_key_length_limit"], [75, 2, 1, "", "with_print_indent"], [75, 2, 1, "", "with_print_limit"], [75, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[77, 1, 1, "", "Container"], [78, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[77, 2, 1, "", "__add__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__radd__"]], "ivy.container.container.MultiDevContainer": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "at_dev"], [78, 2, 1, "", "at_devs"]], "ivy.container.creation": [[80, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[80, 2, 1, "", "empty_like"], [80, 2, 1, "", "from_dlpack"], [80, 2, 1, "", "full_like"], [80, 2, 1, "", "meshgrid"], [80, 2, 1, "", "native_array"], [80, 2, 1, "", "ones_like"], [80, 2, 1, "", "static_arange"], [80, 2, 1, "", "static_asarray"], [80, 2, 1, "", "static_empty_like"], [80, 2, 1, "", "static_eye"], [80, 2, 1, "", "static_from_dlpack"], [80, 2, 1, "", "static_full_like"], [80, 2, 1, "", "static_linspace"], [80, 2, 1, "", "static_logspace"], [80, 2, 1, "", "static_meshgrid"], [80, 2, 1, "", "static_native_array"], [80, 2, 1, "", "static_ones"], [80, 2, 1, "", "static_ones_like"], [80, 2, 1, "", "static_tril"], [80, 2, 1, "", "static_triu"], [80, 2, 1, "", "static_zeros"], [80, 2, 1, "", "static_zeros_like"], [80, 2, 1, "", "tril"], [80, 2, 1, "", "triu"], [80, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[82, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[82, 2, 1, "", "astype"], [82, 2, 1, "", "broadcast_arrays"], [82, 2, 1, "", "broadcast_to"], [82, 2, 1, "", "can_cast"], [82, 2, 1, "", "dtype"], [82, 2, 1, "", "finfo"], [82, 2, 1, "", "iinfo"], [82, 2, 1, "", "is_float_dtype"], [82, 2, 1, "", "is_int_dtype"], [82, 2, 1, "", "result_type"], [82, 2, 1, "", "static_astype"], [82, 2, 1, "", "static_broadcast_arrays"], [82, 2, 1, "", "static_broadcast_to"], [82, 2, 1, "", "static_can_cast"], [82, 2, 1, "", "static_finfo"], [82, 2, 1, "", "static_iinfo"], [82, 2, 1, "", "static_is_float_dtype"], [82, 2, 1, "", "static_is_int_dtype"], [82, 2, 1, "", "static_result_type"]], "ivy.container.device": [[84, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[86, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[86, 2, 1, "", "abs"], [86, 2, 1, "", "acos"], [86, 2, 1, "", "acosh"], [86, 2, 1, "", "add"], [86, 2, 1, "", "asin"], [86, 2, 1, "", "asinh"], [86, 2, 1, "", "atan"], [86, 2, 1, "", "atan2"], [86, 2, 1, "", "atanh"], [86, 2, 1, "", "bitwise_and"], [86, 2, 1, "", "bitwise_invert"], [86, 2, 1, "", "bitwise_left_shift"], [86, 2, 1, "", "bitwise_or"], [86, 2, 1, "", "bitwise_right_shift"], [86, 2, 1, "", "bitwise_xor"], [86, 2, 1, "", "ceil"], [86, 2, 1, "", "cos"], [86, 2, 1, "", "cosh"], [86, 2, 1, "", "divide"], [86, 2, 1, "", "equal"], [86, 2, 1, "", "erf"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "expm1"], [86, 2, 1, "", "floor"], [86, 2, 1, "", "floor_divide"], [86, 2, 1, "", "greater"], [86, 2, 1, "", "greater_equal"], [86, 2, 1, "", "isfinite"], [86, 2, 1, "", "isinf"], [86, 2, 1, "", "isnan"], [86, 2, 1, "", "less"], [86, 2, 1, "", "less_equal"], [86, 2, 1, "", "log"], [86, 2, 1, "", "log10"], [86, 2, 1, "", "log1p"], [86, 2, 1, "", "log2"], [86, 2, 1, "", "logaddexp"], [86, 2, 1, "", "logical_and"], [86, 2, 1, "", "logical_not"], [86, 2, 1, "", "logical_or"], [86, 2, 1, "", "logical_xor"], [86, 2, 1, "", "multiply"], [86, 2, 1, "", "negative"], [86, 2, 1, "", "not_equal"], [86, 2, 1, "", "positive"], [86, 2, 1, "", "pow"], [86, 2, 1, "", "remainder"], [86, 2, 1, "", "round"], [86, 2, 1, "", "sign"], [86, 2, 1, "", "sin"], [86, 2, 1, "", "sinh"], [86, 2, 1, "", "sqrt"], [86, 2, 1, "", "square"], [86, 2, 1, "", "static_abs"], [86, 2, 1, "", "static_add"], [86, 2, 1, "", "static_asinh"], [86, 2, 1, "", "static_cos"], [86, 2, 1, "", "static_divide"], [86, 2, 1, "", "static_multiply"], [86, 2, 1, "", "static_sign"], [86, 2, 1, "", "static_sin"], [86, 2, 1, "", "static_sinh"], [86, 2, 1, "", "static_subtract"], [86, 2, 1, "", "static_tan"], [86, 2, 1, "", "static_tanh"], [86, 2, 1, "", "subtract"], [86, 2, 1, "", "tan"], [86, 2, 1, "", "tanh"], [86, 2, 1, "", "trunc"]], "ivy.container.general": [[88, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[88, 2, 1, "", "all_equal"], [88, 2, 1, "", "clip_vector_norm"], [88, 2, 1, "", "gather_nd"], [88, 2, 1, "", "static_all_equal"], [88, 2, 1, "", "static_gather_nd"], [88, 2, 1, "", "static_to_numpy"], [88, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[90, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[90, 2, 1, "", "adam_step"], [90, 2, 1, "", "adam_update"], [90, 2, 1, "", "gradient_descent_update"], [90, 2, 1, "", "is_variable"], [90, 2, 1, "", "lamb_update"], [90, 2, 1, "", "lars_update"], [90, 2, 1, "", "optimizer_update"], [90, 2, 1, "", "static_adam_step"], [90, 2, 1, "", "static_adam_update"], [90, 2, 1, "", "static_gradient_descent_update"], [90, 2, 1, "", "static_is_variable"], [90, 2, 1, "", "static_lamb_update"], [90, 2, 1, "", "static_lars_update"], [90, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[92, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[94, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[94, 2, 1, "", "depthwise_conv2d"], [94, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[96, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[96, 2, 1, "", "cholesky"], [96, 2, 1, "", "matmul"], [96, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[98, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[98, 2, 1, "", "binary_cross_entropy"], [98, 2, 1, "", "cross_entropy"], [98, 2, 1, "", "sparse_cross_entropy"], [98, 2, 1, "", "static_binary_cross_entropy"], [98, 2, 1, "", "static_cross_entropy"], [98, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[100, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[100, 2, 1, "", "clip"], [100, 2, 1, "", "concat"], [100, 2, 1, "", "constant_pad"], [100, 2, 1, "", "expand_dims"], [100, 2, 1, "", "flip"], [100, 2, 1, "", "permute_dims"], [100, 2, 1, "", "repeat"], [100, 2, 1, "", "reshape"], [100, 2, 1, "", "roll"], [100, 2, 1, "", "squeeze"], [100, 2, 1, "", "stack"], [100, 2, 1, "", "static_clip"], [100, 2, 1, "", "static_roll"], [100, 2, 1, "", "swapaxes"], [100, 2, 1, "", "tile"], [100, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[102, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[102, 2, 1, "", "layer_norm"], [102, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[104, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[104, 2, 1, "", "random_uniform"], [104, 2, 1, "", "static_randint"], [104, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[106, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[108, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[108, 2, 1, "", "static_unique_all"], [108, 2, 1, "", "static_unique_counts"], [108, 2, 1, "", "static_unique_inverse"], [108, 2, 1, "", "static_unique_values"], [108, 2, 1, "", "unique_all"], [108, 2, 1, "", "unique_counts"], [108, 2, 1, "", "unique_inverse"], [108, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[110, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[110, 2, 1, "", "argsort"], [110, 2, 1, "", "sort"], [110, 2, 1, "", "static_argsort"], [110, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[112, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[112, 2, 1, "", "einsum"], [112, 2, 1, "", "max"], [112, 2, 1, "", "mean"], [112, 2, 1, "", "min"], [112, 2, 1, "", "prod"], [112, 2, 1, "", "std"], [112, 2, 1, "", "sum"], [112, 2, 1, "", "var"]], "ivy.container.utility": [[114, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[114, 2, 1, "", "all"], [114, 2, 1, "", "any"], [114, 2, 1, "", "static_all"], [114, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[116, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy": [[152, 0, 0, "-", "func_wrapper"], [1056, 0, 0, "-", "verbosity"]], "ivy.func_wrapper": [[153, 4, 1, "", "handle_nestable"], [154, 4, 1, "", "handle_out_argument"], [155, 4, 1, "", "infer_device"], [156, 4, 1, "", "infer_dtype"], [157, 4, 1, "", "inputs_to_ivy_arrays"], [158, 4, 1, "", "inputs_to_native_arrays"], [159, 4, 1, "", "outputs_to_ivy_arrays"], [160, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[162, 0, 0, "-", "activations"], [174, 0, 0, "-", "compilation"], [176, 0, 0, "-", "constants"], [177, 0, 0, "-", "creation"], [247, 0, 0, "-", "data_type"], [316, 0, 0, "-", "device"], [363, 0, 0, "-", "elementwise"], [606, 0, 0, "-", "general"], [688, 0, 0, "-", "gradients"], [726, 0, 0, "-", "layers"], [743, 0, 0, "-", "linear_algebra"], [815, 0, 0, "-", "losses"], [831, 0, 0, "-", "manipulation"], [891, 0, 0, "-", "meta"]], "ivy.functional.ivy.activations": [[163, 4, 1, "", "gelu"], [164, 4, 1, "", "leaky_relu"], [165, 4, 1, "", "relu"], [166, 4, 1, "", "sigmoid"], [167, 4, 1, "", "softmax"], [171, 4, 1, "", "softplus"], [173, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[175, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[176, 5, 1, "", "e"], [176, 5, 1, "", "inf"], [176, 5, 1, "", "nan"], [176, 5, 1, "", "newaxis"], [176, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[179, 4, 1, "", "arange"], [177, 4, 1, "", "array"], [183, 4, 1, "", "asarray"], [185, 4, 1, "", "empty"], [189, 4, 1, "", "empty_like"], [192, 4, 1, "", "eye"], [197, 4, 1, "", "from_dlpack"], [199, 4, 1, "", "full"], [203, 4, 1, "", "full_like"], [206, 4, 1, "", "linspace"], [209, 4, 1, "", "logspace"], [214, 4, 1, "", "meshgrid"], [219, 4, 1, "", "native_array"], [222, 4, 1, "", "ones"], [227, 4, 1, "", "ones_like"], [233, 4, 1, "", "tril"], [238, 4, 1, "", "triu"], [241, 4, 1, "", "zeros"], [246, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[247, 1, 1, "", "DefaultDtype"], [247, 1, 1, "", "DefaultFloatDtype"], [247, 1, 1, "", "DefaultIntDtype"], [248, 4, 1, "", "as_ivy_dtype"], [249, 4, 1, "", "as_native_dtype"], [253, 4, 1, "", "astype"], [258, 4, 1, "", "broadcast_arrays"], [263, 4, 1, "", "broadcast_to"], [268, 4, 1, "", "can_cast"], [270, 4, 1, "", "closest_valid_dtype"], [271, 4, 1, "", "default_dtype"], [272, 4, 1, "", "default_float_dtype"], [273, 4, 1, "", "default_int_dtype"], [277, 4, 1, "", "dtype"], [278, 4, 1, "", "dtype_bits"], [282, 4, 1, "", "finfo"], [284, 4, 1, "", "function_supported_dtypes"], [285, 4, 1, "", "function_unsupported_dtypes"], [289, 4, 1, "", "iinfo"], [291, 4, 1, "", "invalid_dtype"], [295, 4, 1, "", "is_float_dtype"], [300, 4, 1, "", "is_int_dtype"], [302, 4, 1, "", "promote_types"], [306, 4, 1, "", "result_type"], [308, 4, 1, "", "set_default_dtype"], [309, 4, 1, "", "set_default_float_dtype"], [310, 4, 1, "", "set_default_int_dtype"], [311, 4, 1, "", "type_promote_arrays"], [312, 4, 1, "", "unset_default_dtype"], [313, 4, 1, "", "unset_default_float_dtype"], [314, 4, 1, "", "unset_default_int_dtype"], [315, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[247, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[247, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[247, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[316, 1, 1, "", "DefaultDevice"], [317, 1, 1, "", "DevClonedItem"], [318, 1, 1, "", "DevClonedIter"], [319, 1, 1, "", "DevClonedNest"], [320, 1, 1, "", "DevDistItem"], [321, 1, 1, "", "DevDistIter"], [322, 1, 1, "", "DevDistNest"], [316, 1, 1, "", "DevManager"], [323, 1, 1, "", "DevMapper"], [324, 1, 1, "", "DevMapperMultiProc"], [316, 1, 1, "", "MultiDev"], [325, 1, 1, "", "MultiDevItem"], [326, 1, 1, "", "MultiDevIter"], [327, 1, 1, "", "MultiDevNest"], [328, 1, 1, "", "Profiler"], [329, 4, 1, "", "as_ivy_dev"], [330, 4, 1, "", "as_native_dev"], [331, 4, 1, "", "clear_mem_on_dev"], [332, 4, 1, "", "default_device"], [333, 4, 1, "", "dev"], [334, 4, 1, "", "dev_clone"], [335, 4, 1, "", "dev_clone_array"], [336, 4, 1, "", "dev_clone_iter"], [337, 4, 1, "", "dev_clone_nest"], [338, 4, 1, "", "dev_dist"], [339, 4, 1, "", "dev_dist_array"], [340, 4, 1, "", "dev_dist_iter"], [341, 4, 1, "", "dev_dist_nest"], [342, 4, 1, "", "dev_unify"], [343, 4, 1, "", "dev_unify_array"], [344, 4, 1, "", "dev_unify_iter"], [345, 4, 1, "", "dev_unify_nest"], [346, 4, 1, "", "dev_util"], [347, 4, 1, "", "get_all_ivy_arrays_on_dev"], [348, 4, 1, "", "gpu_is_available"], [349, 4, 1, "", "num_cpu_cores"], [350, 4, 1, "", "num_gpus"], [351, 4, 1, "", "num_ivy_arrays_on_dev"], [352, 4, 1, "", "percent_used_mem_on_dev"], [353, 4, 1, "", "print_all_ivy_arrays_on_dev"], [354, 4, 1, "", "set_default_device"], [355, 4, 1, "", "set_split_factor"], [356, 4, 1, "", "split_factor"], [357, 4, 1, "", "split_func_call"], [358, 4, 1, "", "to_device"], [359, 4, 1, "", "total_mem_on_dev"], [360, 4, 1, "", "tpu_is_available"], [361, 4, 1, "", "unset_default_device"], [362, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[316, 2, 1, "", "__enter__"], [316, 2, 1, "", "__exit__"], [316, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[316, 2, 1, "", "__init__"], [316, 2, 1, "", "da_tune_step"], [316, 3, 1, "", "dim_size"], [316, 2, 1, "", "ds_tune_step"], [316, 2, 1, "", "map"], [316, 2, 1, "", "repeated_config_check"], [316, 3, 1, "", "tune_step"], [316, 3, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[324, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[316, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "items"], [325, 2, 1, "", "keys"], [325, 3, 1, "", "shape"], [325, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "at_dev"], [326, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "start"], [328, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[367, 4, 1, "", "abs"], [372, 4, 1, "", "acos"], [376, 4, 1, "", "acosh"], [380, 4, 1, "", "add"], [385, 4, 1, "", "asin"], [389, 4, 1, "", "asinh"], [394, 4, 1, "", "atan"], [398, 4, 1, "", "atan2"], [402, 4, 1, "", "atanh"], [406, 4, 1, "", "bitwise_and"], [410, 4, 1, "", "bitwise_invert"], [414, 4, 1, "", "bitwise_left_shift"], [418, 4, 1, "", "bitwise_or"], [422, 4, 1, "", "bitwise_right_shift"], [426, 4, 1, "", "bitwise_xor"], [430, 4, 1, "", "ceil"], [434, 4, 1, "", "cos"], [439, 4, 1, "", "cosh"], [443, 4, 1, "", "divide"], [448, 4, 1, "", "equal"], [452, 4, 1, "", "erf"], [456, 4, 1, "", "exp"], [460, 4, 1, "", "expm1"], [464, 4, 1, "", "floor"], [468, 4, 1, "", "floor_divide"], [472, 4, 1, "", "greater"], [476, 4, 1, "", "greater_equal"], [480, 4, 1, "", "isfinite"], [484, 4, 1, "", "isinf"], [488, 4, 1, "", "isnan"], [492, 4, 1, "", "less"], [496, 4, 1, "", "less_equal"], [500, 4, 1, "", "log"], [504, 4, 1, "", "log10"], [508, 4, 1, "", "log1p"], [512, 4, 1, "", "log2"], [516, 4, 1, "", "logaddexp"], [520, 4, 1, "", "logical_and"], [524, 4, 1, "", "logical_not"], [528, 4, 1, "", "logical_or"], [532, 4, 1, "", "logical_xor"], [533, 4, 1, "", "maximum"], [534, 4, 1, "", "minimum"], [538, 4, 1, "", "multiply"], [543, 4, 1, "", "negative"], [547, 4, 1, "", "not_equal"], [551, 4, 1, "", "positive"], [555, 4, 1, "", "pow"], [559, 4, 1, "", "remainder"], [563, 4, 1, "", "round"], [567, 4, 1, "", "sign"], [572, 4, 1, "", "sin"], [577, 4, 1, "", "sinh"], [582, 4, 1, "", "sqrt"], [586, 4, 1, "", "square"], [591, 4, 1, "", "subtract"], [596, 4, 1, "", "tan"], [601, 4, 1, "", "tanh"], [605, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[610, 4, 1, "", "all_equal"], [612, 4, 1, "", "arg_info"], [613, 4, 1, "", "arg_names"], [614, 4, 1, "", "array_equal"], [615, 4, 1, "", "arrays_equal"], [616, 4, 1, "", "assert_supports_inplace"], [617, 4, 1, "", "cache_fn"], [618, 4, 1, "", "clip_matrix_norm"], [621, 4, 1, "", "clip_vector_norm"], [622, 4, 1, "", "container_types"], [623, 4, 1, "", "copy_array"], [624, 4, 1, "", "cumprod"], [625, 4, 1, "", "cumsum"], [626, 4, 1, "", "current_backend_str"], [627, 4, 1, "", "default"], [628, 4, 1, "", "einops_rearrange"], [629, 4, 1, "", "einops_reduce"], [630, 4, 1, "", "einops_repeat"], [631, 4, 1, "", "exists"], [632, 4, 1, "", "floormod"], [633, 4, 1, "", "fourier_encode"], [634, 4, 1, "", "gather"], [638, 4, 1, "", "gather_nd"], [640, 4, 1, "", "get_all_arrays_in_memory"], [641, 4, 1, "", "get_min_base"], [642, 4, 1, "", "get_min_denominator"], [643, 4, 1, "", "get_num_dims"], [644, 4, 1, "", "get_referrers_recursive"], [645, 4, 1, "", "has_nans"], [646, 4, 1, "", "indices_where"], [647, 4, 1, "", "inplace_arrays_supported"], [648, 4, 1, "", "inplace_decrement"], [649, 4, 1, "", "inplace_increment"], [650, 4, 1, "", "inplace_update"], [651, 4, 1, "", "inplace_variables_supported"], [652, 4, 1, "", "is_array"], [653, 4, 1, "", "is_ivy_array"], [654, 4, 1, "", "is_ivy_container"], [655, 4, 1, "", "is_native_array"], [656, 4, 1, "", "match_kwargs"], [657, 4, 1, "", "multiprocessing"], [658, 4, 1, "", "num_arrays_in_memory"], [659, 4, 1, "", "one_hot"], [660, 4, 1, "", "print_all_arrays_in_memory"], [661, 4, 1, "", "queue_timeout"], [662, 4, 1, "", "scatter_flat"], [663, 4, 1, "", "scatter_nd"], [664, 4, 1, "", "set_min_base"], [665, 4, 1, "", "set_min_denominator"], [666, 4, 1, "", "set_queue_timeout"], [667, 4, 1, "", "set_shape_array_mode"], [668, 4, 1, "", "set_tmp_dir"], [669, 4, 1, "", "shape"], [670, 4, 1, "", "shape_array_mode"], [671, 4, 1, "", "stable_divide"], [672, 4, 1, "", "stable_pow"], [673, 4, 1, "", "supports_inplace"], [674, 4, 1, "", "tmp_dir"], [675, 4, 1, "", "to_ivy_shape"], [676, 4, 1, "", "to_list"], [677, 4, 1, "", "to_native_shape"], [682, 4, 1, "", "to_numpy"], [683, 4, 1, "", "to_scalar"], [684, 4, 1, "", "try_else_none"], [685, 4, 1, "", "unset_shape_array_mode"], [686, 4, 1, "", "unstack"], [687, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[688, 1, 1, "", "GradientTracking"], [692, 4, 1, "", "adam_step"], [696, 4, 1, "", "adam_update"], [698, 4, 1, "", "execute_with_gradients"], [701, 4, 1, "", "gradient_descent_update"], [706, 4, 1, "", "is_variable"], [710, 4, 1, "", "lamb_update"], [714, 4, 1, "", "lars_update"], [718, 4, 1, "", "optimizer_update"], [720, 4, 1, "", "set_with_grads"], [721, 4, 1, "", "stop_gradient"], [722, 4, 1, "", "unset_with_grads"], [723, 4, 1, "", "variable"], [724, 4, 1, "", "variable_data"], [725, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[688, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[727, 4, 1, "", "conv1d"], [728, 4, 1, "", "conv1d_transpose"], [729, 4, 1, "", "conv2d"], [730, 4, 1, "", "conv2d_transpose"], [731, 4, 1, "", "conv3d"], [732, 4, 1, "", "conv3d_transpose"], [736, 4, 1, "", "depthwise_conv2d"], [738, 4, 1, "", "dropout"], [739, 4, 1, "", "linear"], [740, 4, 1, "", "lstm_update"], [741, 4, 1, "", "multi_head_attention"], [742, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[747, 4, 1, "", "cholesky"], [751, 4, 1, "", "cross"], [754, 4, 1, "", "det"], [757, 4, 1, "", "diagonal"], [760, 4, 1, "", "eigh"], [763, 4, 1, "", "eigvalsh"], [766, 4, 1, "", "inv"], [770, 4, 1, "", "matmul"], [773, 4, 1, "", "matrix_norm"], [774, 4, 1, "", "matrix_power"], [777, 4, 1, "", "matrix_rank"], [780, 4, 1, "", "matrix_transpose"], [783, 4, 1, "", "outer"], [786, 4, 1, "", "pinv"], [789, 4, 1, "", "qr"], [790, 4, 1, "", "slogdet"], [793, 4, 1, "", "solve"], [796, 4, 1, "", "svd"], [799, 4, 1, "", "svdvals"], [802, 4, 1, "", "tensordot"], [805, 4, 1, "", "trace"], [808, 4, 1, "", "vecdot"], [811, 4, 1, "", "vector_norm"], [814, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[819, 4, 1, "", "binary_cross_entropy"], [824, 4, 1, "", "cross_entropy"], [829, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[835, 4, 1, "", "clip"], [840, 4, 1, "", "concat"], [844, 4, 1, "", "constant_pad"], [848, 4, 1, "", "expand_dims"], [852, 4, 1, "", "flip"], [856, 4, 1, "", "permute_dims"], [860, 4, 1, "", "repeat"], [864, 4, 1, "", "reshape"], [868, 4, 1, "", "roll"], [870, 4, 1, "", "split"], [874, 4, 1, "", "squeeze"], [878, 4, 1, "", "stack"], [882, 4, 1, "", "swapaxes"], [886, 4, 1, "", "tile"], [890, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[892, 4, 1, "", "fomaml_step"], [893, 4, 1, "", "maml_step"], [894, 4, 1, "", "reptile_step"]], "ivy.verbosity": [[1057, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 118, 125, 134, 151], "handler": [0, 134], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 1012], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 151], "competit": 14, "do": [14, 123], "work": [14, 20], "The": [14, 18, 136, 151], "arrai": [14, 22, 25, 119, 122, 127, 136, 169, 182, 187, 195, 201, 212, 217, 225, 231, 236, 244, 251, 256, 261, 266, 275, 280, 287, 293, 298, 304, 365, 370, 374, 378, 383, 387, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 437, 441, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 536, 541, 545, 549, 553, 557, 561, 565, 570, 575, 580, 584, 589, 594, 599, 603, 608, 636, 680, 690, 704, 734, 745, 750, 753, 756, 759, 762, 765, 768, 772, 776, 779, 782, 785, 788, 792, 795, 798, 801, 804, 807, 810, 813, 817, 822, 827, 833, 838, 842, 846, 850, 854, 858, 862, 866, 872, 876, 880, 884, 888, 915, 939, 944, 949, 954, 959, 964, 970, 974, 978, 982, 986, 990, 994, 998, 1003, 1008], "api": [14, 19, 118, 122, 128, 134, 136, 138, 139], "why": [15, 123], "unifi": [15, 136], "No": [15, 17], "more": 15, "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 1012], "set": [17, 61, 107, 125, 936], "up": 17, "clone": 17, "ivi": [17, 118, 121, 123, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 169, 170, 171, 172, 179, 180, 182, 183, 184, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 275, 276, 277, 280, 281, 282, 283, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 523, 524, 526, 527, 528, 530, 531, 532, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 608, 609, 610, 611, 620, 621, 636, 637, 638, 639, 679, 680, 681, 682, 690, 691, 692, 693, 695, 696, 697, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 718, 719, 734, 735, 736, 737, 745, 746, 747, 748, 750, 751, 753, 754, 756, 757, 759, 760, 762, 763, 765, 766, 768, 769, 770, 772, 773, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 792, 793, 795, 796, 798, 799, 801, 802, 804, 805, 807, 808, 810, 811, 813, 814, 817, 818, 819, 820, 822, 823, 824, 825, 827, 828, 829, 830, 833, 834, 835, 836, 838, 839, 840, 842, 843, 844, 846, 847, 848, 850, 851, 852, 854, 855, 856, 858, 859, 860, 862, 863, 864, 866, 867, 868, 869, 872, 873, 874, 876, 877, 878, 880, 881, 882, 884, 885, 886, 888, 889, 890, 915, 916, 917, 918, 922, 923, 926, 927, 928, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 959, 960, 961, 962, 964, 965, 966, 967, 970, 971, 972, 974, 975, 976, 978, 979, 980, 982, 983, 984, 986, 987, 988, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011], "pycharm": 17, "virtual": 17, "environ": 17, "docker": [17, 18, 20], "us": [17, 20, 137], "miniconda": [17, 20], "venv": [17, 20], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "github": 17, "codespac": 17, "pre": [17, 132], "commit": [17, 18, 132], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "who": 18, "To": 18, "ask": 18, "With": 18, "command": 18, "line": 18, "browser": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "run": 18, "test": [18, 122, 123], "local": 18, "open": 19, "task": 19, "function": [19, 119, 123, 124, 126, 128, 129, 130, 134, 139, 151], "format": [19, 132], "frontend": [19, 139], "build": [20, 134], "doc": 20, "dockerless": 20, "document": 20, "pipelin": [20, 151], "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "data": [21, 35, 81, 123, 129, 137, 151, 247], "class": [21, 136, 1019], "activ": [23, 72, 162, 1020], "arraywithactiv": 24, "convers": 28, "args_to_ivi": 29, "args_to_n": 30, "to_ivi": 31, "to_n": 32, "creation": [33, 79, 177], "arraywithcr": 34, "type": [35, 81, 124, 129, 151, 247], "arraywithdatatyp": 36, "devic": [37, 83, 119, 130, 316], "arraywithdevic": 38, "elementwis": [39, 85, 363], "arraywithelementwis": 40, "gener": [41, 87, 123, 606], "arraywithgener": 42, "gradient": [43, 89, 688], "arraywithgradi": 44, "imag": [45, 91], "arraywithimag": 46, "layer": [47, 93, 726, 1031], "arraywithlay": 48, "linear": [49, 95, 739, 743, 1041], "algebra": [49, 95, 743], "arraywithlinearalgebra": 50, "loss": [51, 97, 815], "arraywithloss": 52, "manipul": [53, 99, 831], "arraywithmanipul": 54, "norm": [55, 101, 913, 1045], "arraywithnorm": 56, "random": [57, 103, 919], "arraywithrandom": 58, "search": [59, 105, 931], "arraywithsearch": 60, "arraywithset": 62, "sort": [63, 109, 957, 963, 964, 965, 966], "arraywithsort": 64, "statist": [65, 111, 968], "arraywithstatist": 66, "util": [67, 113, 1001], "arraywithutil": 68, "wrap": [69, 115, 126], "add_ivy_array_instance_method": 70, "contain": [71, 76, 128, 137, 170, 172, 180, 184, 188, 190, 193, 196, 198, 202, 204, 207, 210, 213, 215, 218, 220, 223, 226, 228, 230, 232, 235, 237, 240, 243, 245, 252, 254, 257, 259, 262, 264, 267, 269, 276, 281, 283, 288, 290, 294, 296, 299, 301, 305, 307, 366, 368, 371, 375, 379, 381, 384, 388, 390, 393, 397, 401, 405, 409, 413, 417, 421, 425, 429, 433, 435, 438, 442, 444, 447, 451, 455, 459, 463, 467, 471, 475, 479, 483, 487, 491, 495, 499, 503, 507, 511, 515, 519, 523, 527, 531, 537, 539, 542, 546, 550, 554, 558, 562, 566, 568, 571, 573, 576, 578, 581, 585, 588, 590, 593, 595, 598, 600, 604, 609, 611, 620, 637, 639, 679, 681, 691, 693, 695, 697, 700, 702, 705, 707, 709, 711, 713, 715, 717, 719, 735, 737, 746, 748, 769, 818, 820, 823, 825, 828, 830, 834, 836, 839, 843, 847, 851, 855, 859, 863, 867, 869, 873, 877, 881, 885, 889, 916, 918, 923, 926, 928, 938, 940, 943, 945, 948, 950, 953, 955, 960, 962, 965, 967, 971, 975, 979, 983, 987, 991, 995, 999, 1004, 1006, 1009, 1011], "containerwithactiv": 73, "base": 74, "containerbas": 75, "containerwithcr": 80, "containerwithdatatyp": 82, "containerwithdevic": 84, "containerwithelementwis": 86, "containerwithgener": 88, "containerwithgradi": 90, "containerwithimag": 92, "containerwithlay": 94, "containerwithlinearalgebra": 96, "containerwithloss": 98, "containerwithmanipul": 100, "containerwithnorm": 102, "containerwithrandom": 104, "containerwithsearch": 106, "containerwithset": 108, "containerwithsort": 110, "containerwithstatist": 112, "containerwithutil": 114, "add_ivy_container_instance_method": 116, "deep": 117, "dive": 117, "navig": 118, "code": 118, "categor": 118, "submodul": 118, "design": [118, 133, 1012], "argument": [119, 129, 130, 131], "exampl": [119, 121, 132], "out": [119, 131], "dtype": [119, 274, 275, 276, 277], "number": 119, "oper": [119, 136, 151], "integ": 119, "sequenc": 119, "nestabl": [119, 124, 128], "docstr": [120, 121], "tan": [121, 592, 594, 595, 596], "roll": [121, 865, 866, 867, 868], "add": [121, 377, 378, 379, 380], "hypothesi": 123, "import": 123, "strategi": 123, "integr": 123, "we": 123, "need": 123, "helper": 123, "how": 123, "write": 123, "effect": 123, "bonu": 123, "extend": 123, "featur": 123, "self": 123, "consist": 123, "explicit": 123, "test_array_funct": 123, "primari": 124, "composit": 124, "mix": 124, "standalon": 124, "conveni": 124, "nativ": 127, "handl": 127, "instanc": [128, 136], "method": [128, 136, 137], "static": 128, "special": 128, "modul": [129, 130, 138, 1043, 1044], "other": [129, 130], "unsupport": 129, "inplac": 131, "updat": 131, "copi": 131, "lint": 132, "check": [132, 151], "hook": 132, "automat": 132, "reformat": 132, "befor": 132, "block": 134, "framework": [134, 135, 1019], "graph": [134, 139], "compil": [134, 139, 174, 175], "monkei": 136, "patch": 136, "construct": 137, "represent": 137, "recurs": 137, "built": 137, "ins": 137, "access": 137, "save": 137, "load": 137, "comparison": 137, "custom": [137, 151], "case": 137, "compartment": 137, "configur": 137, "network": [137, 139], "weight": 137, "state": [138, 151], "initi": [138, 1025], "optim": [138, 1047, 1051], "transpil": 139, "role": 139, "convert": [139, 1023], "model": [139, 146, 151], "builder": 141, "ecosystem": 142, "gym": [143, 150], "mech": 144, "memori": [145, 150], "robot": [147, 150], "vision": [148, 150], "extens": [149, 1012], "appli": 150, "librari": 150, "mechan": 150, "faq": 151, "maintain": 151, "version": 151, "dynam": 151, "size": 151, "shape": [151, 669], "control": 151, "flow": 151, "auto": 151, "differenti": 151, "replica": 151, "parallel": 151, "support": 151, "altern": 151, "structur": 151, "func": 152, "wrapper": 152, "handle_nest": 153, "handle_out_argu": 154, "infer_devic": 155, "infer_dtyp": 156, "inputs_to_ivy_arrai": 157, "inputs_to_native_arrai": 158, "outputs_to_ivy_arrai": 159, "to_native_arrays_and_back": 160, "gelu": [163, 1022], "leaky_relu": 164, "relu": 165, "sigmoid": 166, "softmax": 167, "softplu": [168, 169, 170, 171], "static_softplu": 172, "tanh": [173, 597, 599, 600, 601], "constant": 176, "note": [177, 194, 197], "arang": [178, 179], "static_arang": 180, "asarrai": [181, 182, 183], "static_asarrai": 184, "empti": 185, "empty_lik": [186, 187, 188, 189], "static_empty_lik": 190, "ey": [191, 192], "static_ey": 193, "from_dlpack": [194, 195, 196, 197], "static_from_dlpack": 198, "full": 199, "full_lik": [200, 201, 202, 203], "static_full_lik": 204, "linspac": [205, 206], "static_linspac": 207, "logspac": [208, 209], "static_logspac": 210, "meshgrid": [211, 212, 213, 214], "static_meshgrid": 215, "native_arrai": [216, 217, 218, 219], "static_native_arrai": 220, "ones": [221, 222], "static_on": 223, "ones_lik": [224, 225, 226, 227], "static_ones_lik": 228, "tril": [229, 231, 232, 233], "static_tril": 230, "triu": [234, 236, 237, 238], "static_triu": 235, "zero": [239, 241, 1030], "static_zero": 240, "zeros_lik": [242, 244, 245, 246], "static_zeros_lik": 243, "as_ivy_dtyp": 248, "as_native_dtyp": 249, "astyp": [250, 251, 252, 253], "static_astyp": 254, "broadcast_arrai": [255, 256, 257, 258], "static_broadcast_arrai": 259, "broadcast_to": [260, 261, 262, 263], "static_broadcast_to": 264, "can_cast": [265, 266, 267, 268], "static_can_cast": 269, "closest_valid_dtyp": 270, "default_dtyp": 271, "default_float_dtyp": 272, "default_int_dtyp": 273, "dtype_bit": 278, "finfo": [279, 280, 281, 282], "static_finfo": 283, "function_supported_dtyp": 284, "function_unsupported_dtyp": 285, "iinfo": [286, 287, 288, 289], "static_iinfo": 290, "invalid_dtyp": 291, "is_float_dtyp": [292, 293, 294, 295], "static_is_float_dtyp": 296, "is_int_dtyp": [297, 298, 299, 300], "static_is_int_dtyp": 301, "promote_typ": 302, "result_typ": [303, 304, 305, 306], "static_result_typ": 307, "set_default_dtyp": 308, "set_default_float_dtyp": 309, "set_default_int_dtyp": 310, "type_promote_arrai": 311, "unset_default_dtyp": 312, "unset_default_float_dtyp": 313, "unset_default_int_dtyp": 314, "valid_dtyp": 315, "devcloneditem": 317, "devclonedit": 318, "devclonednest": 319, "devdistitem": 320, "devdistit": 321, "devdistnest": 322, "devmapp": 323, "devmappermultiproc": 324, "multidevitem": 325, "multidevit": 326, "multidevnest": 327, "profil": 328, "as_ivy_dev": 329, "as_native_dev": 330, "clear_mem_on_dev": 331, "default_devic": 332, "dev": 333, "dev_clon": 334, "dev_clone_arrai": 335, "dev_clone_it": 336, "dev_clone_nest": 337, "dev_dist": 338, "dev_dist_arrai": 339, "dev_dist_it": 340, "dev_dist_nest": 341, "dev_unifi": 342, "dev_unify_arrai": 343, "dev_unify_it": 344, "dev_unify_nest": 345, "dev_util": 346, "get_all_ivy_arrays_on_dev": 347, "gpu_is_avail": 348, "num_cpu_cor": 349, "num_gpu": 350, "num_ivy_arrays_on_dev": 351, "percent_used_mem_on_dev": 352, "print_all_ivy_arrays_on_dev": 353, "set_default_devic": 354, "set_split_factor": 355, "split_factor": 356, "split_func_cal": 357, "to_devic": 358, "total_mem_on_dev": 359, "tpu_is_avail": 360, "unset_default_devic": 361, "used_mem_on_dev": 362, "ab": [364, 365, 366, 367], "static_ab": 368, "aco": [369, 370, 371, 372], "acosh": [373, 374, 375, 376], "static_add": 381, "asin": [382, 383, 384, 385], "asinh": [386, 387, 388, 389], "static_asinh": 390, "atan": [391, 392, 393, 394], "atan2": [395, 396, 397, 398], "atanh": [399, 400, 401, 402], "bitwise_and": [403, 404, 405, 406], "bitwise_invert": [407, 408, 409, 410], "bitwise_left_shift": [411, 412, 413, 414], "bitwise_or": [415, 416, 417, 418], "bitwise_right_shift": [419, 420, 421, 422], "bitwise_xor": [423, 424, 425, 426], "ceil": [427, 428, 429, 430], "co": [431, 432, 433, 434], "static_co": 435, "cosh": [436, 437, 438, 439], "divid": [440, 441, 442, 443], "static_divid": 444, "equal": [445, 446, 447, 448], "erf": [449, 450, 451, 452], "exp": [453, 454, 455, 456], "expm1": [457, 458, 459, 460], "floor": [461, 462, 463, 464], "floor_divid": [465, 466, 467, 468], "greater": [469, 470, 471, 472], "greater_equ": [473, 474, 475, 476], "isfinit": [477, 478, 479, 480], "isinf": [481, 482, 483, 484], "isnan": [485, 486, 487, 488], "less": [489, 490, 491, 492], "less_equ": [493, 494, 495, 496], "log": [497, 498, 499, 500], "log10": [501, 502, 503, 504], "log1p": [505, 506, 507, 508], "log2": [509, 510, 511, 512], "logaddexp": [513, 514, 515, 516], "logical_and": [517, 518, 519, 520], "logical_not": [521, 522, 523, 524], "logical_or": [525, 526, 527, 528], "logical_xor": [529, 530, 531, 532], "maximum": 533, "minimum": 534, "multipli": [535, 536, 537, 538], "static_multipli": 539, "neg": [540, 541, 542, 543], "not_equ": [544, 545, 546, 547], "posit": [548, 549, 550, 551], "pow": [552, 553, 554, 555], "remaind": [556, 557, 558, 559], "round": [560, 561, 562, 563], "sign": [564, 565, 566, 567], "static_sign": 568, "sin": [569, 570, 571, 572], "static_sin": 573, "sinh": [574, 575, 576, 577], "static_sinh": 578, "sqrt": [579, 580, 581, 582], "squar": [583, 584, 585, 586], "subtract": [587, 589, 590, 591], "static_subtract": 588, "static_tan": 593, "static_tanh": 598, "trunc": [602, 603, 604, 605], "all_equ": [607, 608, 609, 610], "static_all_equ": 611, "arg_info": 612, "arg_nam": 613, "array_equ": 614, "arrays_equ": 615, "assert_supports_inplac": 616, "cache_fn": 617, "clip_matrix_norm": 618, "clip_vector_norm": [619, 620, 621], "container_typ": 622, "copy_arrai": 623, "cumprod": 624, "cumsum": 625, "current_backend_str": 626, "default": 627, "einops_rearrang": 628, "einops_reduc": 629, "einops_repeat": 630, "exist": 631, "floormod": 632, "fourier_encod": 633, "gather": 634, "gather_nd": [635, 636, 637, 638], "static_gather_nd": 639, "get_all_arrays_in_memori": 640, "get_min_bas": 641, "get_min_denomin": 642, "get_num_dim": 643, "get_referrers_recurs": 644, "has_nan": 645, "indices_wher": 646, "inplace_arrays_support": 647, "inplace_decr": 648, "inplace_incr": 649, "inplace_upd": 650, "inplace_variables_support": 651, "is_arrai": 652, "is_ivy_arrai": 653, "is_ivy_contain": 654, "is_native_arrai": 655, "match_kwarg": 656, "multiprocess": 657, "num_arrays_in_memori": 658, "one_hot": 659, "print_all_arrays_in_memori": 660, "queue_timeout": 661, "scatter_flat": 662, "scatter_nd": 663, "set_min_bas": 664, "set_min_denomin": 665, "set_queue_timeout": 666, "set_shape_array_mod": 667, "set_tmp_dir": 668, "shape_array_mod": 670, "stable_divid": 671, "stable_pow": 672, "supports_inplac": 673, "tmp_dir": 674, "to_ivy_shap": 675, "to_list": 676, "to_native_shap": 677, "to_numpi": [678, 680, 681, 682], "static_to_numpi": 679, "to_scalar": 683, "try_else_non": 684, "unset_shape_array_mod": 685, "unstack": 686, "value_is_nan": 687, "adam_step": [689, 690, 691, 692], "static_adam_step": 693, "adam_upd": [694, 695, 696], "static_adam_upd": 697, "execute_with_gradi": 698, "gradient_descent_upd": [699, 700, 701], "static_gradient_descent_upd": 702, "is_vari": [703, 704, 705, 706], "static_is_vari": 707, "lamb_upd": [708, 709, 710], "static_lamb_upd": 711, "lars_upd": [712, 713, 714], "static_lars_upd": 715, "optimizer_upd": [716, 717, 718], "static_optimizer_upd": 719, "set_with_grad": 720, "stop_gradi": 721, "unset_with_grad": 722, "variabl": 723, "variable_data": 724, "with_grad": 725, "conv1d": [727, 1032], "conv1d_transpos": 728, "conv2d": [729, 1034], "conv2d_transpos": 730, "conv3d": [731, 1036], "conv3d_transpos": 732, "depthwise_conv2d": [733, 734, 735, 736], "static_depthwise_conv2d": 737, "dropout": [738, 1039], "lstm_updat": 740, "multi_head_attent": 741, "scaled_dot_product_attent": 742, "choleski": [744, 745, 746, 747], "static_choleski": 748, "cross": [749, 750, 751], "det": [752, 753, 754], "diagon": [755, 756, 757], "eigh": [758, 759, 760], "eigvalsh": [761, 762, 763], "inv": [764, 765, 766], "matmul": [767, 768, 769, 770], "matrix_norm": [771, 772, 773], "matrix_pow": 774, "matrix_rank": [775, 776, 777], "matrix_transpos": [778, 779, 780], "outer": [781, 782, 783], "pinv": [784, 785, 786], "qr": [787, 788, 789], "slogdet": 790, "solv": [791, 792, 793], "svd": [794, 795, 796], "svdval": [797, 798, 799], "tensordot": [800, 801, 802], "trace": [803, 804, 805], "vecdot": [806, 807, 808], "vector_norm": [809, 810, 811], "vector_to_skew_symmetric_matrix": [812, 813, 814], "binary_cross_entropi": [816, 817, 818, 819], "static_binary_cross_entropi": 820, "cross_entropi": [821, 822, 823, 824], "static_cross_entropi": 825, "sparse_cross_entropi": [826, 827, 828, 829], "static_sparse_cross_entropi": 830, "clip": [832, 833, 834, 835], "static_clip": 836, "concat": [837, 838, 839, 840], "constant_pad": [841, 842, 843, 844], "expand_dim": [845, 846, 847, 848], "flip": [849, 850, 851, 852], "permute_dim": [853, 854, 855, 856], "repeat": [857, 858, 859, 860], "reshap": [861, 862, 863, 864], "static_rol": 869, "split": 870, "squeez": [871, 872, 873, 874], "stack": [875, 876, 877, 878], "swapax": [879, 880, 881, 882], "tile": [883, 884, 885, 886], "zero_pad": [887, 888, 889, 890], "meta": 891, "fomaml_step": 892, "maml_step": 893, "reptile_step": 894, "nest": 895, "all_nested_indic": 896, "copy_nest": 897, "index_nest": 898, "insert_into_nest_at_index": 899, "insert_into_nest_at_indic": 900, "map": 901, "map_nest_at_index": 902, "map_nest_at_indic": 903, "multi_index_nest": 904, "nested_ani": 905, "nested_indices_wher": 906, "nested_map": 907, "nested_multi_map": 908, "prune_nest_at_index": 909, "prune_nest_at_indic": 910, "set_nest_at_index": 911, "set_nest_at_indic": 912, "layer_norm": [914, 915, 916, 917], "static_layer_norm": 918, "multinomi": 920, "randint": [921, 922], "static_randint": 923, "random_norm": 924, "random_uniform": [925, 926, 927], "static_random_uniform": 928, "seed": 929, "shuffl": 930, "argmax": 932, "argmin": 933, "nonzero": 934, "where": 935, "unique_al": [937, 939, 940, 941], "static_unique_al": 938, "unique_count": [942, 944, 945, 946], "static_unique_count": 943, "unique_invers": [947, 949, 950, 951], "static_unique_invers": 948, "unique_valu": [952, 954, 955, 956], "static_unique_valu": 953, "argsort": [958, 959, 960, 961], "static_argsort": 962, "static_sort": 967, "einsum": [969, 970, 971, 972], "max": [973, 974, 975, 976], "mean": [977, 978, 979, 980], "min": [981, 982, 983, 984], "prod": [985, 986, 987, 988], "std": [989, 990, 991, 992], "sum": [993, 994, 995, 996], "var": [997, 998, 999, 1000], "all": [1002, 1003, 1004, 1005], "static_al": 1006, "ani": [1007, 1008, 1009, 1010], "static_ani": 1011, "content": 1012, "overview": 1012, "quick": 1012, "start": 1012, "roadmap": [1012, 1018], "citat": 1012, "inspect": 1015, "add_array_spec": 1016, "fn_array_spec": 1017, "geglu": 1021, "to_ivy_modul": 1024, "firstlayersiren": 1026, "glorotuniform": 1027, "Ones": 1028, "siren": 1029, "conv1dtranspos": 1033, "conv2dtranspos": 1035, "conv3dtranspos": 1037, "depthwiseconv2d": 1038, "lstm": 1040, "multiheadattent": 1042, "layernorm": 1046, "adam": 1048, "lamb": 1049, "lar": 1050, "sgd": 1052, "sequenti": [1053, 1054], "verbos": 1056, "cprint": 1057}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})